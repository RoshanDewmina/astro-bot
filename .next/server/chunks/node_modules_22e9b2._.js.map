{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/src/index.ts"],"sourcesContent":["unable to read source [project]/node_modules/src/index.ts"],"names":["literalSchema","z","union","string","number","boolean","null","jsonSchema","lazy","array","record","createInsertSchema","table","refine","columns","getTableColumns","columnEntries","Object","entries","schemaEntries","fromEntries","map","name","column","mapColumnToSchema","assign","refineColumn","notNull","hasDefault","optional","nullable","object","createSelectSchema","type","Array","isArray","enumValues","length","enum","is","PgUUID","uuid","dataType","any","baseColumn","bigint","date","sType","PgChar","PgVarchar","MySqlVarChar","MySqlVarBinary","MySqlChar","SQLiteText","max"],"mappings":"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"}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/nanoid/url-alphabet/index.js"],"sourcesContent":["export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n"],"names":[],"mappings":";;;AAAO,MAAM,cACX"}},
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/nanoid/index.js"],"sourcesContent":["import { webcrypto as crypto } from 'node:crypto'\nimport { urlAlphabet as scopedUrlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nconst POOL_SIZE_MULTIPLIER = 128\nlet pool, poolOffset\nfunction fillPool(bytes) {\n  if (!pool || pool.length < bytes) {\n    pool = Buffer.allocUnsafe(bytes * POOL_SIZE_MULTIPLIER)\n    crypto.getRandomValues(pool)\n    poolOffset = 0\n  } else if (poolOffset + bytes > pool.length) {\n    crypto.getRandomValues(pool)\n    poolOffset = 0\n  }\n  poolOffset += bytes\n}\nexport function random(bytes) {\n  fillPool((bytes -= 0))\n  return pool.subarray(poolOffset - bytes, poolOffset)\n}\nexport function customRandom(alphabet, defaultSize, getRandom) {\n  let mask = (2 << (31 - Math.clz32((alphabet.length - 1) | 1))) - 1\n  let step = Math.ceil((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let i = step\n      while (i--) {\n        id += alphabet[bytes[i] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport function customAlphabet(alphabet, size = 21) {\n  return customRandom(alphabet, size, random)\n}\nexport function nanoid(size = 21) {\n  fillPool((size -= 0))\n  let id = ''\n  for (let i = poolOffset - size; i < poolOffset; i++) {\n    id += scopedUrlAlphabet[pool[i] & 63]\n  }\n  return id\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AAGA,MAAM,uBAAuB;AAC7B,IAAI,MAAM;AACV,SAAS,SAAS,KAAK;IACrB,IAAI,CAAC,QAAQ,KAAK,MAAM,GAAG,OAAO;QAChC,OAAO,OAAO,WAAW,CAAC,QAAQ;QAClC,iDAAA,CAAA,YAAM,CAAC,eAAe,CAAC;QACvB,aAAa;IACf,OAAO,IAAI,aAAa,QAAQ,KAAK,MAAM,EAAE;QAC3C,iDAAA,CAAA,YAAM,CAAC,eAAe,CAAC;QACvB,aAAa;IACf;IACA,cAAc;AAChB;AACO,SAAS,OAAO,KAAK;IAC1B,SAAU,SAAS;IACnB,OAAO,KAAK,QAAQ,CAAC,aAAa,OAAO;AAC3C;AACO,SAAS,aAAa,QAAQ,EAAE,WAAW,EAAE,SAAS;IAC3D,IAAI,OAAO,CAAC,KAAM,KAAK,KAAK,KAAK,CAAC,AAAC,SAAS,MAAM,GAAG,IAAK,EAAG,IAAI;IACjE,IAAI,OAAO,KAAK,IAAI,CAAC,AAAC,MAAM,OAAO,cAAe,SAAS,MAAM;IACjE,OAAO,CAAC,OAAO,WAAW;QACxB,IAAI,KAAK;QACT,MAAO,KAAM;YACX,IAAI,QAAQ,UAAU;YACtB,IAAI,IAAI;YACR,MAAO,IAAK;gBACV,MAAM,QAAQ,CAAC,KAAK,CAAC,EAAE,GAAG,KAAK,IAAI;gBACnC,IAAI,GAAG,MAAM,KAAK,MAAM,OAAO;YACjC;QACF;IACF;AACF;AACO,SAAS,eAAe,QAAQ,EAAE,OAAO,EAAE;IAChD,OAAO,aAAa,UAAU,MAAM;AACtC;AACO,SAAS,OAAO,OAAO,EAAE;IAC9B,SAAU,QAAQ;IAClB,IAAI,KAAK;IACT,IAAK,IAAI,IAAI,aAAa,MAAM,IAAI,YAAY,IAAK;QACnD,MAAM,oJAAA,CAAA,cAAiB,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG;IACvC;IACA,OAAO;AACT"}},
    {"offset": {"line": 153, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/ai/node_modules/nanoid/non-secure/index.js"],"sourcesContent":["let urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\nlet customAlphabet = (alphabet, defaultSize = 21) => {\n  return (size = defaultSize) => {\n    let id = ''\n    let i = size\n    while (i--) {\n      id += alphabet[(Math.random() * alphabet.length) | 0]\n    }\n    return id\n  }\n}\nlet nanoid = (size = 21) => {\n  let id = ''\n  let i = size\n  while (i--) {\n    id += urlAlphabet[(Math.random() * 64) | 0]\n  }\n  return id\n}\nexport { nanoid, customAlphabet }\n"],"names":[],"mappings":";;;;AAAA,IAAI,cACF;AACF,IAAI,iBAAiB,CAAC,UAAU,cAAc,EAAE;IAC9C,OAAO,CAAC,OAAO,WAAW;QACxB,IAAI,KAAK;QACT,IAAI,IAAI;QACR,MAAO,IAAK;YACV,MAAM,QAAQ,CAAC,AAAC,KAAK,MAAM,KAAK,SAAS,MAAM,GAAI,EAAE;QACvD;QACA,OAAO;IACT;AACF;AACA,IAAI,SAAS,CAAC,OAAO,EAAE;IACrB,IAAI,KAAK;IACT,IAAI,IAAI;IACR,MAAO,IAAK;QACV,MAAM,WAAW,CAAC,AAAC,KAAK,MAAM,KAAK,KAAM,EAAE;IAC7C;IACA,OAAO;AACT"}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@ai-sdk/ui-utils/node_modules/@ai-sdk/provider-utils/node_modules/nanoid/non-secure/index.js"],"sourcesContent":["let urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\nlet customAlphabet = (alphabet, defaultSize = 21) => {\n  return (size = defaultSize) => {\n    let id = ''\n    let i = size\n    while (i--) {\n      id += alphabet[(Math.random() * alphabet.length) | 0]\n    }\n    return id\n  }\n}\nlet nanoid = (size = 21) => {\n  let id = ''\n  let i = size\n  while (i--) {\n    id += urlAlphabet[(Math.random() * 64) | 0]\n  }\n  return id\n}\nexport { nanoid, customAlphabet }\n"],"names":[],"mappings":";;;;AAAA,IAAI,cACF;AACF,IAAI,iBAAiB,CAAC,UAAU,cAAc,EAAE;IAC9C,OAAO,CAAC,OAAO,WAAW;QACxB,IAAI,KAAK;QACT,IAAI,IAAI;QACR,MAAO,IAAK;YACV,MAAM,QAAQ,CAAC,AAAC,KAAK,MAAM,KAAK,SAAS,MAAM,GAAI,EAAE;QACvD;QACA,OAAO;IACT;AACF;AACA,IAAI,SAAS,CAAC,OAAO,EAAE;IACrB,IAAI,KAAK;IACT,IAAI,IAAI;IACR,MAAO,IAAK;QACV,MAAM,WAAW,CAAC,AAAC,KAAK,MAAM,KAAK,KAAM,EAAE;IAC7C;IACA,OAAO;AACT"}},
    {"offset": {"line": 211, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@ai-sdk/provider-utils/node_modules/nanoid/non-secure/index.js"],"sourcesContent":["let urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\nlet customAlphabet = (alphabet, defaultSize = 21) => {\n  return (size = defaultSize) => {\n    let id = ''\n    let i = size\n    while (i--) {\n      id += alphabet[(Math.random() * alphabet.length) | 0]\n    }\n    return id\n  }\n}\nlet nanoid = (size = 21) => {\n  let id = ''\n  let i = size\n  while (i--) {\n    id += urlAlphabet[(Math.random() * 64) | 0]\n  }\n  return id\n}\nexport { nanoid, customAlphabet }\n"],"names":[],"mappings":";;;;AAAA,IAAI,cACF;AACF,IAAI,iBAAiB,CAAC,UAAU,cAAc,EAAE;IAC9C,OAAO,CAAC,OAAO,WAAW;QACxB,IAAI,KAAK;QACT,IAAI,IAAI;QACR,MAAO,IAAK;YACV,MAAM,QAAQ,CAAC,AAAC,KAAK,MAAM,KAAK,SAAS,MAAM,GAAI,EAAE;QACvD;QACA,OAAO;IACT;AACF;AACA,IAAI,SAAS,CAAC,OAAO,EAAE;IACrB,IAAI,KAAK;IACT,IAAI,IAAI;IACR,MAAO,IAAK;QACV,MAAM,WAAW,CAAC,AAAC,KAAK,MAAM,KAAK,KAAM,EAAE;IAC7C;IACA,OAAO;AACT"}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 245, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/clsx/dist/clsx.mjs"],"sourcesContent":["function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;"],"names":[],"mappings":";;;;AAAA,SAAS,EAAE,CAAC;IAAE,IAAI,GAAE,GAAE,IAAE;IAAG,IAAG,YAAU,OAAO,KAAG,YAAU,OAAO,GAAE,KAAG;SAAO,IAAG,YAAU,OAAO,GAAE,IAAG,MAAM,OAAO,CAAC,IAAG;QAAC,IAAI,IAAE,EAAE,MAAM;QAAC,IAAI,IAAE,GAAE,IAAE,GAAE,IAAI,CAAC,CAAC,EAAE,IAAE,CAAC,IAAE,EAAE,CAAC,CAAC,EAAE,CAAC,KAAG,CAAC,KAAG,CAAC,KAAG,GAAG,GAAE,KAAG,CAAC;IAAC,OAAM,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,IAAE,CAAC,KAAG,CAAC,KAAG,GAAG,GAAE,KAAG,CAAC;IAAE,OAAO;AAAC;AAAQ,SAAS;IAAO,IAAI,IAAI,GAAE,GAAE,IAAE,GAAE,IAAE,IAAG,IAAE,UAAU,MAAM,EAAC,IAAE,GAAE,IAAI,CAAC,IAAE,SAAS,CAAC,EAAE,KAAG,CAAC,IAAE,EAAE,EAAE,KAAG,CAAC,KAAG,CAAC,KAAG,GAAG,GAAE,KAAG,CAAC;IAAE,OAAO;AAAC;uCAAgB"}},
    {"offset": {"line": 263, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 268, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/ai/node_modules/@ai-sdk/provider/src/errors/ai-sdk-error.ts","/turbopack/[project]/node_modules/ai/node_modules/@ai-sdk/provider/src/errors/api-call-error.ts","/turbopack/[project]/node_modules/ai/node_modules/@ai-sdk/provider/src/errors/empty-response-body-error.ts","/turbopack/[project]/node_modules/ai/node_modules/@ai-sdk/provider/src/errors/get-error-message.ts","/turbopack/[project]/node_modules/ai/node_modules/@ai-sdk/provider/src/errors/invalid-prompt-error.ts","/turbopack/[project]/node_modules/ai/node_modules/@ai-sdk/provider/src/errors/invalid-response-data-error.ts","/turbopack/[project]/node_modules/ai/node_modules/@ai-sdk/provider/src/errors/json-parse-error.ts","/turbopack/[project]/node_modules/ai/node_modules/@ai-sdk/provider/src/errors/load-api-key-error.ts","/turbopack/[project]/node_modules/ai/node_modules/@ai-sdk/provider/src/errors/load-setting-error.ts","/turbopack/[project]/node_modules/ai/node_modules/@ai-sdk/provider/src/errors/no-content-generated-error.ts","/turbopack/[project]/node_modules/ai/node_modules/@ai-sdk/provider/src/errors/no-such-model-error.ts","/turbopack/[project]/node_modules/ai/node_modules/@ai-sdk/provider/src/errors/too-many-embedding-values-for-call-error.ts","/turbopack/[project]/node_modules/ai/node_modules/@ai-sdk/provider/src/errors/type-validation-error.ts","/turbopack/[project]/node_modules/ai/node_modules/@ai-sdk/provider/src/errors/unsupported-functionality-error.ts","/turbopack/[project]/node_modules/ai/node_modules/@ai-sdk/provider/src/json-value/is-json.ts"],"sourcesContent":["/**\n * Symbol used for identifying AI SDK Error instances.\n * Enables checking if an error is an instance of AISDKError across package versions.\n */\nconst marker = 'vercel.ai.error';\nconst symbol = Symbol.for(marker);\n\n/**\n * Custom error class for AI SDK related errors.\n * @extends Error\n */\nexport class AISDKError extends Error {\n  private readonly [symbol] = true; // used in isInstance\n\n  /**\n   * The underlying cause of the error, if any.\n   */\n  readonly cause?: unknown;\n\n  /**\n   * Creates an AI SDK Error.\n   *\n   * @param {Object} params - The parameters for creating the error.\n   * @param {string} params.name - The name of the error.\n   * @param {string} params.message - The error message.\n   * @param {unknown} [params.cause] - The underlying cause of the error.\n   */\n  constructor({\n    name,\n    message,\n    cause,\n  }: {\n    name: string;\n    message: string;\n    cause?: unknown;\n  }) {\n    super(message);\n\n    this.name = name;\n    this.cause = cause;\n  }\n\n  /**\n   * Checks if the given error is an AI SDK Error.\n   * @param {unknown} error - The error to check.\n   * @returns {boolean} True if the error is an AI SDK Error, false otherwise.\n   */\n  static isInstance(error: unknown): error is AISDKError {\n    return AISDKError.hasMarker(error, marker);\n  }\n\n  protected static hasMarker(error: unknown, marker: string): boolean {\n    const markerSymbol = Symbol.for(marker);\n    return (\n      error != null &&\n      typeof error === 'object' &&\n      markerSymbol in error &&\n      typeof error[markerSymbol] === 'boolean' &&\n      error[markerSymbol] === true\n    );\n  }\n\n  /**\n   * Returns a JSON representation of the error.\n   * @returns {Object} An object containing the error's name, message, and cause.\n   *\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n    };\n  }\n}\n","import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_APICallError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class APICallError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly url: string;\n  readonly requestBodyValues: unknown;\n  readonly statusCode?: number;\n\n  readonly responseHeaders?: Record<string, string>;\n  readonly responseBody?: string;\n\n  readonly isRetryable: boolean;\n  readonly data?: unknown;\n\n  constructor({\n    message,\n    url,\n    requestBodyValues,\n    statusCode,\n    responseHeaders,\n    responseBody,\n    cause,\n    isRetryable = statusCode != null &&\n      (statusCode === 408 || // request timeout\n        statusCode === 409 || // conflict\n        statusCode === 429 || // too many requests\n        statusCode >= 500), // server error\n    data,\n  }: {\n    message: string;\n    url: string;\n    requestBodyValues: unknown;\n    statusCode?: number;\n    responseHeaders?: Record<string, string>;\n    responseBody?: string;\n    cause?: unknown;\n    isRetryable?: boolean;\n    data?: unknown;\n  }) {\n    super({ name, message, cause });\n\n    this.url = url;\n    this.requestBodyValues = requestBodyValues;\n    this.statusCode = statusCode;\n    this.responseHeaders = responseHeaders;\n    this.responseBody = responseBody;\n    this.isRetryable = isRetryable;\n    this.data = data;\n  }\n\n  static isInstance(error: unknown): error is APICallError {\n    return AISDKError.hasMarker(error, marker);\n  }\n\n  /**\n   * @deprecated Use isInstance instead.\n   */\n  static isAPICallError(error: unknown): error is APICallError {\n    return (\n      error instanceof Error &&\n      error.name === name &&\n      typeof (error as APICallError).url === 'string' &&\n      typeof (error as APICallError).requestBodyValues === 'object' &&\n      ((error as APICallError).statusCode == null ||\n        typeof (error as APICallError).statusCode === 'number') &&\n      ((error as APICallError).responseHeaders == null ||\n        typeof (error as APICallError).responseHeaders === 'object') &&\n      ((error as APICallError).responseBody == null ||\n        typeof (error as APICallError).responseBody === 'string') &&\n      ((error as APICallError).cause == null ||\n        typeof (error as APICallError).cause === 'object') &&\n      typeof (error as APICallError).isRetryable === 'boolean' &&\n      ((error as APICallError).data == null ||\n        typeof (error as APICallError).data === 'object')\n    );\n  }\n\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      url: this.url,\n      requestBodyValues: this.requestBodyValues,\n      statusCode: this.statusCode,\n      responseHeaders: this.responseHeaders,\n      responseBody: this.responseBody,\n      cause: this.cause,\n      isRetryable: this.isRetryable,\n      data: this.data,\n    };\n  }\n}\n","import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_EmptyResponseBodyError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class EmptyResponseBodyError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  constructor({ message = 'Empty response body' }: { message?: string } = {}) {\n    super({ name, message });\n  }\n\n  static isInstance(error: unknown): error is EmptyResponseBodyError {\n    return AISDKError.hasMarker(error, marker);\n  }\n\n  /**\n   * @deprecated use `isInstance` instead\n   */\n  static isEmptyResponseBodyError(\n    error: unknown,\n  ): error is EmptyResponseBodyError {\n    return error instanceof Error && error.name === name;\n  }\n}\n","export function getErrorMessage(error: unknown | undefined) {\n  if (error == null) {\n    return 'unknown error';\n  }\n\n  if (typeof error === 'string') {\n    return error;\n  }\n\n  if (error instanceof Error) {\n    return error.message;\n  }\n\n  return JSON.stringify(error);\n}\n","import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_InvalidPromptError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\n/**\n * A prompt is invalid. This error should be thrown by providers when they cannot\n * process a prompt.\n */\nexport class InvalidPromptError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly prompt: unknown;\n\n  constructor({\n    prompt,\n    message,\n    cause,\n  }: {\n    prompt: unknown;\n    message: string;\n    cause?: unknown;\n  }) {\n    super({ name, message: `Invalid prompt: ${message}`, cause });\n\n    this.prompt = prompt;\n  }\n\n  static isInstance(error: unknown): error is InvalidPromptError {\n    return AISDKError.hasMarker(error, marker);\n  }\n\n  /**\n   * @deprecated use `isInstance` instead\n   */\n  static isInvalidPromptError(error: unknown): error is InvalidPromptError {\n    return error instanceof Error && error.name === name && prompt != null;\n  }\n\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n\n      prompt: this.prompt,\n    };\n  }\n}\n","import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_InvalidResponseDataError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\n/**\n * Server returned a response with invalid data content.\n * This should be thrown by providers when they cannot parse the response from the API.\n */\nexport class InvalidResponseDataError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly data: unknown;\n\n  constructor({\n    data,\n    message = `Invalid response data: ${JSON.stringify(data)}.`,\n  }: {\n    data: unknown;\n    message?: string;\n  }) {\n    super({ name, message });\n\n    this.data = data;\n  }\n\n  static isInstance(error: unknown): error is InvalidResponseDataError {\n    return AISDKError.hasMarker(error, marker);\n  }\n\n  /**\n   * @deprecated use `isInstance` instead\n   */\n  static isInvalidResponseDataError(\n    error: unknown,\n  ): error is InvalidResponseDataError {\n    return (\n      error instanceof Error &&\n      error.name === name &&\n      (error as InvalidResponseDataError).data != null\n    );\n  }\n\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n\n      data: this.data,\n    };\n  }\n}\n","import { AISDKError } from './ai-sdk-error';\nimport { getErrorMessage } from './get-error-message';\n\nconst name = 'AI_JSONParseError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class JSONParseError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly text: string;\n\n  constructor({ text, cause }: { text: string; cause: unknown }) {\n    super({\n      name,\n      message:\n        `JSON parsing failed: ` +\n        `Text: ${text}.\\n` +\n        `Error message: ${getErrorMessage(cause)}`,\n      cause,\n    });\n\n    this.text = text;\n  }\n\n  static isInstance(error: unknown): error is JSONParseError {\n    return AISDKError.hasMarker(error, marker);\n  }\n\n  /**\n   * @deprecated use `isInstance` instead\n   */\n  static isJSONParseError(error: unknown): error is JSONParseError {\n    return (\n      error instanceof Error &&\n      error.name === name &&\n      'text' in error &&\n      typeof error.text === 'string'\n    );\n  }\n\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      cause: this.cause,\n      stack: this.stack,\n\n      valueText: this.text,\n    };\n  }\n}\n","import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_LoadAPIKeyError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class LoadAPIKeyError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  constructor({ message }: { message: string }) {\n    super({ name, message });\n  }\n\n  static isInstance(error: unknown): error is LoadAPIKeyError {\n    return AISDKError.hasMarker(error, marker);\n  }\n\n  /**\n   * @deprecated Use isInstance instead.\n   */\n  static isLoadAPIKeyError(error: unknown): error is LoadAPIKeyError {\n    return error instanceof Error && error.name === name;\n  }\n}\n","import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_LoadSettingError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class LoadSettingError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  constructor({ message }: { message: string }) {\n    super({ name, message });\n  }\n\n  static isInstance(error: unknown): error is LoadSettingError {\n    return AISDKError.hasMarker(error, marker);\n  }\n\n  /**\n   * @deprecated Use isInstance instead.\n   */\n  static isLoadSettingError(error: unknown): error is LoadSettingError {\n    return error instanceof Error && error.name === name;\n  }\n}\n","import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_NoContentGeneratedError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\n/**\nThrown when the AI provider fails to generate any content.\n */\nexport class NoContentGeneratedError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  constructor({\n    message = 'No content generated.',\n  }: { message?: string } = {}) {\n    super({ name, message });\n  }\n\n  static isInstance(error: unknown): error is NoContentGeneratedError {\n    return AISDKError.hasMarker(error, marker);\n  }\n\n  /**\n   * @deprecated Use isInstance instead.\n   */\n  static isNoContentGeneratedError(\n    error: unknown,\n  ): error is NoContentGeneratedError {\n    return error instanceof Error && error.name === name;\n  }\n\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      cause: this.cause,\n      message: this.message,\n      stack: this.stack,\n    };\n  }\n}\n","import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_NoSuchModelError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class NoSuchModelError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly modelId: string;\n  readonly modelType: 'languageModel' | 'textEmbeddingModel';\n\n  constructor({\n    errorName = name,\n    modelId,\n    modelType,\n    message = `No such ${modelType}: ${modelId}`,\n  }: {\n    errorName?: string;\n    modelId: string;\n    modelType: 'languageModel' | 'textEmbeddingModel';\n    message?: string;\n  }) {\n    super({ name: errorName, message });\n\n    this.modelId = modelId;\n    this.modelType = modelType;\n  }\n\n  static isInstance(error: unknown): error is NoSuchModelError {\n    return AISDKError.hasMarker(error, marker);\n  }\n\n  /**\n   * @deprecated use `isInstance` instead\n   */\n  static isNoSuchModelError(error: unknown): error is NoSuchModelError {\n    return (\n      error instanceof Error &&\n      error.name === name &&\n      typeof (error as NoSuchModelError).modelId === 'string' &&\n      typeof (error as NoSuchModelError).modelType === 'string'\n    );\n  }\n\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n\n      modelId: this.modelId,\n      modelType: this.modelType,\n    };\n  }\n}\n","import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_TooManyEmbeddingValuesForCallError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class TooManyEmbeddingValuesForCallError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly provider: string;\n  readonly modelId: string;\n  readonly maxEmbeddingsPerCall: number;\n  readonly values: Array<unknown>;\n\n  constructor(options: {\n    provider: string;\n    modelId: string;\n    maxEmbeddingsPerCall: number;\n    values: Array<unknown>;\n  }) {\n    super({\n      name,\n      message:\n        `Too many values for a single embedding call. ` +\n        `The ${options.provider} model \"${options.modelId}\" can only embed up to ` +\n        `${options.maxEmbeddingsPerCall} values per call, but ${options.values.length} values were provided.`,\n    });\n\n    this.provider = options.provider;\n    this.modelId = options.modelId;\n    this.maxEmbeddingsPerCall = options.maxEmbeddingsPerCall;\n    this.values = options.values;\n  }\n\n  static isInstance(\n    error: unknown,\n  ): error is TooManyEmbeddingValuesForCallError {\n    return AISDKError.hasMarker(error, marker);\n  }\n\n  /**\n   * @deprecated use `isInstance` instead\n   */\n  static isTooManyEmbeddingValuesForCallError(\n    error: unknown,\n  ): error is TooManyEmbeddingValuesForCallError {\n    return (\n      error instanceof Error &&\n      error.name === name &&\n      'provider' in error &&\n      typeof error.provider === 'string' &&\n      'modelId' in error &&\n      typeof error.modelId === 'string' &&\n      'maxEmbeddingsPerCall' in error &&\n      typeof error.maxEmbeddingsPerCall === 'number' &&\n      'values' in error &&\n      Array.isArray(error.values)\n    );\n  }\n\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n\n      provider: this.provider,\n      modelId: this.modelId,\n      maxEmbeddingsPerCall: this.maxEmbeddingsPerCall,\n      values: this.values,\n    };\n  }\n}\n","import { AISDKError } from './ai-sdk-error';\nimport { getErrorMessage } from './get-error-message';\n\nconst name = 'AI_TypeValidationError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class TypeValidationError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly value: unknown;\n\n  constructor({ value, cause }: { value: unknown; cause: unknown }) {\n    super({\n      name,\n      message:\n        `Type validation failed: ` +\n        `Value: ${JSON.stringify(value)}.\\n` +\n        `Error message: ${getErrorMessage(cause)}`,\n      cause,\n    });\n\n    this.value = value;\n  }\n\n  static isInstance(error: unknown): error is TypeValidationError {\n    return AISDKError.hasMarker(error, marker);\n  }\n\n  /**\n   * Wraps an error into a TypeValidationError.\n   * If the cause is already a TypeValidationError with the same value, it returns the cause.\n   * Otherwise, it creates a new TypeValidationError.\n   *\n   * @param {Object} params - The parameters for wrapping the error.\n   * @param {unknown} params.value - The value that failed validation.\n   * @param {unknown} params.cause - The original error or cause of the validation failure.\n   * @returns {TypeValidationError} A TypeValidationError instance.\n   */\n  static wrap({\n    value,\n    cause,\n  }: {\n    value: unknown;\n    cause: unknown;\n  }): TypeValidationError {\n    return TypeValidationError.isInstance(cause) && cause.value === value\n      ? cause\n      : new TypeValidationError({ value, cause });\n  }\n\n  /**\n   * @deprecated use `isInstance` instead\n   */\n  static isTypeValidationError(error: unknown): error is TypeValidationError {\n    return error instanceof Error && error.name === name;\n  }\n\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      cause: this.cause,\n      stack: this.stack,\n\n      value: this.value,\n    };\n  }\n}\n","import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_UnsupportedFunctionalityError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class UnsupportedFunctionalityError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly functionality: string;\n\n  constructor({ functionality }: { functionality: string }) {\n    super({\n      name,\n      message: `'${functionality}' functionality not supported.`,\n    });\n\n    this.functionality = functionality;\n  }\n\n  static isInstance(error: unknown): error is UnsupportedFunctionalityError {\n    return AISDKError.hasMarker(error, marker);\n  }\n\n  /**\n   * @deprecated Use isInstance instead.\n   */\n  static isUnsupportedFunctionalityError(\n    error: unknown,\n  ): error is UnsupportedFunctionalityError {\n    return (\n      error instanceof Error &&\n      error.name === name &&\n      typeof (error as UnsupportedFunctionalityError).functionality === 'string'\n    );\n  }\n\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n\n      functionality: this.functionality,\n    };\n  }\n}\n","import { JSONArray, JSONObject, JSONValue } from './json-value';\n\nexport function isJSONValue(value: unknown): value is JSONValue {\n  if (\n    value === null ||\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    typeof value === 'boolean'\n  ) {\n    return true;\n  }\n\n  if (Array.isArray(value)) {\n    return value.every(isJSONValue);\n  }\n\n  if (typeof value === 'object') {\n    return Object.entries(value).every(\n      ([key, val]) => typeof key === 'string' && isJSONValue(val),\n    );\n  }\n\n  return false;\n}\n\nexport function isJSONArray(value: unknown): value is JSONArray {\n  return Array.isArray(value) && value.every(isJSONValue);\n}\n\nexport function isJSONObject(value: unknown): value is JSONObject {\n  return (\n    value != null &&\n    typeof value === 'object' &&\n    Object.entries(value).every(\n      ([key, val]) => typeof key === 'string' && isJSONValue(val),\n    )\n  );\n}\n"],"names":["name","marker","symbol","_a","prompt"],"mappings":";;;;;;;;;;;;;;;;;;;;AAIA,IAAM,SAAS;AACf,IAAM,SAAS,OAAO,GAAA,CAAI;AAL1B,IAAA;AAWO,IAAM,cAAN,MAAM,oBAAmB;IAAM;;;;;;;GAAA,GAgBpC,YAAY,EACV,MAAAA,MAAAA,EACA,OAAA,EACA,KAAA,EACF,CAIG;QACD,KAAA,CAAM;QAxBR,IAAA,CAAkB,GAAA,GAAU;QA0B1B,IAAA,CAAK,IAAA,GAAOA;QACZ,IAAA,CAAK,KAAA,GAAQ;IACf;IAAA;;;;GAAA,GAOA,OAAO,WAAW,KAAA,EAAqC;QACrD,OAAO,YAAW,SAAA,CAAU,OAAO;IACrC;IAEA,OAAiB,UAAU,KAAA,EAAgBC,QAAAA,EAAyB;QAClE,MAAM,eAAe,OAAO,GAAA,CAAIA;QAChC,OACE,SAAS,QACT,OAAO,UAAU,YACjB,gBAAgB,SAChB,OAAO,KAAA,CAAM,aAAY,KAAM,aAC/B,KAAA,CAAM,aAAY,KAAM;IAE5B;IAAA;;;;;GAAA,GAQA,SAAS;QACP,OAAO;YACL,MAAM,IAAA,CAAK,IAAA;YACX,SAAS,IAAA,CAAK,OAAA;QAChB;IACF;AACF;AA9DoB,KAAA;AADb,IAAM,aAAN;;ACTP,IAAM,OAAO;AACb,IAAMA,UAAS,CAAA,gBAAA,EAAmB,KAAI,CAAA;AACtC,IAAMC,UAAS,OAAO,GAAA,CAAID;AAJ1B,IAAAE;AAMO,IAAM,eAAN,cAA2B;IAahC,YAAY,EACV,OAAA,EACA,GAAA,EACA,iBAAA,EACA,UAAA,EACA,eAAA,EACA,YAAA,EACA,KAAA,EACA,cAAc,cAAc,QAAA,CACzB,eAAe,OAAA,kBAAA;IACd,eAAe,OAAA,WAAA;IACf,eAAe,OAAA,oBAAA;IACf,cAAc,GAAA,CAAA,EAAA,eAAA;IAClB,IAAA,EACF,CAUG;QACD,KAAA,CAAM;YAAE;YAAM;YAAS;QAAM;QArC/B,IAAA,CAAkBA,IAAAA,GAAU;QAuC1B,IAAA,CAAK,GAAA,GAAM;QACX,IAAA,CAAK,iBAAA,GAAoB;QACzB,IAAA,CAAK,UAAA,GAAa;QAClB,IAAA,CAAK,eAAA,GAAkB;QACvB,IAAA,CAAK,YAAA,GAAe;QACpB,IAAA,CAAK,WAAA,GAAc;QACnB,IAAA,CAAK,IAAA,GAAO;IACd;IAEA,OAAO,WAAW,KAAA,EAAuC;QACvD,OAAO,WAAW,SAAA,CAAU,OAAOF;IACrC;IAAA;;GAAA,GAKA,OAAO,eAAe,KAAA,EAAuC;QAC3D,OACE,iBAAiB,SACjB,MAAM,IAAA,KAAS,QACf,OAAQ,MAAuB,GAAA,KAAQ,YACvC,OAAQ,MAAuB,iBAAA,KAAsB,YAAA,CACnD,MAAuB,UAAA,IAAc,QACrC,OAAQ,MAAuB,UAAA,KAAe,QAAA,KAAA,CAC9C,MAAuB,eAAA,IAAmB,QAC1C,OAAQ,MAAuB,eAAA,KAAoB,QAAA,KAAA,CACnD,MAAuB,YAAA,IAAgB,QACvC,OAAQ,MAAuB,YAAA,KAAiB,QAAA,KAAA,CAChD,MAAuB,KAAA,IAAS,QAChC,OAAQ,MAAuB,KAAA,KAAU,QAAA,KAC3C,OAAQ,MAAuB,WAAA,KAAgB,aAAA,CAC7C,MAAuB,IAAA,IAAQ,QAC/B,OAAQ,MAAuB,IAAA,KAAS,QAAA;IAE9C;IAAA;;GAAA,GAKA,SAAS;QACP,OAAO;YACL,MAAM,IAAA,CAAK,IAAA;YACX,SAAS,IAAA,CAAK,OAAA;YACd,KAAK,IAAA,CAAK,GAAA;YACV,mBAAmB,IAAA,CAAK,iBAAA;YACxB,YAAY,IAAA,CAAK,UAAA;YACjB,iBAAiB,IAAA,CAAK,eAAA;YACtB,cAAc,IAAA,CAAK,YAAA;YACnB,OAAO,IAAA,CAAK,KAAA;YACZ,aAAa,IAAA,CAAK,WAAA;YAClB,MAAM,IAAA,CAAK,IAAA;QACb;IACF;AACF;AA5FoBE,MAAAD;;ACLpB,IAAMF,QAAO;AACb,IAAMC,UAAS,CAAA,gBAAA,EAAmBD,MAAI,CAAA;AACtC,IAAME,UAAS,OAAO,GAAA,CAAID;AAJ1B,IAAAE;AAMO,IAAM,yBAAN,cAAqC;IAAW,qBAAA;IAGrD,YAAY,EAAE,UAAU,qBAAA,EAAsB,GAA0B,CAAC,CAAA,CAAG;QAC1E,KAAA,CAAM;YAAE,MAAAH;YAAM;QAAQ;QAHxB,IAAA,CAAkBG,IAAAA,GAAU;IAI5B;IAEA,OAAO,WAAW,KAAA,EAAiD;QACjE,OAAO,WAAW,SAAA,CAAU,OAAOF;IACrC;IAAA;;GAAA,GAKA,OAAO,yBACL,KAAA,EACiC;QACjC,OAAO,iBAAiB,SAAS,MAAM,IAAA,KAASD;IAClD;AACF;AAlBoBG,MAAAD;;ACPb,SAAS,gBAAgB,KAAA;IAC9B,IAAI,SAAS,MAAM;QACjB,OAAO;IACT;IAEA,IAAI,OAAO,UAAU,UAAU;QAC7B,OAAO;IACT;IAEA,IAAI,iBAAiB,OAAO;QAC1B,OAAO,MAAM,OAAA;IACf;IAEA,OAAO,KAAK,SAAA,CAAU;AACxB;;ACZA,IAAMF,QAAO;AACb,IAAMC,UAAS,CAAA,gBAAA,EAAmBD,MAAI,CAAA;AACtC,IAAME,UAAS,OAAO,GAAA,CAAID;AAJ1B,IAAAE;AAUO,IAAM,qBAAN,cAAiC;IAKtC,YAAY,EACV,QAAAC,OAAAA,EACA,OAAA,EACA,KAAA,EACF,CAIG;QACD,KAAA,CAAM;YAAE,MAAAJ;YAAM,SAAS,CAAA,gBAAA,EAAmB,QAAO,CAAA;YAAI;QAAM;QAb7D,IAAA,CAAkBG,IAAAA,GAAU;QAe1B,IAAA,CAAK,MAAA,GAASC;IAChB;IAEA,OAAO,WAAW,KAAA,EAA6C;QAC7D,OAAO,WAAW,SAAA,CAAU,OAAOH;IACrC;IAAA;;GAAA,GAKA,OAAO,qBAAqB,KAAA,EAA6C;QACvE,OAAO,iBAAiB,SAAS,MAAM,IAAA,KAASD,SAAQ,UAAU;IACpE;IAAA;;GAAA,GAKA,SAAS;QACP,OAAO;YACL,MAAM,IAAA,CAAK,IAAA;YACX,SAAS,IAAA,CAAK,OAAA;YACd,OAAO,IAAA,CAAK,KAAA;YAEZ,QAAQ,IAAA,CAAK,MAAA;QACf;IACF;AACF;AAzCoBG,MAAAD;;ACTpB,IAAMF,QAAO;AACb,IAAMC,UAAS,CAAA,gBAAA,EAAmBD,MAAI,CAAA;AACtC,IAAME,UAAS,OAAO,GAAA,CAAID;AAJ1B,IAAAE;AAUO,IAAM,2BAAN,cAAuC;IAK5C,YAAY,EACV,IAAA,EACA,UAAU,CAAA,uBAAA,EAA0B,KAAK,SAAA,CAAU,MAAK,CAAA,CAAA,EAC1D,CAGG;QACD,KAAA,CAAM;YAAE,MAAAH;YAAM;QAAQ;QAXxB,IAAA,CAAkBG,IAAAA,GAAU;QAa1B,IAAA,CAAK,IAAA,GAAO;IACd;IAEA,OAAO,WAAW,KAAA,EAAmD;QACnE,OAAO,WAAW,SAAA,CAAU,OAAOF;IACrC;IAAA;;GAAA,GAKA,OAAO,2BACL,KAAA,EACmC;QACnC,OACE,iBAAiB,SACjB,MAAM,IAAA,KAASD,SACd,MAAmC,IAAA,IAAQ;IAEhD;IAAA;;GAAA,GAKA,SAAS;QACP,OAAO;YACL,MAAM,IAAA,CAAK,IAAA;YACX,SAAS,IAAA,CAAK,OAAA;YACd,OAAO,IAAA,CAAK,KAAA;YAEZ,MAAM,IAAA,CAAK,IAAA;QACb;IACF;AACF;AA7CoBG,MAAAD;;ACRpB,IAAMF,QAAO;AACb,IAAMC,UAAS,CAAA,gBAAA,EAAmBD,MAAI,CAAA;AACtC,IAAME,UAAS,OAAO,GAAA,CAAID;AAL1B,IAAAE;AAOO,IAAM,iBAAN,cAA6B;IAKlC,YAAY,EAAE,IAAA,EAAM,KAAA,EAAM,CAAqC;QAC7D,KAAA,CAAM;YACJ,MAAAH;YACA,SACE,CAAA,2BAAA,EACS,KAAI;eAAA,EACK,gBAAgB,OAAM,CAAA;YAC1C;QACF;QAZF,IAAA,CAAkBG,IAAAA,GAAU;QAc1B,IAAA,CAAK,IAAA,GAAO;IACd;IAEA,OAAO,WAAW,KAAA,EAAyC;QACzD,OAAO,WAAW,SAAA,CAAU,OAAOF;IACrC;IAAA;;GAAA,GAKA,OAAO,iBAAiB,KAAA,EAAyC;QAC/D,OACE,iBAAiB,SACjB,MAAM,IAAA,KAASD,SACf,UAAU,SACV,OAAO,MAAM,IAAA,KAAS;IAE1B;IAAA;;GAAA,GAKA,SAAS;QACP,OAAO;YACL,MAAM,IAAA,CAAK,IAAA;YACX,SAAS,IAAA,CAAK,OAAA;YACd,OAAO,IAAA,CAAK,KAAA;YACZ,OAAO,IAAA,CAAK,KAAA;YAEZ,WAAW,IAAA,CAAK,IAAA;QAClB;IACF;AACF;AA9CoBG,MAAAD;;ACNpB,IAAMF,QAAO;AACb,IAAMC,UAAS,CAAA,gBAAA,EAAmBD,MAAI,CAAA;AACtC,IAAME,UAAS,OAAO,GAAA,CAAID;AAJ1B,IAAAE;AAMO,IAAM,kBAAN,cAA8B;IAAW,qBAAA;IAG9C,YAAY,EAAE,OAAA,EAAQ,CAAwB;QAC5C,KAAA,CAAM;YAAE,MAAAH;YAAM;QAAQ;QAHxB,IAAA,CAAkBG,IAAAA,GAAU;IAI5B;IAEA,OAAO,WAAW,KAAA,EAA0C;QAC1D,OAAO,WAAW,SAAA,CAAU,OAAOF;IACrC;IAAA;;GAAA,GAKA,OAAO,kBAAkB,KAAA,EAA0C;QACjE,OAAO,iBAAiB,SAAS,MAAM,IAAA,KAASD;IAClD;AACF;AAhBoBG,MAAAD;;ACLpB,IAAMF,QAAO;AACb,IAAMC,UAAS,CAAA,gBAAA,EAAmBD,MAAI,CAAA;AACtC,IAAME,UAAS,OAAO,GAAA,CAAID;AAJ1B,IAAAE;AAMO,IAAM,mBAAN,cAA+B;IAAW,qBAAA;IAG/C,YAAY,EAAE,OAAA,EAAQ,CAAwB;QAC5C,KAAA,CAAM;YAAE,MAAAH;YAAM;QAAQ;QAHxB,IAAA,CAAkBG,IAAAA,GAAU;IAI5B;IAEA,OAAO,WAAW,KAAA,EAA2C;QAC3D,OAAO,WAAW,SAAA,CAAU,OAAOF;IACrC;IAAA;;GAAA,GAKA,OAAO,mBAAmB,KAAA,EAA2C;QACnE,OAAO,iBAAiB,SAAS,MAAM,IAAA,KAASD;IAClD;AACF;AAhBoBG,MAAAD;;ACLpB,IAAMF,QAAO;AACb,IAAMC,UAAS,CAAA,gBAAA,EAAmBD,MAAI,CAAA;AACtC,IAAME,UAAS,OAAO,GAAA,CAAID;AAJ1B,IAAAE;AASO,IAAM,0BAAN,cAAsC;IAAW,qBAAA;IAGtD,YAAY,EACV,UAAU,uBAAA,EACZ,GAA0B,CAAC,CAAA,CAAG;QAC5B,KAAA,CAAM;YAAE,MAAAH;YAAM;QAAQ;QALxB,IAAA,CAAkBG,IAAAA,GAAU;IAM5B;IAEA,OAAO,WAAW,KAAA,EAAkD;QAClE,OAAO,WAAW,SAAA,CAAU,OAAOF;IACrC;IAAA;;GAAA,GAKA,OAAO,0BACL,KAAA,EACkC;QAClC,OAAO,iBAAiB,SAAS,MAAM,IAAA,KAASD;IAClD;IAAA;;GAAA,GAKA,SAAS;QACP,OAAO;YACL,MAAM,IAAA,CAAK,IAAA;YACX,OAAO,IAAA,CAAK,KAAA;YACZ,SAAS,IAAA,CAAK,OAAA;YACd,OAAO,IAAA,CAAK,KAAA;QACd;IACF;AACF;AAhCoBG,MAAAD;;ACRpB,IAAMF,QAAO;AACb,IAAMC,WAAS,CAAA,gBAAA,EAAmBD,MAAI,CAAA;AACtC,IAAME,WAAS,OAAO,GAAA,CAAID;AAJ1B,IAAAE;AAMO,IAAM,mBAAN,cAA+B;IAMpC,YAAY,EACV,YAAYH,KAAAA,EACZ,OAAA,EACA,SAAA,EACA,UAAU,CAAA,QAAA,EAAW,UAAS,EAAA,EAAK,QAAO,CAAA,EAC5C,CAKG;QACD,KAAA,CAAM;YAAE,MAAM;YAAW;QAAQ;QAhBnC,IAAA,CAAkBG,KAAAA,GAAU;QAkB1B,IAAA,CAAK,OAAA,GAAU;QACf,IAAA,CAAK,SAAA,GAAY;IACnB;IAEA,OAAO,WAAW,KAAA,EAA2C;QAC3D,OAAO,WAAW,SAAA,CAAU,OAAOF;IACrC;IAAA;;GAAA,GAKA,OAAO,mBAAmB,KAAA,EAA2C;QACnE,OACE,iBAAiB,SACjB,MAAM,IAAA,KAASD,SACf,OAAQ,MAA2B,OAAA,KAAY,YAC/C,OAAQ,MAA2B,SAAA,KAAc;IAErD;IAAA;;GAAA,GAKA,SAAS;QACP,OAAO;YACL,MAAM,IAAA,CAAK,IAAA;YACX,SAAS,IAAA,CAAK,OAAA;YACd,OAAO,IAAA,CAAK,KAAA;YAEZ,SAAS,IAAA,CAAK,OAAA;YACd,WAAW,IAAA,CAAK,SAAA;QAClB;IACF;AACF;AAnDoBG,OAAAD;;ACLpB,IAAMF,SAAO;AACb,IAAMC,WAAS,CAAA,gBAAA,EAAmBD,OAAI,CAAA;AACtC,IAAME,WAAS,OAAO,GAAA,CAAID;AAJ1B,IAAAE;AAMO,IAAM,qCAAN,cAAiD;IAQtD,YAAY,OAAA,CAKT;QACD,KAAA,CAAM;YACJ,MAAAH;YACA,SACE,CAAA,iDAAA,EACO,QAAQ,QAAQ,CAAA,QAAA,EAAW,QAAQ,OAAO,CAAA,uBAAA,EAC9C,QAAQ,oBAAoB,CAAA,sBAAA,EAAyB,QAAQ,MAAA,CAAO,MAAM,CAAA,sBAAA,CAAA;QACjF;QAnBF,IAAA,CAAkBG,KAAAA,GAAU;QAqB1B,IAAA,CAAK,QAAA,GAAW,QAAQ,QAAA;QACxB,IAAA,CAAK,OAAA,GAAU,QAAQ,OAAA;QACvB,IAAA,CAAK,oBAAA,GAAuB,QAAQ,oBAAA;QACpC,IAAA,CAAK,MAAA,GAAS,QAAQ,MAAA;IACxB;IAEA,OAAO,WACL,KAAA,EAC6C;QAC7C,OAAO,WAAW,SAAA,CAAU,OAAOF;IACrC;IAAA;;GAAA,GAKA,OAAO,qCACL,KAAA,EAC6C;QAC7C,OACE,iBAAiB,SACjB,MAAM,IAAA,KAASD,UACf,cAAc,SACd,OAAO,MAAM,QAAA,KAAa,YAC1B,aAAa,SACb,OAAO,MAAM,OAAA,KAAY,YACzB,0BAA0B,SAC1B,OAAO,MAAM,oBAAA,KAAyB,YACtC,YAAY,SACZ,MAAM,OAAA,CAAQ,MAAM,MAAM;IAE9B;IAAA;;GAAA,GAKA,SAAS;QACP,OAAO;YACL,MAAM,IAAA,CAAK,IAAA;YACX,SAAS,IAAA,CAAK,OAAA;YACd,OAAO,IAAA,CAAK,KAAA;YAEZ,UAAU,IAAA,CAAK,QAAA;YACf,SAAS,IAAA,CAAK,OAAA;YACd,sBAAsB,IAAA,CAAK,oBAAA;YAC3B,QAAQ,IAAA,CAAK,MAAA;QACf;IACF;AACF;AApEoBG,OAAAD;;ACJpB,IAAMF,SAAO;AACb,IAAMC,WAAS,CAAA,gBAAA,EAAmBD,OAAI,CAAA;AACtC,IAAME,WAAS,OAAO,GAAA,CAAID;AAL1B,IAAAE;AAOO,IAAM,uBAAN,MAAM,6BAA4B;IAKvC,YAAY,EAAE,KAAA,EAAO,KAAA,EAAM,CAAuC;QAChE,KAAA,CAAM;YACJ,MAAAH;YACA,SACE,CAAA,+BAAA,EACU,KAAK,SAAA,CAAU,OAAM;eAAA,EACb,gBAAgB,OAAM,CAAA;YAC1C;QACF;QAZF,IAAA,CAAkBG,KAAAA,GAAU;QAc1B,IAAA,CAAK,KAAA,GAAQ;IACf;IAEA,OAAO,WAAW,KAAA,EAA8C;QAC9D,OAAO,WAAW,SAAA,CAAU,OAAOF;IACrC;IAAA;;;;;;;;;GAAA,GAYA,OAAO,KAAK,EACV,KAAA,EACA,KAAA,EACF,EAGwB;QACtB,OAAO,qBAAoB,UAAA,CAAW,UAAU,MAAM,KAAA,KAAU,QAC5D,QACA,IAAI,qBAAoB;YAAE;YAAO;QAAM;IAC7C;IAAA;;GAAA,GAKA,OAAO,sBAAsB,KAAA,EAA8C;QACzE,OAAO,iBAAiB,SAAS,MAAM,IAAA,KAASD;IAClD;IAAA;;GAAA,GAKA,SAAS;QACP,OAAO;YACL,MAAM,IAAA,CAAK,IAAA;YACX,SAAS,IAAA,CAAK,OAAA;YACd,OAAO,IAAA,CAAK,KAAA;YACZ,OAAO,IAAA,CAAK,KAAA;YAEZ,OAAO,IAAA,CAAK,KAAA;QACd;IACF;AACF;AA/DoBG,OAAAD;AADb,IAAM,sBAAN;;ACLP,IAAMF,SAAO;AACb,IAAMC,WAAS,CAAA,gBAAA,EAAmBD,OAAI,CAAA;AACtC,IAAME,WAAS,OAAO,GAAA,CAAID;AAJ1B,IAAAE;AAMO,IAAM,gCAAN,cAA4C;IAKjD,YAAY,EAAE,aAAA,EAAc,CAA8B;QACxD,KAAA,CAAM;YACJ,MAAAH;YACA,SAAS,CAAA,CAAA,EAAI,cAAa,8BAAA,CAAA;QAC5B;QARF,IAAA,CAAkBG,KAAAA,GAAU;QAU1B,IAAA,CAAK,aAAA,GAAgB;IACvB;IAEA,OAAO,WAAW,KAAA,EAAwD;QACxE,OAAO,WAAW,SAAA,CAAU,OAAOF;IACrC;IAAA;;GAAA,GAKA,OAAO,gCACL,KAAA,EACwC;QACxC,OACE,iBAAiB,SACjB,MAAM,IAAA,KAASD,UACf,OAAQ,MAAwC,aAAA,KAAkB;IAEtE;IAAA;;GAAA,GAKA,SAAS;QACP,OAAO;YACL,MAAM,IAAA,CAAK,IAAA;YACX,SAAS,IAAA,CAAK,OAAA;YACd,OAAO,IAAA,CAAK,KAAA;YAEZ,eAAe,IAAA,CAAK,aAAA;QACtB;IACF;AACF;AA1CoBG,OAAAD;;ACLb,SAAS,YAAY,KAAA;IAC1B,IACE,UAAU,QACV,OAAO,UAAU,YACjB,OAAO,UAAU,YACjB,OAAO,UAAU,WACjB;QACA,OAAO;IACT;IAEA,IAAI,MAAM,OAAA,CAAQ,QAAQ;QACxB,OAAO,MAAM,KAAA,CAAM;IACrB;IAEA,IAAI,OAAO,UAAU,UAAU;QAC7B,OAAO,OAAO,OAAA,CAAQ,OAAO,KAAA,CAC3B,CAAC,CAAC,KAAK,IAAG,GAAM,OAAO,QAAQ,YAAY,YAAY;IAE3D;IAEA,OAAO;AACT;AAEO,SAAS,YAAY,KAAA;IAC1B,OAAO,MAAM,OAAA,CAAQ,UAAU,MAAM,KAAA,CAAM;AAC7C;AAEO,SAAS,aAAa,KAAA;IAC3B,OACE,SAAS,QACT,OAAO,UAAU,YACjB,OAAO,OAAA,CAAQ,OAAO,KAAA,CACpB,CAAC,CAAC,KAAK,IAAG,GAAM,OAAO,QAAQ,YAAY,YAAY;AAG7D"}},
    {"offset": {"line": 790, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 795, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@ai-sdk/ui-utils/node_modules/@ai-sdk/provider/src/errors/ai-sdk-error.ts","/turbopack/[project]/node_modules/@ai-sdk/ui-utils/node_modules/@ai-sdk/provider/src/errors/api-call-error.ts","/turbopack/[project]/node_modules/@ai-sdk/ui-utils/node_modules/@ai-sdk/provider/src/errors/empty-response-body-error.ts","/turbopack/[project]/node_modules/@ai-sdk/ui-utils/node_modules/@ai-sdk/provider/src/errors/get-error-message.ts","/turbopack/[project]/node_modules/@ai-sdk/ui-utils/node_modules/@ai-sdk/provider/src/errors/invalid-prompt-error.ts","/turbopack/[project]/node_modules/@ai-sdk/ui-utils/node_modules/@ai-sdk/provider/src/errors/invalid-response-data-error.ts","/turbopack/[project]/node_modules/@ai-sdk/ui-utils/node_modules/@ai-sdk/provider/src/errors/json-parse-error.ts","/turbopack/[project]/node_modules/@ai-sdk/ui-utils/node_modules/@ai-sdk/provider/src/errors/load-api-key-error.ts","/turbopack/[project]/node_modules/@ai-sdk/ui-utils/node_modules/@ai-sdk/provider/src/errors/load-setting-error.ts","/turbopack/[project]/node_modules/@ai-sdk/ui-utils/node_modules/@ai-sdk/provider/src/errors/no-content-generated-error.ts","/turbopack/[project]/node_modules/@ai-sdk/ui-utils/node_modules/@ai-sdk/provider/src/errors/no-such-model-error.ts","/turbopack/[project]/node_modules/@ai-sdk/ui-utils/node_modules/@ai-sdk/provider/src/errors/too-many-embedding-values-for-call-error.ts","/turbopack/[project]/node_modules/@ai-sdk/ui-utils/node_modules/@ai-sdk/provider/src/errors/type-validation-error.ts","/turbopack/[project]/node_modules/@ai-sdk/ui-utils/node_modules/@ai-sdk/provider/src/errors/unsupported-functionality-error.ts","/turbopack/[project]/node_modules/@ai-sdk/ui-utils/node_modules/@ai-sdk/provider/src/json-value/is-json.ts"],"sourcesContent":["/**\n * Symbol used for identifying AI SDK Error instances.\n * Enables checking if an error is an instance of AISDKError across package versions.\n */\nconst marker = 'vercel.ai.error';\nconst symbol = Symbol.for(marker);\n\n/**\n * Custom error class for AI SDK related errors.\n * @extends Error\n */\nexport class AISDKError extends Error {\n  private readonly [symbol] = true; // used in isInstance\n\n  /**\n   * The underlying cause of the error, if any.\n   */\n  readonly cause?: unknown;\n\n  /**\n   * Creates an AI SDK Error.\n   *\n   * @param {Object} params - The parameters for creating the error.\n   * @param {string} params.name - The name of the error.\n   * @param {string} params.message - The error message.\n   * @param {unknown} [params.cause] - The underlying cause of the error.\n   */\n  constructor({\n    name,\n    message,\n    cause,\n  }: {\n    name: string;\n    message: string;\n    cause?: unknown;\n  }) {\n    super(message);\n\n    this.name = name;\n    this.cause = cause;\n  }\n\n  /**\n   * Checks if the given error is an AI SDK Error.\n   * @param {unknown} error - The error to check.\n   * @returns {boolean} True if the error is an AI SDK Error, false otherwise.\n   */\n  static isInstance(error: unknown): error is AISDKError {\n    return AISDKError.hasMarker(error, marker);\n  }\n\n  protected static hasMarker(error: unknown, marker: string): boolean {\n    const markerSymbol = Symbol.for(marker);\n    return (\n      error != null &&\n      typeof error === 'object' &&\n      markerSymbol in error &&\n      typeof error[markerSymbol] === 'boolean' &&\n      error[markerSymbol] === true\n    );\n  }\n\n  /**\n   * Returns a JSON representation of the error.\n   * @returns {Object} An object containing the error's name, message, and cause.\n   *\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n    };\n  }\n}\n","import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_APICallError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class APICallError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly url: string;\n  readonly requestBodyValues: unknown;\n  readonly statusCode?: number;\n\n  readonly responseHeaders?: Record<string, string>;\n  readonly responseBody?: string;\n\n  readonly isRetryable: boolean;\n  readonly data?: unknown;\n\n  constructor({\n    message,\n    url,\n    requestBodyValues,\n    statusCode,\n    responseHeaders,\n    responseBody,\n    cause,\n    isRetryable = statusCode != null &&\n      (statusCode === 408 || // request timeout\n        statusCode === 409 || // conflict\n        statusCode === 429 || // too many requests\n        statusCode >= 500), // server error\n    data,\n  }: {\n    message: string;\n    url: string;\n    requestBodyValues: unknown;\n    statusCode?: number;\n    responseHeaders?: Record<string, string>;\n    responseBody?: string;\n    cause?: unknown;\n    isRetryable?: boolean;\n    data?: unknown;\n  }) {\n    super({ name, message, cause });\n\n    this.url = url;\n    this.requestBodyValues = requestBodyValues;\n    this.statusCode = statusCode;\n    this.responseHeaders = responseHeaders;\n    this.responseBody = responseBody;\n    this.isRetryable = isRetryable;\n    this.data = data;\n  }\n\n  static isInstance(error: unknown): error is APICallError {\n    return AISDKError.hasMarker(error, marker);\n  }\n\n  /**\n   * @deprecated Use isInstance instead.\n   */\n  static isAPICallError(error: unknown): error is APICallError {\n    return (\n      error instanceof Error &&\n      error.name === name &&\n      typeof (error as APICallError).url === 'string' &&\n      typeof (error as APICallError).requestBodyValues === 'object' &&\n      ((error as APICallError).statusCode == null ||\n        typeof (error as APICallError).statusCode === 'number') &&\n      ((error as APICallError).responseHeaders == null ||\n        typeof (error as APICallError).responseHeaders === 'object') &&\n      ((error as APICallError).responseBody == null ||\n        typeof (error as APICallError).responseBody === 'string') &&\n      ((error as APICallError).cause == null ||\n        typeof (error as APICallError).cause === 'object') &&\n      typeof (error as APICallError).isRetryable === 'boolean' &&\n      ((error as APICallError).data == null ||\n        typeof (error as APICallError).data === 'object')\n    );\n  }\n\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      url: this.url,\n      requestBodyValues: this.requestBodyValues,\n      statusCode: this.statusCode,\n      responseHeaders: this.responseHeaders,\n      responseBody: this.responseBody,\n      cause: this.cause,\n      isRetryable: this.isRetryable,\n      data: this.data,\n    };\n  }\n}\n","import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_EmptyResponseBodyError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class EmptyResponseBodyError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  constructor({ message = 'Empty response body' }: { message?: string } = {}) {\n    super({ name, message });\n  }\n\n  static isInstance(error: unknown): error is EmptyResponseBodyError {\n    return AISDKError.hasMarker(error, marker);\n  }\n\n  /**\n   * @deprecated use `isInstance` instead\n   */\n  static isEmptyResponseBodyError(\n    error: unknown,\n  ): error is EmptyResponseBodyError {\n    return error instanceof Error && error.name === name;\n  }\n}\n","export function getErrorMessage(error: unknown | undefined) {\n  if (error == null) {\n    return 'unknown error';\n  }\n\n  if (typeof error === 'string') {\n    return error;\n  }\n\n  if (error instanceof Error) {\n    return error.message;\n  }\n\n  return JSON.stringify(error);\n}\n","import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_InvalidPromptError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\n/**\n * A prompt is invalid. This error should be thrown by providers when they cannot\n * process a prompt.\n */\nexport class InvalidPromptError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly prompt: unknown;\n\n  constructor({\n    prompt,\n    message,\n    cause,\n  }: {\n    prompt: unknown;\n    message: string;\n    cause?: unknown;\n  }) {\n    super({ name, message: `Invalid prompt: ${message}`, cause });\n\n    this.prompt = prompt;\n  }\n\n  static isInstance(error: unknown): error is InvalidPromptError {\n    return AISDKError.hasMarker(error, marker);\n  }\n\n  /**\n   * @deprecated use `isInstance` instead\n   */\n  static isInvalidPromptError(error: unknown): error is InvalidPromptError {\n    return error instanceof Error && error.name === name && prompt != null;\n  }\n\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n\n      prompt: this.prompt,\n    };\n  }\n}\n","import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_InvalidResponseDataError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\n/**\n * Server returned a response with invalid data content.\n * This should be thrown by providers when they cannot parse the response from the API.\n */\nexport class InvalidResponseDataError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly data: unknown;\n\n  constructor({\n    data,\n    message = `Invalid response data: ${JSON.stringify(data)}.`,\n  }: {\n    data: unknown;\n    message?: string;\n  }) {\n    super({ name, message });\n\n    this.data = data;\n  }\n\n  static isInstance(error: unknown): error is InvalidResponseDataError {\n    return AISDKError.hasMarker(error, marker);\n  }\n\n  /**\n   * @deprecated use `isInstance` instead\n   */\n  static isInvalidResponseDataError(\n    error: unknown,\n  ): error is InvalidResponseDataError {\n    return (\n      error instanceof Error &&\n      error.name === name &&\n      (error as InvalidResponseDataError).data != null\n    );\n  }\n\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n\n      data: this.data,\n    };\n  }\n}\n","import { AISDKError } from './ai-sdk-error';\nimport { getErrorMessage } from './get-error-message';\n\nconst name = 'AI_JSONParseError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class JSONParseError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly text: string;\n\n  constructor({ text, cause }: { text: string; cause: unknown }) {\n    super({\n      name,\n      message:\n        `JSON parsing failed: ` +\n        `Text: ${text}.\\n` +\n        `Error message: ${getErrorMessage(cause)}`,\n      cause,\n    });\n\n    this.text = text;\n  }\n\n  static isInstance(error: unknown): error is JSONParseError {\n    return AISDKError.hasMarker(error, marker);\n  }\n\n  /**\n   * @deprecated use `isInstance` instead\n   */\n  static isJSONParseError(error: unknown): error is JSONParseError {\n    return (\n      error instanceof Error &&\n      error.name === name &&\n      'text' in error &&\n      typeof error.text === 'string'\n    );\n  }\n\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      cause: this.cause,\n      stack: this.stack,\n\n      valueText: this.text,\n    };\n  }\n}\n","import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_LoadAPIKeyError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class LoadAPIKeyError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  constructor({ message }: { message: string }) {\n    super({ name, message });\n  }\n\n  static isInstance(error: unknown): error is LoadAPIKeyError {\n    return AISDKError.hasMarker(error, marker);\n  }\n\n  /**\n   * @deprecated Use isInstance instead.\n   */\n  static isLoadAPIKeyError(error: unknown): error is LoadAPIKeyError {\n    return error instanceof Error && error.name === name;\n  }\n}\n","import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_LoadSettingError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class LoadSettingError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  constructor({ message }: { message: string }) {\n    super({ name, message });\n  }\n\n  static isInstance(error: unknown): error is LoadSettingError {\n    return AISDKError.hasMarker(error, marker);\n  }\n\n  /**\n   * @deprecated Use isInstance instead.\n   */\n  static isLoadSettingError(error: unknown): error is LoadSettingError {\n    return error instanceof Error && error.name === name;\n  }\n}\n","import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_NoContentGeneratedError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\n/**\nThrown when the AI provider fails to generate any content.\n */\nexport class NoContentGeneratedError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  constructor({\n    message = 'No content generated.',\n  }: { message?: string } = {}) {\n    super({ name, message });\n  }\n\n  static isInstance(error: unknown): error is NoContentGeneratedError {\n    return AISDKError.hasMarker(error, marker);\n  }\n\n  /**\n   * @deprecated Use isInstance instead.\n   */\n  static isNoContentGeneratedError(\n    error: unknown,\n  ): error is NoContentGeneratedError {\n    return error instanceof Error && error.name === name;\n  }\n\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      cause: this.cause,\n      message: this.message,\n      stack: this.stack,\n    };\n  }\n}\n","import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_NoSuchModelError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class NoSuchModelError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly modelId: string;\n  readonly modelType: 'languageModel' | 'textEmbeddingModel';\n\n  constructor({\n    errorName = name,\n    modelId,\n    modelType,\n    message = `No such ${modelType}: ${modelId}`,\n  }: {\n    errorName?: string;\n    modelId: string;\n    modelType: 'languageModel' | 'textEmbeddingModel';\n    message?: string;\n  }) {\n    super({ name: errorName, message });\n\n    this.modelId = modelId;\n    this.modelType = modelType;\n  }\n\n  static isInstance(error: unknown): error is NoSuchModelError {\n    return AISDKError.hasMarker(error, marker);\n  }\n\n  /**\n   * @deprecated use `isInstance` instead\n   */\n  static isNoSuchModelError(error: unknown): error is NoSuchModelError {\n    return (\n      error instanceof Error &&\n      error.name === name &&\n      typeof (error as NoSuchModelError).modelId === 'string' &&\n      typeof (error as NoSuchModelError).modelType === 'string'\n    );\n  }\n\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n\n      modelId: this.modelId,\n      modelType: this.modelType,\n    };\n  }\n}\n","import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_TooManyEmbeddingValuesForCallError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class TooManyEmbeddingValuesForCallError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly provider: string;\n  readonly modelId: string;\n  readonly maxEmbeddingsPerCall: number;\n  readonly values: Array<unknown>;\n\n  constructor(options: {\n    provider: string;\n    modelId: string;\n    maxEmbeddingsPerCall: number;\n    values: Array<unknown>;\n  }) {\n    super({\n      name,\n      message:\n        `Too many values for a single embedding call. ` +\n        `The ${options.provider} model \"${options.modelId}\" can only embed up to ` +\n        `${options.maxEmbeddingsPerCall} values per call, but ${options.values.length} values were provided.`,\n    });\n\n    this.provider = options.provider;\n    this.modelId = options.modelId;\n    this.maxEmbeddingsPerCall = options.maxEmbeddingsPerCall;\n    this.values = options.values;\n  }\n\n  static isInstance(\n    error: unknown,\n  ): error is TooManyEmbeddingValuesForCallError {\n    return AISDKError.hasMarker(error, marker);\n  }\n\n  /**\n   * @deprecated use `isInstance` instead\n   */\n  static isTooManyEmbeddingValuesForCallError(\n    error: unknown,\n  ): error is TooManyEmbeddingValuesForCallError {\n    return (\n      error instanceof Error &&\n      error.name === name &&\n      'provider' in error &&\n      typeof error.provider === 'string' &&\n      'modelId' in error &&\n      typeof error.modelId === 'string' &&\n      'maxEmbeddingsPerCall' in error &&\n      typeof error.maxEmbeddingsPerCall === 'number' &&\n      'values' in error &&\n      Array.isArray(error.values)\n    );\n  }\n\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n\n      provider: this.provider,\n      modelId: this.modelId,\n      maxEmbeddingsPerCall: this.maxEmbeddingsPerCall,\n      values: this.values,\n    };\n  }\n}\n","import { AISDKError } from './ai-sdk-error';\nimport { getErrorMessage } from './get-error-message';\n\nconst name = 'AI_TypeValidationError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class TypeValidationError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly value: unknown;\n\n  constructor({ value, cause }: { value: unknown; cause: unknown }) {\n    super({\n      name,\n      message:\n        `Type validation failed: ` +\n        `Value: ${JSON.stringify(value)}.\\n` +\n        `Error message: ${getErrorMessage(cause)}`,\n      cause,\n    });\n\n    this.value = value;\n  }\n\n  static isInstance(error: unknown): error is TypeValidationError {\n    return AISDKError.hasMarker(error, marker);\n  }\n\n  /**\n   * Wraps an error into a TypeValidationError.\n   * If the cause is already a TypeValidationError with the same value, it returns the cause.\n   * Otherwise, it creates a new TypeValidationError.\n   *\n   * @param {Object} params - The parameters for wrapping the error.\n   * @param {unknown} params.value - The value that failed validation.\n   * @param {unknown} params.cause - The original error or cause of the validation failure.\n   * @returns {TypeValidationError} A TypeValidationError instance.\n   */\n  static wrap({\n    value,\n    cause,\n  }: {\n    value: unknown;\n    cause: unknown;\n  }): TypeValidationError {\n    return TypeValidationError.isInstance(cause) && cause.value === value\n      ? cause\n      : new TypeValidationError({ value, cause });\n  }\n\n  /**\n   * @deprecated use `isInstance` instead\n   */\n  static isTypeValidationError(error: unknown): error is TypeValidationError {\n    return error instanceof Error && error.name === name;\n  }\n\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      cause: this.cause,\n      stack: this.stack,\n\n      value: this.value,\n    };\n  }\n}\n","import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_UnsupportedFunctionalityError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class UnsupportedFunctionalityError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly functionality: string;\n\n  constructor({ functionality }: { functionality: string }) {\n    super({\n      name,\n      message: `'${functionality}' functionality not supported.`,\n    });\n\n    this.functionality = functionality;\n  }\n\n  static isInstance(error: unknown): error is UnsupportedFunctionalityError {\n    return AISDKError.hasMarker(error, marker);\n  }\n\n  /**\n   * @deprecated Use isInstance instead.\n   */\n  static isUnsupportedFunctionalityError(\n    error: unknown,\n  ): error is UnsupportedFunctionalityError {\n    return (\n      error instanceof Error &&\n      error.name === name &&\n      typeof (error as UnsupportedFunctionalityError).functionality === 'string'\n    );\n  }\n\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n\n      functionality: this.functionality,\n    };\n  }\n}\n","import { JSONArray, JSONObject, JSONValue } from './json-value';\n\nexport function isJSONValue(value: unknown): value is JSONValue {\n  if (\n    value === null ||\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    typeof value === 'boolean'\n  ) {\n    return true;\n  }\n\n  if (Array.isArray(value)) {\n    return value.every(isJSONValue);\n  }\n\n  if (typeof value === 'object') {\n    return Object.entries(value).every(\n      ([key, val]) => typeof key === 'string' && isJSONValue(val),\n    );\n  }\n\n  return false;\n}\n\nexport function isJSONArray(value: unknown): value is JSONArray {\n  return Array.isArray(value) && value.every(isJSONValue);\n}\n\nexport function isJSONObject(value: unknown): value is JSONObject {\n  return (\n    value != null &&\n    typeof value === 'object' &&\n    Object.entries(value).every(\n      ([key, val]) => typeof key === 'string' && isJSONValue(val),\n    )\n  );\n}\n"],"names":["name","marker","symbol","_a","prompt"],"mappings":"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"}},
    {"offset": {"line": 1317, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1322, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@ai-sdk/provider-utils/node_modules/@ai-sdk/provider/src/errors/api-call-error.ts","/turbopack/[project]/node_modules/@ai-sdk/provider-utils/node_modules/@ai-sdk/provider/src/errors/download-error.ts","/turbopack/[project]/node_modules/@ai-sdk/provider-utils/node_modules/@ai-sdk/provider/src/errors/empty-response-body-error.ts","/turbopack/[project]/node_modules/@ai-sdk/provider-utils/node_modules/@ai-sdk/provider/src/errors/invalid-argument-error.ts","/turbopack/[project]/node_modules/@ai-sdk/provider-utils/node_modules/@ai-sdk/provider/src/errors/invalid-data-content-error.ts","/turbopack/[project]/node_modules/@ai-sdk/provider-utils/node_modules/@ai-sdk/provider/src/errors/invalid-prompt-error.ts","/turbopack/[project]/node_modules/@ai-sdk/provider-utils/node_modules/@ai-sdk/provider/src/errors/invalid-response-data-error.ts","/turbopack/[project]/node_modules/@ai-sdk/provider-utils/node_modules/@ai-sdk/provider/src/errors/get-error-message.ts","/turbopack/[project]/node_modules/@ai-sdk/provider-utils/node_modules/@ai-sdk/provider/src/errors/invalid-tool-arguments-error.ts","/turbopack/[project]/node_modules/@ai-sdk/provider-utils/node_modules/@ai-sdk/provider/src/errors/json-parse-error.ts","/turbopack/[project]/node_modules/@ai-sdk/provider-utils/node_modules/@ai-sdk/provider/src/errors/load-api-key-error.ts","/turbopack/[project]/node_modules/@ai-sdk/provider-utils/node_modules/@ai-sdk/provider/src/errors/load-setting-error.ts","/turbopack/[project]/node_modules/@ai-sdk/provider-utils/node_modules/@ai-sdk/provider/src/errors/no-content-generated-error.ts","/turbopack/[project]/node_modules/@ai-sdk/provider-utils/node_modules/@ai-sdk/provider/src/errors/no-object-generated-error.ts","/turbopack/[project]/node_modules/@ai-sdk/provider-utils/node_modules/@ai-sdk/provider/src/errors/no-such-tool-error.ts","/turbopack/[project]/node_modules/@ai-sdk/provider-utils/node_modules/@ai-sdk/provider/src/errors/retry-error.ts","/turbopack/[project]/node_modules/@ai-sdk/provider-utils/node_modules/@ai-sdk/provider/src/errors/too-many-embedding-values-for-call-error.ts","/turbopack/[project]/node_modules/@ai-sdk/provider-utils/node_modules/@ai-sdk/provider/src/errors/tool-call-parse-error.ts","/turbopack/[project]/node_modules/@ai-sdk/provider-utils/node_modules/@ai-sdk/provider/src/errors/type-validation-error.ts","/turbopack/[project]/node_modules/@ai-sdk/provider-utils/node_modules/@ai-sdk/provider/src/errors/unsupported-functionality-error.ts","/turbopack/[project]/node_modules/@ai-sdk/provider-utils/node_modules/@ai-sdk/provider/src/errors/unsupported-json-schema-error.ts"],"sourcesContent":["export class APICallError extends Error {\n  readonly url: string;\n  readonly requestBodyValues: unknown;\n  readonly statusCode?: number;\n\n  readonly responseHeaders?: Record<string, string>;\n  readonly responseBody?: string;\n\n  readonly cause?: unknown;\n  readonly isRetryable: boolean;\n  readonly data?: unknown;\n\n  constructor({\n    message,\n    url,\n    requestBodyValues,\n    statusCode,\n    responseHeaders,\n    responseBody,\n    cause,\n    isRetryable = statusCode != null &&\n      (statusCode === 408 || // request timeout\n        statusCode === 409 || // conflict\n        statusCode === 429 || // too many requests\n        statusCode >= 500), // server error\n    data,\n  }: {\n    message: string;\n    url: string;\n    requestBodyValues: unknown;\n    statusCode?: number;\n    responseHeaders?: Record<string, string>;\n    responseBody?: string;\n    cause?: unknown;\n    isRetryable?: boolean;\n    data?: unknown;\n  }) {\n    super(message);\n\n    this.name = 'AI_APICallError';\n\n    this.url = url;\n    this.requestBodyValues = requestBodyValues;\n    this.statusCode = statusCode;\n    this.responseHeaders = responseHeaders;\n    this.responseBody = responseBody;\n    this.cause = cause;\n    this.isRetryable = isRetryable;\n    this.data = data;\n  }\n\n  static isAPICallError(error: unknown): error is APICallError {\n    return (\n      error instanceof Error &&\n      error.name === 'AI_APICallError' &&\n      typeof (error as APICallError).url === 'string' &&\n      typeof (error as APICallError).requestBodyValues === 'object' &&\n      ((error as APICallError).statusCode == null ||\n        typeof (error as APICallError).statusCode === 'number') &&\n      ((error as APICallError).responseHeaders == null ||\n        typeof (error as APICallError).responseHeaders === 'object') &&\n      ((error as APICallError).responseBody == null ||\n        typeof (error as APICallError).responseBody === 'string') &&\n      ((error as APICallError).cause == null ||\n        typeof (error as APICallError).cause === 'object') &&\n      typeof (error as APICallError).isRetryable === 'boolean' &&\n      ((error as APICallError).data == null ||\n        typeof (error as APICallError).data === 'object')\n    );\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      url: this.url,\n      requestBodyValues: this.requestBodyValues,\n      statusCode: this.statusCode,\n      responseHeaders: this.responseHeaders,\n      responseBody: this.responseBody,\n      cause: this.cause,\n      isRetryable: this.isRetryable,\n      data: this.data,\n    };\n  }\n}\n","export class DownloadError extends Error {\n  readonly url: string;\n  readonly statusCode?: number;\n  readonly statusText?: string;\n  readonly cause?: unknown;\n\n  constructor({\n    url,\n    statusCode,\n    statusText,\n    cause,\n    message = cause == null\n      ? `Failed to download ${url}: ${statusCode} ${statusText}`\n      : `Failed to download ${url}: ${cause}`,\n  }: {\n    url: string;\n    statusCode?: number;\n    statusText?: string;\n    message?: string;\n    cause?: unknown;\n  }) {\n    super(message);\n\n    this.name = 'AI_DownloadError';\n\n    this.url = url;\n    this.statusCode = statusCode;\n    this.statusText = statusText;\n    this.cause = cause;\n  }\n\n  static isDownloadError(error: unknown): error is DownloadError {\n    return (\n      error instanceof Error &&\n      error.name === 'AI_DownloadError' &&\n      typeof (error as DownloadError).url === 'string' &&\n      ((error as DownloadError).statusCode == null ||\n        typeof (error as DownloadError).statusCode === 'number') &&\n      ((error as DownloadError).statusText == null ||\n        typeof (error as DownloadError).statusText === 'string')\n    );\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      url: this.url,\n      statusCode: this.statusCode,\n      statusText: this.statusText,\n      cause: this.cause,\n    };\n  }\n}\n","export class EmptyResponseBodyError extends Error {\n  constructor({ message = 'Empty response body' }: { message?: string } = {}) {\n    super(message);\n\n    this.name = 'AI_EmptyResponseBodyError';\n  }\n\n  static isEmptyResponseBodyError(\n    error: unknown,\n  ): error is EmptyResponseBodyError {\n    return error instanceof Error && error.name === 'AI_EmptyResponseBodyError';\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n    };\n  }\n}\n","export class InvalidArgumentError extends Error {\n  readonly parameter: string;\n  readonly value: unknown;\n\n  constructor({\n    parameter,\n    value,\n    message,\n  }: {\n    parameter: string;\n    value: unknown;\n    message: string;\n  }) {\n    super(`Invalid argument for parameter ${parameter}: ${message}`);\n\n    this.name = 'AI_InvalidArgumentError';\n\n    this.parameter = parameter;\n    this.value = value;\n  }\n\n  static isInvalidArgumentError(error: unknown): error is InvalidArgumentError {\n    return (\n      error instanceof Error &&\n      error.name === 'AI_InvalidArgumentError' &&\n      typeof (error as InvalidArgumentError).parameter === 'string' &&\n      typeof (error as InvalidArgumentError).value === 'string'\n    );\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n\n      parameter: this.parameter,\n      value: this.value,\n    };\n  }\n}\n","export class InvalidDataContentError extends Error {\n  readonly content: unknown;\n  readonly cause?: unknown;\n\n  constructor({\n    content,\n    cause,\n    message = `Invalid data content. Expected a base64 string, Uint8Array, ArrayBuffer, or Buffer, but got ${typeof content}.`,\n  }: {\n    content: unknown;\n    cause?: unknown;\n    message?: string;\n  }) {\n    super(message);\n\n    this.name = 'AI_InvalidDataContentError';\n\n    this.cause = cause;\n    this.content = content;\n  }\n\n  static isInvalidDataContentError(\n    error: unknown,\n  ): error is InvalidDataContentError {\n    return (\n      error instanceof Error &&\n      error.name === 'AI_InvalidDataContentError' &&\n      (error as InvalidDataContentError).content != null\n    );\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n      cause: this.cause,\n      content: this.content,\n    };\n  }\n}\n","export class InvalidPromptError extends Error {\n  readonly prompt: unknown;\n\n  constructor({ prompt, message }: { prompt: unknown; message: string }) {\n    super(`Invalid prompt: ${message}`);\n\n    this.name = 'AI_InvalidPromptError';\n\n    this.prompt = prompt;\n  }\n\n  static isInvalidPromptError(error: unknown): error is InvalidPromptError {\n    return (\n      error instanceof Error &&\n      error.name === 'AI_InvalidPromptError' &&\n      prompt != null\n    );\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n\n      prompt: this.prompt,\n    };\n  }\n}\n","/**\nServer returned a response with invalid data content. This should be thrown by providers when they\ncannot parse the response from the API.\n */\nexport class InvalidResponseDataError extends Error {\n  readonly data: unknown;\n\n  constructor({\n    data,\n    message = `Invalid response data: ${JSON.stringify(data)}.`,\n  }: {\n    data: unknown;\n    message?: string;\n  }) {\n    super(message);\n\n    this.name = 'AI_InvalidResponseDataError';\n\n    this.data = data;\n  }\n\n  static isInvalidResponseDataError(\n    error: unknown,\n  ): error is InvalidResponseDataError {\n    return (\n      error instanceof Error &&\n      error.name === 'AI_InvalidResponseDataError' &&\n      (error as InvalidResponseDataError).data != null\n    );\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n\n      data: this.data,\n    };\n  }\n}\n","export function getErrorMessage(error: unknown | undefined) {\n  if (error == null) {\n    return 'unknown error';\n  }\n\n  if (typeof error === 'string') {\n    return error;\n  }\n\n  if (error instanceof Error) {\n    return error.message;\n  }\n\n  return JSON.stringify(error);\n}\n","import { getErrorMessage } from './get-error-message';\n\nexport class InvalidToolArgumentsError extends Error {\n  readonly toolName: string;\n  readonly toolArgs: string;\n  readonly cause: unknown;\n\n  constructor({\n    toolArgs,\n    toolName,\n    cause,\n    message = `Invalid arguments for tool ${toolName}: ${getErrorMessage(\n      cause,\n    )}`,\n  }: {\n    message?: string;\n    toolArgs: string;\n    toolName: string;\n    cause: unknown;\n  }) {\n    super(message);\n\n    this.name = 'AI_InvalidToolArgumentsError';\n\n    this.toolArgs = toolArgs;\n    this.toolName = toolName;\n    this.cause = cause;\n  }\n\n  static isInvalidToolArgumentsError(\n    error: unknown,\n  ): error is InvalidToolArgumentsError {\n    return (\n      error instanceof Error &&\n      error.name === 'AI_InvalidToolArgumentsError' &&\n      typeof (error as InvalidToolArgumentsError).toolName === 'string' &&\n      typeof (error as InvalidToolArgumentsError).toolArgs === 'string'\n    );\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      cause: this.cause,\n      stack: this.stack,\n\n      toolName: this.toolName,\n      toolArgs: this.toolArgs,\n    };\n  }\n}\n","import { getErrorMessage } from './get-error-message';\n\nexport class JSONParseError extends Error {\n  // note: property order determines debugging output\n  readonly text: string;\n  readonly cause: unknown;\n\n  constructor({ text, cause }: { text: string; cause: unknown }) {\n    super(\n      `JSON parsing failed: ` +\n        `Text: ${text}.\\n` +\n        `Error message: ${getErrorMessage(cause)}`,\n    );\n\n    this.name = 'AI_JSONParseError';\n\n    this.cause = cause;\n    this.text = text;\n  }\n\n  static isJSONParseError(error: unknown): error is JSONParseError {\n    return (\n      error instanceof Error &&\n      error.name === 'AI_JSONParseError' &&\n      typeof (error as JSONParseError).text === 'string' &&\n      typeof (error as JSONParseError).cause === 'string'\n    );\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      cause: this.cause,\n      stack: this.stack,\n\n      valueText: this.text,\n    };\n  }\n}\n","export class LoadAPIKeyError extends Error {\n  constructor({ message }: { message: string }) {\n    super(message);\n\n    this.name = 'AI_LoadAPIKeyError';\n  }\n\n  static isLoadAPIKeyError(error: unknown): error is LoadAPIKeyError {\n    return error instanceof Error && error.name === 'AI_LoadAPIKeyError';\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n    };\n  }\n}\n","export class LoadSettingError extends Error {\n  constructor({ message }: { message: string }) {\n    super(message);\n\n    this.name = 'AI_LoadSettingError';\n  }\n\n  static isLoadSettingError(error: unknown): error is LoadSettingError {\n    return error instanceof Error && error.name === 'AI_LoadSettingError';\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n    };\n  }\n}\n","/**\nThrown when the AI provider fails to generate any content.\n */\nexport class NoContentGeneratedError extends Error {\n  readonly cause: unknown;\n\n  constructor({\n    message = 'No content generated.',\n  }: { message?: string } = {}) {\n    super(message);\n\n    this.name = 'AI_NoContentGeneratedError';\n  }\n\n  static isNoContentGeneratedError(\n    error: unknown,\n  ): error is NoContentGeneratedError {\n    return (\n      error instanceof Error && error.name === 'AI_NoContentGeneratedError'\n    );\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      cause: this.cause,\n      message: this.message,\n      stack: this.stack,\n    };\n  }\n}\n","/**\nThrown when the AI provider fails to generate a parsable object.\n */\nexport class NoObjectGeneratedError extends Error {\n  readonly cause: unknown;\n\n  constructor({ message = 'No object generated.' }: { message?: string } = {}) {\n    super(message);\n\n    this.name = 'AI_NoObjectGeneratedError';\n  }\n\n  static isNoObjectGeneratedError(\n    error: unknown,\n  ): error is NoObjectGeneratedError {\n    return error instanceof Error && error.name === 'AI_NoObjectGeneratedError';\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      cause: this.cause,\n      message: this.message,\n      stack: this.stack,\n    };\n  }\n}\n","export class NoSuchToolError extends Error {\n  readonly toolName: string;\n  readonly availableTools: string[] | undefined;\n\n  constructor({\n    toolName,\n    availableTools = undefined,\n    message = `Model tried to call unavailable tool '${toolName}'. ${\n      availableTools === undefined\n        ? 'No tools are available.'\n        : `Available tools: ${availableTools.join(', ')}.`\n    }`,\n  }: {\n    toolName: string;\n    availableTools?: string[] | undefined;\n    message?: string;\n  }) {\n    super(message);\n\n    this.name = 'AI_NoSuchToolError';\n\n    this.toolName = toolName;\n    this.availableTools = availableTools;\n  }\n\n  static isNoSuchToolError(error: unknown): error is NoSuchToolError {\n    return (\n      error instanceof Error &&\n      error.name === 'AI_NoSuchToolError' &&\n      'toolName' in error &&\n      error.toolName != undefined &&\n      typeof error.name === 'string'\n    );\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n\n      toolName: this.toolName,\n      availableTools: this.availableTools,\n    };\n  }\n}\n","export type RetryErrorReason =\n  | 'maxRetriesExceeded'\n  | 'errorNotRetryable'\n  | 'abort';\n\nexport class RetryError extends Error {\n  // note: property order determines debugging output\n  readonly reason: RetryErrorReason;\n  readonly lastError: unknown;\n  readonly errors: Array<unknown>;\n\n  constructor({\n    message,\n    reason,\n    errors,\n  }: {\n    message: string;\n    reason: RetryErrorReason;\n    errors: Array<unknown>;\n  }) {\n    super(message);\n\n    this.name = 'AI_RetryError';\n    this.reason = reason;\n    this.errors = errors;\n\n    // separate our last error to make debugging via log easier:\n    this.lastError = errors[errors.length - 1];\n  }\n\n  static isRetryError(error: unknown): error is RetryError {\n    return (\n      error instanceof Error &&\n      error.name === 'AI_RetryError' &&\n      typeof (error as RetryError).reason === 'string' &&\n      Array.isArray((error as RetryError).errors)\n    );\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      reason: this.reason,\n      lastError: this.lastError,\n      errors: this.errors,\n    };\n  }\n}\n","export class TooManyEmbeddingValuesForCallError extends Error {\n  readonly provider: string;\n  readonly modelId: string;\n  readonly maxEmbeddingsPerCall: number;\n  readonly values: Array<unknown>;\n\n  constructor(options: {\n    provider: string;\n    modelId: string;\n    maxEmbeddingsPerCall: number;\n    values: Array<unknown>;\n  }) {\n    super(\n      `Too many values for a single embedding call. ` +\n        `The ${options.provider} model \"${options.modelId}\" can only embed up to ` +\n        `${options.maxEmbeddingsPerCall} values per call, but ${options.values.length} values were provided.`,\n    );\n\n    this.name = 'AI_TooManyEmbeddingValuesForCallError';\n\n    this.provider = options.provider;\n    this.modelId = options.modelId;\n    this.maxEmbeddingsPerCall = options.maxEmbeddingsPerCall;\n    this.values = options.values;\n  }\n\n  static isInvalidPromptError(\n    error: unknown,\n  ): error is TooManyEmbeddingValuesForCallError {\n    return (\n      error instanceof Error &&\n      error.name === 'AI_TooManyEmbeddingValuesForCallError' &&\n      'provider' in error &&\n      typeof error.provider === 'string' &&\n      'modelId' in error &&\n      typeof error.modelId === 'string' &&\n      'maxEmbeddingsPerCall' in error &&\n      typeof error.maxEmbeddingsPerCall === 'number' &&\n      'values' in error &&\n      Array.isArray(error.values)\n    );\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n\n      provider: this.provider,\n      modelId: this.modelId,\n      maxEmbeddingsPerCall: this.maxEmbeddingsPerCall,\n      values: this.values,\n    };\n  }\n}\n","import { LanguageModelV1FunctionTool } from '../language-model/v1/language-model-v1-function-tool';\nimport { getErrorMessage } from './get-error-message';\n\nexport class ToolCallParseError extends Error {\n  readonly cause: unknown;\n  readonly text: string;\n  readonly tools: LanguageModelV1FunctionTool[];\n\n  constructor({\n    cause,\n    text,\n    tools,\n    message = `Failed to parse tool calls: ${getErrorMessage(cause)}`,\n  }: {\n    cause: unknown;\n    text: string;\n    tools: LanguageModelV1FunctionTool[];\n    message?: string;\n  }) {\n    super(message);\n\n    this.name = 'AI_ToolCallParseError';\n\n    this.cause = cause;\n    this.text = text;\n    this.tools = tools;\n  }\n\n  static isToolCallParseError(error: unknown): error is ToolCallParseError {\n    return (\n      error instanceof Error &&\n      error.name === 'AI_ToolCallParseError' &&\n      'cause' in error &&\n      error.cause != undefined &&\n      'text' in error &&\n      error.text != undefined &&\n      typeof error.text === 'string' &&\n      'tools' in error &&\n      error.tools != undefined\n    );\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n\n      cause: this.cause,\n      text: this.text,\n      tools: this.tools,\n    };\n  }\n}\n","import { getErrorMessage } from './get-error-message';\n\nexport class TypeValidationError extends Error {\n  readonly value: unknown;\n  readonly cause: unknown;\n\n  constructor({ value, cause }: { value: unknown; cause: unknown }) {\n    super(\n      `Type validation failed: ` +\n        `Value: ${JSON.stringify(value)}.\\n` +\n        `Error message: ${getErrorMessage(cause)}`,\n    );\n\n    this.name = 'AI_TypeValidationError';\n\n    this.cause = cause;\n    this.value = value;\n  }\n\n  static isTypeValidationError(error: unknown): error is TypeValidationError {\n    return error instanceof Error && error.name === 'AI_TypeValidationError';\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      cause: this.cause,\n      stack: this.stack,\n\n      value: this.value,\n    };\n  }\n}\n","export class UnsupportedFunctionalityError extends Error {\n  readonly functionality: string;\n\n  constructor({ functionality }: { functionality: string }) {\n    super(`'${functionality}' functionality not supported.`);\n\n    this.name = 'AI_UnsupportedFunctionalityError';\n\n    this.functionality = functionality;\n  }\n\n  static isUnsupportedFunctionalityError(\n    error: unknown,\n  ): error is UnsupportedFunctionalityError {\n    return (\n      error instanceof Error &&\n      error.name === 'AI_UnsupportedFunctionalityError' &&\n      typeof (error as UnsupportedFunctionalityError).functionality === 'string'\n    );\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n\n      functionality: this.functionality,\n    };\n  }\n}\n","export class UnsupportedJSONSchemaError extends Error {\n  readonly reason: string;\n  readonly schema: unknown;\n\n  constructor({\n    schema,\n    reason,\n    message = `Unsupported JSON schema: ${reason}`,\n  }: {\n    schema: unknown;\n    reason: string;\n    message?: string;\n  }) {\n    super(message);\n\n    this.name = 'AI_UnsupportedJSONSchemaError';\n\n    this.reason = reason;\n    this.schema = schema;\n  }\n\n  static isUnsupportedJSONSchemaError(\n    error: unknown,\n  ): error is UnsupportedJSONSchemaError {\n    return (\n      error instanceof Error &&\n      error.name === 'AI_UnsupportedJSONSchemaError' &&\n      'reason' in error &&\n      error.reason != undefined &&\n      'schema' in error &&\n      error.schema !== undefined\n    );\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n\n      reason: this.reason,\n      schema: this.schema,\n    };\n  }\n}\n"],"names":["prompt"],"mappings":"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"}},
    {"offset": {"line": 1782, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1787, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@ai-sdk/openai/node_modules/@ai-sdk/provider/src/errors/api-call-error.ts","/turbopack/[project]/node_modules/@ai-sdk/openai/node_modules/@ai-sdk/provider/src/errors/download-error.ts","/turbopack/[project]/node_modules/@ai-sdk/openai/node_modules/@ai-sdk/provider/src/errors/empty-response-body-error.ts","/turbopack/[project]/node_modules/@ai-sdk/openai/node_modules/@ai-sdk/provider/src/errors/invalid-argument-error.ts","/turbopack/[project]/node_modules/@ai-sdk/openai/node_modules/@ai-sdk/provider/src/errors/invalid-data-content-error.ts","/turbopack/[project]/node_modules/@ai-sdk/openai/node_modules/@ai-sdk/provider/src/errors/invalid-prompt-error.ts","/turbopack/[project]/node_modules/@ai-sdk/openai/node_modules/@ai-sdk/provider/src/errors/invalid-response-data-error.ts","/turbopack/[project]/node_modules/@ai-sdk/openai/node_modules/@ai-sdk/provider/src/errors/get-error-message.ts","/turbopack/[project]/node_modules/@ai-sdk/openai/node_modules/@ai-sdk/provider/src/errors/invalid-tool-arguments-error.ts","/turbopack/[project]/node_modules/@ai-sdk/openai/node_modules/@ai-sdk/provider/src/errors/json-parse-error.ts","/turbopack/[project]/node_modules/@ai-sdk/openai/node_modules/@ai-sdk/provider/src/errors/load-api-key-error.ts","/turbopack/[project]/node_modules/@ai-sdk/openai/node_modules/@ai-sdk/provider/src/errors/load-setting-error.ts","/turbopack/[project]/node_modules/@ai-sdk/openai/node_modules/@ai-sdk/provider/src/errors/no-content-generated-error.ts","/turbopack/[project]/node_modules/@ai-sdk/openai/node_modules/@ai-sdk/provider/src/errors/no-object-generated-error.ts","/turbopack/[project]/node_modules/@ai-sdk/openai/node_modules/@ai-sdk/provider/src/errors/no-such-tool-error.ts","/turbopack/[project]/node_modules/@ai-sdk/openai/node_modules/@ai-sdk/provider/src/errors/retry-error.ts","/turbopack/[project]/node_modules/@ai-sdk/openai/node_modules/@ai-sdk/provider/src/errors/too-many-embedding-values-for-call-error.ts","/turbopack/[project]/node_modules/@ai-sdk/openai/node_modules/@ai-sdk/provider/src/errors/tool-call-parse-error.ts","/turbopack/[project]/node_modules/@ai-sdk/openai/node_modules/@ai-sdk/provider/src/errors/type-validation-error.ts","/turbopack/[project]/node_modules/@ai-sdk/openai/node_modules/@ai-sdk/provider/src/errors/unsupported-functionality-error.ts","/turbopack/[project]/node_modules/@ai-sdk/openai/node_modules/@ai-sdk/provider/src/errors/unsupported-json-schema-error.ts"],"sourcesContent":["export class APICallError extends Error {\n  readonly url: string;\n  readonly requestBodyValues: unknown;\n  readonly statusCode?: number;\n\n  readonly responseHeaders?: Record<string, string>;\n  readonly responseBody?: string;\n\n  readonly cause?: unknown;\n  readonly isRetryable: boolean;\n  readonly data?: unknown;\n\n  constructor({\n    message,\n    url,\n    requestBodyValues,\n    statusCode,\n    responseHeaders,\n    responseBody,\n    cause,\n    isRetryable = statusCode != null &&\n      (statusCode === 408 || // request timeout\n        statusCode === 409 || // conflict\n        statusCode === 429 || // too many requests\n        statusCode >= 500), // server error\n    data,\n  }: {\n    message: string;\n    url: string;\n    requestBodyValues: unknown;\n    statusCode?: number;\n    responseHeaders?: Record<string, string>;\n    responseBody?: string;\n    cause?: unknown;\n    isRetryable?: boolean;\n    data?: unknown;\n  }) {\n    super(message);\n\n    this.name = 'AI_APICallError';\n\n    this.url = url;\n    this.requestBodyValues = requestBodyValues;\n    this.statusCode = statusCode;\n    this.responseHeaders = responseHeaders;\n    this.responseBody = responseBody;\n    this.cause = cause;\n    this.isRetryable = isRetryable;\n    this.data = data;\n  }\n\n  static isAPICallError(error: unknown): error is APICallError {\n    return (\n      error instanceof Error &&\n      error.name === 'AI_APICallError' &&\n      typeof (error as APICallError).url === 'string' &&\n      typeof (error as APICallError).requestBodyValues === 'object' &&\n      ((error as APICallError).statusCode == null ||\n        typeof (error as APICallError).statusCode === 'number') &&\n      ((error as APICallError).responseHeaders == null ||\n        typeof (error as APICallError).responseHeaders === 'object') &&\n      ((error as APICallError).responseBody == null ||\n        typeof (error as APICallError).responseBody === 'string') &&\n      ((error as APICallError).cause == null ||\n        typeof (error as APICallError).cause === 'object') &&\n      typeof (error as APICallError).isRetryable === 'boolean' &&\n      ((error as APICallError).data == null ||\n        typeof (error as APICallError).data === 'object')\n    );\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      url: this.url,\n      requestBodyValues: this.requestBodyValues,\n      statusCode: this.statusCode,\n      responseHeaders: this.responseHeaders,\n      responseBody: this.responseBody,\n      cause: this.cause,\n      isRetryable: this.isRetryable,\n      data: this.data,\n    };\n  }\n}\n","export class DownloadError extends Error {\n  readonly url: string;\n  readonly statusCode?: number;\n  readonly statusText?: string;\n  readonly cause?: unknown;\n\n  constructor({\n    url,\n    statusCode,\n    statusText,\n    cause,\n    message = cause == null\n      ? `Failed to download ${url}: ${statusCode} ${statusText}`\n      : `Failed to download ${url}: ${cause}`,\n  }: {\n    url: string;\n    statusCode?: number;\n    statusText?: string;\n    message?: string;\n    cause?: unknown;\n  }) {\n    super(message);\n\n    this.name = 'AI_DownloadError';\n\n    this.url = url;\n    this.statusCode = statusCode;\n    this.statusText = statusText;\n    this.cause = cause;\n  }\n\n  static isDownloadError(error: unknown): error is DownloadError {\n    return (\n      error instanceof Error &&\n      error.name === 'AI_DownloadError' &&\n      typeof (error as DownloadError).url === 'string' &&\n      ((error as DownloadError).statusCode == null ||\n        typeof (error as DownloadError).statusCode === 'number') &&\n      ((error as DownloadError).statusText == null ||\n        typeof (error as DownloadError).statusText === 'string')\n    );\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      url: this.url,\n      statusCode: this.statusCode,\n      statusText: this.statusText,\n      cause: this.cause,\n    };\n  }\n}\n","export class EmptyResponseBodyError extends Error {\n  constructor({ message = 'Empty response body' }: { message?: string } = {}) {\n    super(message);\n\n    this.name = 'AI_EmptyResponseBodyError';\n  }\n\n  static isEmptyResponseBodyError(\n    error: unknown,\n  ): error is EmptyResponseBodyError {\n    return error instanceof Error && error.name === 'AI_EmptyResponseBodyError';\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n    };\n  }\n}\n","export class InvalidArgumentError extends Error {\n  readonly parameter: string;\n  readonly value: unknown;\n\n  constructor({\n    parameter,\n    value,\n    message,\n  }: {\n    parameter: string;\n    value: unknown;\n    message: string;\n  }) {\n    super(`Invalid argument for parameter ${parameter}: ${message}`);\n\n    this.name = 'AI_InvalidArgumentError';\n\n    this.parameter = parameter;\n    this.value = value;\n  }\n\n  static isInvalidArgumentError(error: unknown): error is InvalidArgumentError {\n    return (\n      error instanceof Error &&\n      error.name === 'AI_InvalidArgumentError' &&\n      typeof (error as InvalidArgumentError).parameter === 'string' &&\n      typeof (error as InvalidArgumentError).value === 'string'\n    );\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n\n      parameter: this.parameter,\n      value: this.value,\n    };\n  }\n}\n","export class InvalidDataContentError extends Error {\n  readonly content: unknown;\n  readonly cause?: unknown;\n\n  constructor({\n    content,\n    cause,\n    message = `Invalid data content. Expected a base64 string, Uint8Array, ArrayBuffer, or Buffer, but got ${typeof content}.`,\n  }: {\n    content: unknown;\n    cause?: unknown;\n    message?: string;\n  }) {\n    super(message);\n\n    this.name = 'AI_InvalidDataContentError';\n\n    this.cause = cause;\n    this.content = content;\n  }\n\n  static isInvalidDataContentError(\n    error: unknown,\n  ): error is InvalidDataContentError {\n    return (\n      error instanceof Error &&\n      error.name === 'AI_InvalidDataContentError' &&\n      (error as InvalidDataContentError).content != null\n    );\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n      cause: this.cause,\n      content: this.content,\n    };\n  }\n}\n","export class InvalidPromptError extends Error {\n  readonly prompt: unknown;\n\n  constructor({ prompt, message }: { prompt: unknown; message: string }) {\n    super(`Invalid prompt: ${message}`);\n\n    this.name = 'AI_InvalidPromptError';\n\n    this.prompt = prompt;\n  }\n\n  static isInvalidPromptError(error: unknown): error is InvalidPromptError {\n    return (\n      error instanceof Error &&\n      error.name === 'AI_InvalidPromptError' &&\n      prompt != null\n    );\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n\n      prompt: this.prompt,\n    };\n  }\n}\n","/**\nServer returned a response with invalid data content. This should be thrown by providers when they\ncannot parse the response from the API.\n */\nexport class InvalidResponseDataError extends Error {\n  readonly data: unknown;\n\n  constructor({\n    data,\n    message = `Invalid response data: ${JSON.stringify(data)}.`,\n  }: {\n    data: unknown;\n    message?: string;\n  }) {\n    super(message);\n\n    this.name = 'AI_InvalidResponseDataError';\n\n    this.data = data;\n  }\n\n  static isInvalidResponseDataError(\n    error: unknown,\n  ): error is InvalidResponseDataError {\n    return (\n      error instanceof Error &&\n      error.name === 'AI_InvalidResponseDataError' &&\n      (error as InvalidResponseDataError).data != null\n    );\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n\n      data: this.data,\n    };\n  }\n}\n","export function getErrorMessage(error: unknown | undefined) {\n  if (error == null) {\n    return 'unknown error';\n  }\n\n  if (typeof error === 'string') {\n    return error;\n  }\n\n  if (error instanceof Error) {\n    return error.message;\n  }\n\n  return JSON.stringify(error);\n}\n","import { getErrorMessage } from './get-error-message';\n\nexport class InvalidToolArgumentsError extends Error {\n  readonly toolName: string;\n  readonly toolArgs: string;\n  readonly cause: unknown;\n\n  constructor({\n    toolArgs,\n    toolName,\n    cause,\n    message = `Invalid arguments for tool ${toolName}: ${getErrorMessage(\n      cause,\n    )}`,\n  }: {\n    message?: string;\n    toolArgs: string;\n    toolName: string;\n    cause: unknown;\n  }) {\n    super(message);\n\n    this.name = 'AI_InvalidToolArgumentsError';\n\n    this.toolArgs = toolArgs;\n    this.toolName = toolName;\n    this.cause = cause;\n  }\n\n  static isInvalidToolArgumentsError(\n    error: unknown,\n  ): error is InvalidToolArgumentsError {\n    return (\n      error instanceof Error &&\n      error.name === 'AI_InvalidToolArgumentsError' &&\n      typeof (error as InvalidToolArgumentsError).toolName === 'string' &&\n      typeof (error as InvalidToolArgumentsError).toolArgs === 'string'\n    );\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      cause: this.cause,\n      stack: this.stack,\n\n      toolName: this.toolName,\n      toolArgs: this.toolArgs,\n    };\n  }\n}\n","import { getErrorMessage } from './get-error-message';\n\nexport class JSONParseError extends Error {\n  // note: property order determines debugging output\n  readonly text: string;\n  readonly cause: unknown;\n\n  constructor({ text, cause }: { text: string; cause: unknown }) {\n    super(\n      `JSON parsing failed: ` +\n        `Text: ${text}.\\n` +\n        `Error message: ${getErrorMessage(cause)}`,\n    );\n\n    this.name = 'AI_JSONParseError';\n\n    this.cause = cause;\n    this.text = text;\n  }\n\n  static isJSONParseError(error: unknown): error is JSONParseError {\n    return (\n      error instanceof Error &&\n      error.name === 'AI_JSONParseError' &&\n      typeof (error as JSONParseError).text === 'string' &&\n      typeof (error as JSONParseError).cause === 'string'\n    );\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      cause: this.cause,\n      stack: this.stack,\n\n      valueText: this.text,\n    };\n  }\n}\n","export class LoadAPIKeyError extends Error {\n  constructor({ message }: { message: string }) {\n    super(message);\n\n    this.name = 'AI_LoadAPIKeyError';\n  }\n\n  static isLoadAPIKeyError(error: unknown): error is LoadAPIKeyError {\n    return error instanceof Error && error.name === 'AI_LoadAPIKeyError';\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n    };\n  }\n}\n","export class LoadSettingError extends Error {\n  constructor({ message }: { message: string }) {\n    super(message);\n\n    this.name = 'AI_LoadSettingError';\n  }\n\n  static isLoadSettingError(error: unknown): error is LoadSettingError {\n    return error instanceof Error && error.name === 'AI_LoadSettingError';\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n    };\n  }\n}\n","/**\nThrown when the AI provider fails to generate any content.\n */\nexport class NoContentGeneratedError extends Error {\n  readonly cause: unknown;\n\n  constructor({\n    message = 'No content generated.',\n  }: { message?: string } = {}) {\n    super(message);\n\n    this.name = 'AI_NoContentGeneratedError';\n  }\n\n  static isNoContentGeneratedError(\n    error: unknown,\n  ): error is NoContentGeneratedError {\n    return (\n      error instanceof Error && error.name === 'AI_NoContentGeneratedError'\n    );\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      cause: this.cause,\n      message: this.message,\n      stack: this.stack,\n    };\n  }\n}\n","/**\nThrown when the AI provider fails to generate a parsable object.\n */\nexport class NoObjectGeneratedError extends Error {\n  readonly cause: unknown;\n\n  constructor({ message = 'No object generated.' }: { message?: string } = {}) {\n    super(message);\n\n    this.name = 'AI_NoObjectGeneratedError';\n  }\n\n  static isNoObjectGeneratedError(\n    error: unknown,\n  ): error is NoObjectGeneratedError {\n    return error instanceof Error && error.name === 'AI_NoObjectGeneratedError';\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      cause: this.cause,\n      message: this.message,\n      stack: this.stack,\n    };\n  }\n}\n","export class NoSuchToolError extends Error {\n  readonly toolName: string;\n  readonly availableTools: string[] | undefined;\n\n  constructor({\n    toolName,\n    availableTools = undefined,\n    message = `Model tried to call unavailable tool '${toolName}'. ${\n      availableTools === undefined\n        ? 'No tools are available.'\n        : `Available tools: ${availableTools.join(', ')}.`\n    }`,\n  }: {\n    toolName: string;\n    availableTools?: string[] | undefined;\n    message?: string;\n  }) {\n    super(message);\n\n    this.name = 'AI_NoSuchToolError';\n\n    this.toolName = toolName;\n    this.availableTools = availableTools;\n  }\n\n  static isNoSuchToolError(error: unknown): error is NoSuchToolError {\n    return (\n      error instanceof Error &&\n      error.name === 'AI_NoSuchToolError' &&\n      'toolName' in error &&\n      error.toolName != undefined &&\n      typeof error.name === 'string'\n    );\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n\n      toolName: this.toolName,\n      availableTools: this.availableTools,\n    };\n  }\n}\n","export type RetryErrorReason =\n  | 'maxRetriesExceeded'\n  | 'errorNotRetryable'\n  | 'abort';\n\nexport class RetryError extends Error {\n  // note: property order determines debugging output\n  readonly reason: RetryErrorReason;\n  readonly lastError: unknown;\n  readonly errors: Array<unknown>;\n\n  constructor({\n    message,\n    reason,\n    errors,\n  }: {\n    message: string;\n    reason: RetryErrorReason;\n    errors: Array<unknown>;\n  }) {\n    super(message);\n\n    this.name = 'AI_RetryError';\n    this.reason = reason;\n    this.errors = errors;\n\n    // separate our last error to make debugging via log easier:\n    this.lastError = errors[errors.length - 1];\n  }\n\n  static isRetryError(error: unknown): error is RetryError {\n    return (\n      error instanceof Error &&\n      error.name === 'AI_RetryError' &&\n      typeof (error as RetryError).reason === 'string' &&\n      Array.isArray((error as RetryError).errors)\n    );\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      reason: this.reason,\n      lastError: this.lastError,\n      errors: this.errors,\n    };\n  }\n}\n","export class TooManyEmbeddingValuesForCallError extends Error {\n  readonly provider: string;\n  readonly modelId: string;\n  readonly maxEmbeddingsPerCall: number;\n  readonly values: Array<unknown>;\n\n  constructor(options: {\n    provider: string;\n    modelId: string;\n    maxEmbeddingsPerCall: number;\n    values: Array<unknown>;\n  }) {\n    super(\n      `Too many values for a single embedding call. ` +\n        `The ${options.provider} model \"${options.modelId}\" can only embed up to ` +\n        `${options.maxEmbeddingsPerCall} values per call, but ${options.values.length} values were provided.`,\n    );\n\n    this.name = 'AI_TooManyEmbeddingValuesForCallError';\n\n    this.provider = options.provider;\n    this.modelId = options.modelId;\n    this.maxEmbeddingsPerCall = options.maxEmbeddingsPerCall;\n    this.values = options.values;\n  }\n\n  static isInvalidPromptError(\n    error: unknown,\n  ): error is TooManyEmbeddingValuesForCallError {\n    return (\n      error instanceof Error &&\n      error.name === 'AI_TooManyEmbeddingValuesForCallError' &&\n      'provider' in error &&\n      typeof error.provider === 'string' &&\n      'modelId' in error &&\n      typeof error.modelId === 'string' &&\n      'maxEmbeddingsPerCall' in error &&\n      typeof error.maxEmbeddingsPerCall === 'number' &&\n      'values' in error &&\n      Array.isArray(error.values)\n    );\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n\n      provider: this.provider,\n      modelId: this.modelId,\n      maxEmbeddingsPerCall: this.maxEmbeddingsPerCall,\n      values: this.values,\n    };\n  }\n}\n","import { LanguageModelV1FunctionTool } from '../language-model/v1/language-model-v1-function-tool';\nimport { getErrorMessage } from './get-error-message';\n\nexport class ToolCallParseError extends Error {\n  readonly cause: unknown;\n  readonly text: string;\n  readonly tools: LanguageModelV1FunctionTool[];\n\n  constructor({\n    cause,\n    text,\n    tools,\n    message = `Failed to parse tool calls: ${getErrorMessage(cause)}`,\n  }: {\n    cause: unknown;\n    text: string;\n    tools: LanguageModelV1FunctionTool[];\n    message?: string;\n  }) {\n    super(message);\n\n    this.name = 'AI_ToolCallParseError';\n\n    this.cause = cause;\n    this.text = text;\n    this.tools = tools;\n  }\n\n  static isToolCallParseError(error: unknown): error is ToolCallParseError {\n    return (\n      error instanceof Error &&\n      error.name === 'AI_ToolCallParseError' &&\n      'cause' in error &&\n      error.cause != undefined &&\n      'text' in error &&\n      error.text != undefined &&\n      typeof error.text === 'string' &&\n      'tools' in error &&\n      error.tools != undefined\n    );\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n\n      cause: this.cause,\n      text: this.text,\n      tools: this.tools,\n    };\n  }\n}\n","import { getErrorMessage } from './get-error-message';\n\nexport class TypeValidationError extends Error {\n  readonly value: unknown;\n  readonly cause: unknown;\n\n  constructor({ value, cause }: { value: unknown; cause: unknown }) {\n    super(\n      `Type validation failed: ` +\n        `Value: ${JSON.stringify(value)}.\\n` +\n        `Error message: ${getErrorMessage(cause)}`,\n    );\n\n    this.name = 'AI_TypeValidationError';\n\n    this.cause = cause;\n    this.value = value;\n  }\n\n  static isTypeValidationError(error: unknown): error is TypeValidationError {\n    return error instanceof Error && error.name === 'AI_TypeValidationError';\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      cause: this.cause,\n      stack: this.stack,\n\n      value: this.value,\n    };\n  }\n}\n","export class UnsupportedFunctionalityError extends Error {\n  readonly functionality: string;\n\n  constructor({ functionality }: { functionality: string }) {\n    super(`'${functionality}' functionality not supported.`);\n\n    this.name = 'AI_UnsupportedFunctionalityError';\n\n    this.functionality = functionality;\n  }\n\n  static isUnsupportedFunctionalityError(\n    error: unknown,\n  ): error is UnsupportedFunctionalityError {\n    return (\n      error instanceof Error &&\n      error.name === 'AI_UnsupportedFunctionalityError' &&\n      typeof (error as UnsupportedFunctionalityError).functionality === 'string'\n    );\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n\n      functionality: this.functionality,\n    };\n  }\n}\n","export class UnsupportedJSONSchemaError extends Error {\n  readonly reason: string;\n  readonly schema: unknown;\n\n  constructor({\n    schema,\n    reason,\n    message = `Unsupported JSON schema: ${reason}`,\n  }: {\n    schema: unknown;\n    reason: string;\n    message?: string;\n  }) {\n    super(message);\n\n    this.name = 'AI_UnsupportedJSONSchemaError';\n\n    this.reason = reason;\n    this.schema = schema;\n  }\n\n  static isUnsupportedJSONSchemaError(\n    error: unknown,\n  ): error is UnsupportedJSONSchemaError {\n    return (\n      error instanceof Error &&\n      error.name === 'AI_UnsupportedJSONSchemaError' &&\n      'reason' in error &&\n      error.reason != undefined &&\n      'schema' in error &&\n      error.schema !== undefined\n    );\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n\n      reason: this.reason,\n      schema: this.schema,\n    };\n  }\n}\n"],"names":["prompt"],"mappings":"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"}},
    {"offset": {"line": 2247, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2251, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/secure-json-parse/index.js"],"sourcesContent":["'use strict'\n\nconst hasBuffer = typeof Buffer !== 'undefined'\nconst suspectProtoRx = /\"(?:_|\\\\u005[Ff])(?:_|\\\\u005[Ff])(?:p|\\\\u0070)(?:r|\\\\u0072)(?:o|\\\\u006[Ff])(?:t|\\\\u0074)(?:o|\\\\u006[Ff])(?:_|\\\\u005[Ff])(?:_|\\\\u005[Ff])\"\\s*:/\nconst suspectConstructorRx = /\"(?:c|\\\\u0063)(?:o|\\\\u006[Ff])(?:n|\\\\u006[Ee])(?:s|\\\\u0073)(?:t|\\\\u0074)(?:r|\\\\u0072)(?:u|\\\\u0075)(?:c|\\\\u0063)(?:t|\\\\u0074)(?:o|\\\\u006[Ff])(?:r|\\\\u0072)\"\\s*:/\n\nfunction _parse (text, reviver, options) {\n  // Normalize arguments\n  if (options == null) {\n    if (reviver !== null && typeof reviver === 'object') {\n      options = reviver\n      reviver = undefined\n    }\n  }\n\n  if (hasBuffer && Buffer.isBuffer(text)) {\n    text = text.toString()\n  }\n\n  // BOM checker\n  if (text && text.charCodeAt(0) === 0xFEFF) {\n    text = text.slice(1)\n  }\n\n  // Parse normally, allowing exceptions\n  const obj = JSON.parse(text, reviver)\n\n  // Ignore null and non-objects\n  if (obj === null || typeof obj !== 'object') {\n    return obj\n  }\n\n  const protoAction = (options && options.protoAction) || 'error'\n  const constructorAction = (options && options.constructorAction) || 'error'\n\n  // options: 'error' (default) / 'remove' / 'ignore'\n  if (protoAction === 'ignore' && constructorAction === 'ignore') {\n    return obj\n  }\n\n  if (protoAction !== 'ignore' && constructorAction !== 'ignore') {\n    if (suspectProtoRx.test(text) === false && suspectConstructorRx.test(text) === false) {\n      return obj\n    }\n  } else if (protoAction !== 'ignore' && constructorAction === 'ignore') {\n    if (suspectProtoRx.test(text) === false) {\n      return obj\n    }\n  } else {\n    if (suspectConstructorRx.test(text) === false) {\n      return obj\n    }\n  }\n\n  // Scan result for proto keys\n  return filter(obj, { protoAction, constructorAction, safe: options && options.safe })\n}\n\nfunction filter (obj, { protoAction = 'error', constructorAction = 'error', safe } = {}) {\n  let next = [obj]\n\n  while (next.length) {\n    const nodes = next\n    next = []\n\n    for (const node of nodes) {\n      if (protoAction !== 'ignore' && Object.prototype.hasOwnProperty.call(node, '__proto__')) { // Avoid calling node.hasOwnProperty directly\n        if (safe === true) {\n          return null\n        } else if (protoAction === 'error') {\n          throw new SyntaxError('Object contains forbidden prototype property')\n        }\n\n        delete node.__proto__ // eslint-disable-line no-proto\n      }\n\n      if (constructorAction !== 'ignore' &&\n          Object.prototype.hasOwnProperty.call(node, 'constructor') &&\n          Object.prototype.hasOwnProperty.call(node.constructor, 'prototype')) { // Avoid calling node.hasOwnProperty directly\n        if (safe === true) {\n          return null\n        } else if (constructorAction === 'error') {\n          throw new SyntaxError('Object contains forbidden prototype property')\n        }\n\n        delete node.constructor\n      }\n\n      for (const key in node) {\n        const value = node[key]\n        if (value && typeof value === 'object') {\n          next.push(value)\n        }\n      }\n    }\n  }\n  return obj\n}\n\nfunction parse (text, reviver, options) {\n  const stackTraceLimit = Error.stackTraceLimit\n  Error.stackTraceLimit = 0\n  try {\n    return _parse(text, reviver, options)\n  } finally {\n    Error.stackTraceLimit = stackTraceLimit\n  }\n}\n\nfunction safeParse (text, reviver) {\n  const stackTraceLimit = Error.stackTraceLimit\n  Error.stackTraceLimit = 0\n  try {\n    return _parse(text, reviver, { safe: true })\n  } catch (_e) {\n    return null\n  } finally {\n    Error.stackTraceLimit = stackTraceLimit\n  }\n}\n\nmodule.exports = parse\nmodule.exports.default = parse\nmodule.exports.parse = parse\nmodule.exports.safeParse = safeParse\nmodule.exports.scan = filter\n"],"names":[],"mappings":"AAAA;AAEA,MAAM,YAAY,OAAO,WAAW;AACpC,MAAM,iBAAiB;AACvB,MAAM,uBAAuB;AAE7B,SAAS,OAAQ,IAAI,EAAE,OAAO,EAAE,OAAO;IACrC,sBAAsB;IACtB,IAAI,WAAW,MAAM;QACnB,IAAI,YAAY,QAAQ,OAAO,YAAY,UAAU;YACnD,UAAU;YACV,UAAU;QACZ;IACF;IAEA,IAAI,aAAa,OAAO,QAAQ,CAAC,OAAO;QACtC,OAAO,KAAK,QAAQ;IACtB;IAEA,cAAc;IACd,IAAI,QAAQ,KAAK,UAAU,CAAC,OAAO,QAAQ;QACzC,OAAO,KAAK,KAAK,CAAC;IACpB;IAEA,sCAAsC;IACtC,MAAM,MAAM,KAAK,KAAK,CAAC,MAAM;IAE7B,8BAA8B;IAC9B,IAAI,QAAQ,QAAQ,OAAO,QAAQ,UAAU;QAC3C,OAAO;IACT;IAEA,MAAM,cAAc,AAAC,WAAW,QAAQ,WAAW,IAAK;IACxD,MAAM,oBAAoB,AAAC,WAAW,QAAQ,iBAAiB,IAAK;IAEpE,mDAAmD;IACnD,IAAI,gBAAgB,YAAY,sBAAsB,UAAU;QAC9D,OAAO;IACT;IAEA,IAAI,gBAAgB,YAAY,sBAAsB,UAAU;QAC9D,IAAI,eAAe,IAAI,CAAC,UAAU,SAAS,qBAAqB,IAAI,CAAC,UAAU,OAAO;YACpF,OAAO;QACT;IACF,OAAO,IAAI,gBAAgB,YAAY,sBAAsB,UAAU;QACrE,IAAI,eAAe,IAAI,CAAC,UAAU,OAAO;YACvC,OAAO;QACT;IACF,OAAO;QACL,IAAI,qBAAqB,IAAI,CAAC,UAAU,OAAO;YAC7C,OAAO;QACT;IACF;IAEA,6BAA6B;IAC7B,OAAO,OAAO,KAAK;QAAE;QAAa;QAAmB,MAAM,WAAW,QAAQ,IAAI;IAAC;AACrF;AAEA,SAAS,OAAQ,GAAG,EAAE,EAAE,cAAc,OAAO,EAAE,oBAAoB,OAAO,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;IACrF,IAAI,OAAO;QAAC;KAAI;IAEhB,MAAO,KAAK,MAAM,CAAE;QAClB,MAAM,QAAQ;QACd,OAAO,EAAE;QAET,KAAK,MAAM,QAAQ,MAAO;YACxB,IAAI,gBAAgB,YAAY,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,cAAc;gBACvF,IAAI,SAAS,MAAM;oBACjB,OAAO;gBACT,OAAO,IAAI,gBAAgB,SAAS;oBAClC,MAAM,IAAI,YAAY;gBACxB;gBAEA,OAAO,KAAK,SAAS,CAAC,+BAA+B;;YACvD;YAEA,IAAI,sBAAsB,YACtB,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,kBAC3C,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,WAAW,EAAE,cAAc;gBACvE,IAAI,SAAS,MAAM;oBACjB,OAAO;gBACT,OAAO,IAAI,sBAAsB,SAAS;oBACxC,MAAM,IAAI,YAAY;gBACxB;gBAEA,OAAO,KAAK,WAAW;YACzB;YAEA,IAAK,MAAM,OAAO,KAAM;gBACtB,MAAM,QAAQ,IAAI,CAAC,IAAI;gBACvB,IAAI,SAAS,OAAO,UAAU,UAAU;oBACtC,KAAK,IAAI,CAAC;gBACZ;YACF;QACF;IACF;IACA,OAAO;AACT;AAEA,SAAS,MAAO,IAAI,EAAE,OAAO,EAAE,OAAO;IACpC,MAAM,kBAAkB,MAAM,eAAe;IAC7C,MAAM,eAAe,GAAG;IACxB,IAAI;QACF,OAAO,OAAO,MAAM,SAAS;IAC/B,SAAU;QACR,MAAM,eAAe,GAAG;IAC1B;AACF;AAEA,SAAS,UAAW,IAAI,EAAE,OAAO;IAC/B,MAAM,kBAAkB,MAAM,eAAe;IAC7C,MAAM,eAAe,GAAG;IACxB,IAAI;QACF,OAAO,OAAO,MAAM,SAAS;YAAE,MAAM;QAAK;IAC5C,EAAE,OAAO,IAAI;QACX,OAAO;IACT,SAAU;QACR,MAAM,eAAe,GAAG;IAC1B;AACF;AAEA,OAAO,OAAO,GAAG;AACjB,OAAO,OAAO,CAAC,OAAO,GAAG;AACzB,OAAO,OAAO,CAAC,KAAK,GAAG;AACvB,OAAO,OAAO,CAAC,SAAS,GAAG;AAC3B,OAAO,OAAO,CAAC,IAAI,GAAG"}},
    {"offset": {"line": 2364, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2369, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/eventsource-parser/src/parse.ts"],"sourcesContent":["/**\n * EventSource/Server-Sent Events parser\n * @see https://html.spec.whatwg.org/multipage/server-sent-events.html\n *\n * Based on code from the {@link https://github.com/EventSource/eventsource | EventSource module},\n * which is licensed under the MIT license. And copyrighted the EventSource GitHub organisation.\n */\nimport type {EventSourceParseCallback, EventSourceParser} from './types.js'\n\n/**\n * Creates a new EventSource parser.\n *\n * @param onParse - Callback to invoke when a new event is parsed, or a new reconnection interval\n *                  has been sent from the server\n *\n * @returns A new EventSource parser, with `parse` and `reset` methods.\n * @public\n */\nexport function createParser(onParse: EventSourceParseCallback): EventSourceParser {\n  // Processing state\n  let isFirstChunk: boolean\n  let buffer: string\n  let startingPosition: number\n  let startingFieldLength: number\n\n  // Event state\n  let eventId: string | undefined\n  let eventName: string | undefined\n  let data: string\n\n  reset()\n  return {feed, reset}\n\n  function reset(): void {\n    isFirstChunk = true\n    buffer = ''\n    startingPosition = 0\n    startingFieldLength = -1\n\n    eventId = undefined\n    eventName = undefined\n    data = ''\n  }\n\n  function feed(chunk: string): void {\n    buffer = buffer ? buffer + chunk : chunk\n\n    // Strip any UTF8 byte order mark (BOM) at the start of the stream.\n    // Note that we do not strip any non - UTF8 BOM, as eventsource streams are\n    // always decoded as UTF8 as per the specification.\n    if (isFirstChunk && hasBom(buffer)) {\n      buffer = buffer.slice(BOM.length)\n    }\n\n    isFirstChunk = false\n\n    // Set up chunk-specific processing state\n    const length = buffer.length\n    let position = 0\n    let discardTrailingNewline = false\n\n    // Read the current buffer byte by byte\n    while (position < length) {\n      // EventSource allows for carriage return + line feed, which means we\n      // need to ignore a linefeed character if the previous character was a\n      // carriage return\n      // @todo refactor to reduce nesting, consider checking previous byte?\n      // @todo but consider multiple chunks etc\n      if (discardTrailingNewline) {\n        if (buffer[position] === '\\n') {\n          ++position\n        }\n        discardTrailingNewline = false\n      }\n\n      let lineLength = -1\n      let fieldLength = startingFieldLength\n      let character: string\n\n      for (let index = startingPosition; lineLength < 0 && index < length; ++index) {\n        character = buffer[index]\n        if (character === ':' && fieldLength < 0) {\n          fieldLength = index - position\n        } else if (character === '\\r') {\n          discardTrailingNewline = true\n          lineLength = index - position\n        } else if (character === '\\n') {\n          lineLength = index - position\n        }\n      }\n\n      if (lineLength < 0) {\n        startingPosition = length - position\n        startingFieldLength = fieldLength\n        break\n      } else {\n        startingPosition = 0\n        startingFieldLength = -1\n      }\n\n      parseEventStreamLine(buffer, position, fieldLength, lineLength)\n\n      position += lineLength + 1\n    }\n\n    if (position === length) {\n      // If we consumed the entire buffer to read the event, reset the buffer\n      buffer = ''\n    } else if (position > 0) {\n      // If there are bytes left to process, set the buffer to the unprocessed\n      // portion of the buffer only\n      buffer = buffer.slice(position)\n    }\n  }\n\n  function parseEventStreamLine(\n    lineBuffer: string,\n    index: number,\n    fieldLength: number,\n    lineLength: number,\n  ) {\n    if (lineLength === 0) {\n      // We reached the last line of this event\n      if (data.length > 0) {\n        onParse({\n          type: 'event',\n          id: eventId,\n          event: eventName || undefined,\n          data: data.slice(0, -1), // remove trailing newline\n        })\n\n        data = ''\n        eventId = undefined\n      }\n      eventName = undefined\n      return\n    }\n\n    const noValue = fieldLength < 0\n    const field = lineBuffer.slice(index, index + (noValue ? lineLength : fieldLength))\n    let step = 0\n\n    if (noValue) {\n      step = lineLength\n    } else if (lineBuffer[index + fieldLength + 1] === ' ') {\n      step = fieldLength + 2\n    } else {\n      step = fieldLength + 1\n    }\n\n    const position = index + step\n    const valueLength = lineLength - step\n    const value = lineBuffer.slice(position, position + valueLength).toString()\n\n    if (field === 'data') {\n      data += value ? `${value}\\n` : '\\n'\n    } else if (field === 'event') {\n      eventName = value\n    } else if (field === 'id' && !value.includes('\\u0000')) {\n      eventId = value\n    } else if (field === 'retry') {\n      const retry = parseInt(value, 10)\n      if (!Number.isNaN(retry)) {\n        onParse({type: 'reconnect-interval', value: retry})\n      }\n    }\n  }\n}\n\nconst BOM = [239, 187, 191]\n\nfunction hasBom(buffer: string) {\n  return BOM.every((charCode: number, index: number) => buffer.charCodeAt(index) === charCode)\n}\n"],"names":["createParser","onParse","isFirstChunk","buffer","startingPosition","startingFieldLength","eventId","eventName","data","reset","feed","chunk","hasBom","slice","BOM","length","position","discardTrailingNewline","lineLength","fieldLength","character","index","parseEventStreamLine","lineBuffer","type","id","event","noValue","field","step","valueLength","value","toString","concat","includes","retry","parseInt","Number","isNaN","every","charCode","charCodeAt"],"mappings":"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"}},
    {"offset": {"line": 2496, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2501, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/eventsource-parser/src/stream.ts"],"sourcesContent":["import type {EventSourceParser, ParsedEvent} from './types.js'\nimport {createParser} from './parse.js'\n\n/**\n * A TransformStream that ingests a stream of strings and produces a stream of ParsedEvents.\n *\n * @example\n * ```\n * const eventStream =\n *   response.body\n *     .pipeThrough(new TextDecoderStream())\n *     .pipeThrough(new EventSourceParserStream())\n * ```\n * @public\n */\nexport class EventSourceParserStream extends TransformStream<string, ParsedEvent> {\n  constructor() {\n    let parser!: EventSourceParser\n\n    super({\n      start(controller) {\n        parser = createParser((event) => {\n          if (event.type === 'event') {\n            controller.enqueue(event)\n          }\n        })\n      },\n      transform(chunk) {\n        parser.feed(chunk)\n      },\n    })\n  }\n}\n\nexport type {ParsedEvent} from './types.js'\n"],"names":["EventSourceParserStream","TransformStream","constructor","parser","start","controller","createParser","event","type","enqueue","transform","chunk","feed"],"mappings":";;;;;;AAeO,MAAMA,gCAAgCC;IAC3CC,aAAc;QACR,IAAAC;QAEE,KAAA,CAAA;YACJC,OAAMC,UAAY;gBACPF,SAAAG,CAAAA,GAAAA,wJAAAA,CAAAA,eAAA,AAAAA,EAAcC,CAAAA;oBACjB,IAAAA,MAAMC,IAAAA,KAAS,SAAS;wBAC1BH,WAAWI,OAAAA,CAAQF;oBACrB;gBAAA;YAEJ;YACAG,WAAUC,KAAO;gBACfR,OAAOS,IAAAA,CAAKD;YACd;QAAA;IAEJ;AACF"}},
    {"offset": {"line": 2526, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2531, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/ai/node_modules/@ai-sdk/provider-utils/src/combine-headers.ts","/turbopack/[project]/node_modules/ai/node_modules/@ai-sdk/provider-utils/src/convert-async-generator-to-readable-stream.ts","/turbopack/[project]/node_modules/ai/node_modules/@ai-sdk/provider-utils/src/extract-response-headers.ts","/turbopack/[project]/node_modules/ai/node_modules/@ai-sdk/provider-utils/src/generate-id.ts","/turbopack/[project]/node_modules/ai/node_modules/@ai-sdk/provider-utils/src/get-error-message.ts","/turbopack/[project]/node_modules/ai/node_modules/@ai-sdk/provider-utils/src/is-abort-error.ts","/turbopack/[project]/node_modules/ai/node_modules/@ai-sdk/provider-utils/src/load-api-key.ts","/turbopack/[project]/node_modules/ai/node_modules/@ai-sdk/provider-utils/src/load-setting.ts","/turbopack/[project]/node_modules/ai/node_modules/@ai-sdk/provider-utils/src/load-optional-setting.ts","/turbopack/[project]/node_modules/ai/node_modules/@ai-sdk/provider-utils/src/parse-json.ts","/turbopack/[project]/node_modules/ai/node_modules/@ai-sdk/provider-utils/src/validate-types.ts","/turbopack/[project]/node_modules/ai/node_modules/@ai-sdk/provider-utils/src/validator.ts","/turbopack/[project]/node_modules/ai/node_modules/@ai-sdk/provider-utils/src/post-to-api.ts","/turbopack/[project]/node_modules/ai/node_modules/@ai-sdk/provider-utils/src/remove-undefined-entries.ts","/turbopack/[project]/node_modules/ai/node_modules/@ai-sdk/provider-utils/src/response-handler.ts","/turbopack/[project]/node_modules/ai/node_modules/@ai-sdk/provider-utils/src/uint8-utils.ts","/turbopack/[project]/node_modules/ai/node_modules/@ai-sdk/provider-utils/src/without-trailing-slash.ts"],"sourcesContent":["export function combineHeaders(\n  ...headers: Array<Record<string, string | undefined> | undefined>\n): Record<string, string | undefined> {\n  return headers.reduce(\n    (combinedHeaders, currentHeaders) => ({\n      ...combinedHeaders,\n      ...(currentHeaders ?? {}),\n    }),\n    {},\n  ) as Record<string, string | undefined>;\n}\n","/**\n * Converts an AsyncGenerator to a ReadableStream.\n *\n * @template T - The type of elements produced by the AsyncGenerator.\n * @param {AsyncGenerator<T>} stream - The AsyncGenerator to convert.\n * @returns {ReadableStream<T>} - A ReadableStream that provides the same data as the AsyncGenerator.\n */\nexport function convertAsyncGeneratorToReadableStream<T>(\n  stream: AsyncGenerator<T>,\n): ReadableStream<T> {\n  return new ReadableStream<T>({\n    /**\n     * Called when the consumer wants to pull more data from the stream.\n     *\n     * @param {ReadableStreamDefaultController<T>} controller - The controller to enqueue data into the stream.\n     * @returns {Promise<void>}\n     */\n    async pull(controller) {\n      try {\n        const { value, done } = await stream.next();\n        if (done) {\n          controller.close();\n        } else {\n          controller.enqueue(value);\n        }\n      } catch (error) {\n        controller.error(error);\n      }\n    },\n    /**\n     * Called when the consumer cancels the stream.\n     */\n    cancel() {},\n  });\n}\n","/**\nExtracts the headers from a response object and returns them as a key-value object.\n\n@param response - The response object to extract headers from.\n@returns The headers as a key-value object.\n*/\nexport function extractResponseHeaders(\n  response: Response,\n): Record<string, string> {\n  const headers: Record<string, string> = {};\n  response.headers.forEach((value, key) => {\n    headers[key] = value;\n  });\n  return headers;\n}\n","import { customAlphabet } from 'nanoid/non-secure';\n\n/**\n * Creates an ID generator that uses an alphabet of digits, uppercase and lowercase letters.\n *\n * @param alphabet - The alphabet to use for the ID. Default: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.\n * @param prefix - The prefix of the ID to generate. Default: ''.\n * @param size - The size of the random part of the ID to generate. Default: 7.\n */\n//TODO change default size to 16 in 4.0\nexport const createIdGenerator = ({\n  prefix = '',\n  size: defaultSize = 7,\n  alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz',\n}: {\n  prefix?: string;\n  size?: number;\n  alphabet?: string;\n} = {}): ((size?: number) => string) => {\n  const generator = customAlphabet(alphabet, defaultSize);\n  return size => `${prefix}${generator(size)}`;\n};\n\n/**\n * Generates a 7-character random string to use for IDs. Not secure.\n *\n * @param size - The size of the ID to generate. Default: 7.\n */\n//TODO change default size to 16 in 4.0\nexport const generateId = createIdGenerator();\n","export function getErrorMessage(error: unknown | undefined) {\n  if (error == null) {\n    return 'unknown error';\n  }\n\n  if (typeof error === 'string') {\n    return error;\n  }\n\n  if (error instanceof Error) {\n    return error.message;\n  }\n\n  return JSON.stringify(error);\n}\n","export function isAbortError(error: unknown): error is Error {\n  return (\n    error instanceof Error &&\n    (error.name === 'AbortError' || error.name === 'TimeoutError')\n  );\n}\n","import { LoadAPIKeyError } from '@ai-sdk/provider';\n\nexport function loadApiKey({\n  apiKey,\n  environmentVariableName,\n  apiKeyParameterName = 'apiKey',\n  description,\n}: {\n  apiKey: string | undefined;\n  environmentVariableName: string;\n  apiKeyParameterName?: string;\n  description: string;\n}): string {\n  if (typeof apiKey === 'string') {\n    return apiKey;\n  }\n\n  if (apiKey != null) {\n    throw new LoadAPIKeyError({\n      message: `${description} API key must be a string.`,\n    });\n  }\n\n  if (typeof process === 'undefined') {\n    throw new LoadAPIKeyError({\n      message: `${description} API key is missing. Pass it using the '${apiKeyParameterName}' parameter. Environment variables is not supported in this environment.`,\n    });\n  }\n\n  apiKey = process.env[environmentVariableName];\n\n  if (apiKey == null) {\n    throw new LoadAPIKeyError({\n      message: `${description} API key is missing. Pass it using the '${apiKeyParameterName}' parameter or the ${environmentVariableName} environment variable.`,\n    });\n  }\n\n  if (typeof apiKey !== 'string') {\n    throw new LoadAPIKeyError({\n      message: `${description} API key must be a string. The value of the ${environmentVariableName} environment variable is not a string.`,\n    });\n  }\n\n  return apiKey;\n}\n","import { LoadSettingError } from '@ai-sdk/provider';\n\n/**\n * Loads a `string` setting from the environment or a parameter.\n *\n * @param settingValue - The setting value.\n * @param environmentVariableName - The environment variable name.\n * @param settingName - The setting name.\n * @param description - The description of the setting.\n * @returns The setting value.\n */\nexport function loadSetting({\n  settingValue,\n  environmentVariableName,\n  settingName,\n  description,\n}: {\n  settingValue: string | undefined;\n  environmentVariableName: string;\n  settingName: string;\n  description: string;\n}): string {\n  if (typeof settingValue === 'string') {\n    return settingValue;\n  }\n\n  if (settingValue != null) {\n    throw new LoadSettingError({\n      message: `${description} setting must be a string.`,\n    });\n  }\n\n  if (typeof process === 'undefined') {\n    throw new LoadSettingError({\n      message:\n        `${description} setting is missing. ` +\n        `Pass it using the '${settingName}' parameter. ` +\n        `Environment variables is not supported in this environment.`,\n    });\n  }\n\n  settingValue = process.env[environmentVariableName];\n\n  if (settingValue == null) {\n    throw new LoadSettingError({\n      message:\n        `${description} setting is missing. ` +\n        `Pass it using the '${settingName}' parameter ` +\n        `or the ${environmentVariableName} environment variable.`,\n    });\n  }\n\n  if (typeof settingValue !== 'string') {\n    throw new LoadSettingError({\n      message:\n        `${description} setting must be a string. ` +\n        `The value of the ${environmentVariableName} environment variable is not a string.`,\n    });\n  }\n\n  return settingValue;\n}\n","/**\n * Loads an optional `string` setting from the environment or a parameter.\n *\n * @param settingValue - The setting value.\n * @param environmentVariableName - The environment variable name.\n * @returns The setting value.\n */\nexport function loadOptionalSetting({\n  settingValue,\n  environmentVariableName,\n}: {\n  settingValue: string | undefined;\n  environmentVariableName: string;\n}): string | undefined {\n  if (typeof settingValue === 'string') {\n    return settingValue;\n  }\n\n  if (settingValue != null || typeof process === 'undefined') {\n    return undefined;\n  }\n\n  settingValue = process.env[environmentVariableName];\n\n  if (settingValue == null || typeof settingValue !== 'string') {\n    return undefined;\n  }\n\n  return settingValue;\n}\n","import {\n  JSONParseError,\n  JSONValue,\n  TypeValidationError,\n} from '@ai-sdk/provider';\nimport SecureJSON from 'secure-json-parse';\nimport { ZodSchema } from 'zod';\nimport { safeValidateTypes, validateTypes } from './validate-types';\nimport { Validator } from './validator';\n\n/**\n * Parses a JSON string into an unknown object.\n *\n * @param text - The JSON string to parse.\n * @returns {JSONValue} - The parsed JSON object.\n */\nexport function parseJSON(options: {\n  text: string;\n  schema?: undefined;\n}): JSONValue;\n/**\n * Parses a JSON string into a strongly-typed object using the provided schema.\n *\n * @template T - The type of the object to parse the JSON into.\n * @param {string} text - The JSON string to parse.\n * @param {Validator<T>} schema - The schema to use for parsing the JSON.\n * @returns {T} - The parsed object.\n */\nexport function parseJSON<T>(options: {\n  text: string;\n  schema: ZodSchema<T> | Validator<T>;\n}): T;\nexport function parseJSON<T>({\n  text,\n  schema,\n}: {\n  text: string;\n  schema?: ZodSchema<T> | Validator<T>;\n}): T {\n  try {\n    const value = SecureJSON.parse(text);\n\n    if (schema == null) {\n      return value;\n    }\n\n    return validateTypes({ value, schema });\n  } catch (error) {\n    if (\n      JSONParseError.isJSONParseError(error) ||\n      TypeValidationError.isTypeValidationError(error)\n    ) {\n      throw error;\n    }\n\n    throw new JSONParseError({ text, cause: error });\n  }\n}\n\nexport type ParseResult<T> =\n  | { success: true; value: T }\n  | { success: false; error: JSONParseError | TypeValidationError };\n\n/**\n * Safely parses a JSON string and returns the result as an object of type `unknown`.\n *\n * @param text - The JSON string to parse.\n * @returns {object} Either an object with `success: true` and the parsed data, or an object with `success: false` and the error that occurred.\n */\nexport function safeParseJSON(options: {\n  text: string;\n  schema?: undefined;\n}): ParseResult<JSONValue>;\n/**\n * Safely parses a JSON string into a strongly-typed object, using a provided schema to validate the object.\n *\n * @template T - The type of the object to parse the JSON into.\n * @param {string} text - The JSON string to parse.\n * @param {Validator<T>} schema - The schema to use for parsing the JSON.\n * @returns An object with either a `success` flag and the parsed and typed data, or a `success` flag and an error object.\n */\nexport function safeParseJSON<T>(options: {\n  text: string;\n  schema: ZodSchema<T> | Validator<T>;\n}): ParseResult<T>;\nexport function safeParseJSON<T>({\n  text,\n  schema,\n}: {\n  text: string;\n  schema?: ZodSchema<T> | Validator<T>;\n}):\n  | { success: true; value: T }\n  | { success: false; error: JSONParseError | TypeValidationError } {\n  try {\n    const value = SecureJSON.parse(text);\n\n    if (schema == null) {\n      return {\n        success: true,\n        value: value as T,\n      };\n    }\n\n    return safeValidateTypes({ value, schema });\n  } catch (error) {\n    return {\n      success: false,\n      error: JSONParseError.isJSONParseError(error)\n        ? error\n        : new JSONParseError({ text, cause: error }),\n    };\n  }\n}\n\nexport function isParsableJson(input: string): boolean {\n  try {\n    SecureJSON.parse(input);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n@deprecated Use `isParsableJson` instead.\n */\nexport const isParseableJson = isParsableJson;\n","import { TypeValidationError } from '@ai-sdk/provider';\nimport { z } from 'zod';\nimport { Validator, asValidator } from './validator';\n\n/**\n * Validates the types of an unknown object using a schema and\n * return a strongly-typed object.\n *\n * @template T - The type of the object to validate.\n * @param {string} options.value - The object to validate.\n * @param {Validator<T>} options.schema - The schema to use for validating the JSON.\n * @returns {T} - The typed object.\n */\nexport function validateTypes<T>({\n  value,\n  schema: inputSchema,\n}: {\n  value: unknown;\n  schema: z.Schema<T, z.ZodTypeDef, any> | Validator<T>;\n}): T {\n  const result = safeValidateTypes({ value, schema: inputSchema });\n\n  if (!result.success) {\n    throw TypeValidationError.wrap({ value, cause: result.error });\n  }\n\n  return result.value;\n}\n\n/**\n * Safely validates the types of an unknown object using a schema and\n * return a strongly-typed object.\n *\n * @template T - The type of the object to validate.\n * @param {string} options.value - The JSON object to validate.\n * @param {Validator<T>} options.schema - The schema to use for validating the JSON.\n * @returns An object with either a `success` flag and the parsed and typed data, or a `success` flag and an error object.\n */\nexport function safeValidateTypes<T>({\n  value,\n  schema,\n}: {\n  value: unknown;\n  schema: z.Schema<T, z.ZodTypeDef, any> | Validator<T>;\n}):\n  | { success: true; value: T }\n  | { success: false; error: TypeValidationError } {\n  const validator = asValidator(schema);\n\n  try {\n    if (validator.validate == null) {\n      return { success: true, value: value as T };\n    }\n\n    const result = validator.validate(value);\n\n    if (result.success) {\n      return result;\n    }\n\n    return {\n      success: false,\n      error: TypeValidationError.wrap({ value, cause: result.error }),\n    };\n  } catch (error) {\n    return {\n      success: false,\n      error: TypeValidationError.wrap({ value, cause: error }),\n    };\n  }\n}\n","import { z } from 'zod';\n\n/**\n * Used to mark validator functions so we can support both Zod and custom schemas.\n */\nexport const validatorSymbol = Symbol.for('vercel.ai.validator');\n\nexport type ValidationResult<OBJECT> =\n  | { success: true; value: OBJECT }\n  | { success: false; error: Error };\n\nexport type Validator<OBJECT = unknown> = {\n  /**\n   * Used to mark validator functions so we can support both Zod and custom schemas.\n   */\n  [validatorSymbol]: true;\n\n  /**\n   * Optional. Validates that the structure of a value matches this schema,\n   * and returns a typed version of the value if it does.\n   */\n  readonly validate?: (value: unknown) => ValidationResult<OBJECT>;\n};\n\n/**\n * Create a validator.\n *\n * @param validate A validation function for the schema.\n */\nexport function validator<OBJECT>(\n  validate?: undefined | ((value: unknown) => ValidationResult<OBJECT>),\n): Validator<OBJECT> {\n  return { [validatorSymbol]: true, validate };\n}\n\nexport function isValidator(value: unknown): value is Validator {\n  return (\n    typeof value === 'object' &&\n    value !== null &&\n    validatorSymbol in value &&\n    value[validatorSymbol] === true &&\n    'validate' in value\n  );\n}\n\nexport function asValidator<OBJECT>(\n  value: Validator<OBJECT> | z.Schema<OBJECT, z.ZodTypeDef, any>,\n): Validator<OBJECT> {\n  return isValidator(value) ? value : zodValidator(value);\n}\n\nexport function zodValidator<OBJECT>(\n  zodSchema: z.Schema<OBJECT, z.ZodTypeDef, any>,\n): Validator<OBJECT> {\n  return validator(value => {\n    const result = zodSchema.safeParse(value);\n    return result.success\n      ? { success: true, value: result.data }\n      : { success: false, error: result.error };\n  });\n}\n","import { APICallError } from '@ai-sdk/provider';\nimport { extractResponseHeaders } from './extract-response-headers';\nimport { FetchFunction } from './fetch-function';\nimport { isAbortError } from './is-abort-error';\nimport { removeUndefinedEntries } from './remove-undefined-entries';\nimport { ResponseHandler } from './response-handler';\n\n// use function to allow for mocking in tests:\nconst getOriginalFetch = () => globalThis.fetch;\n\nexport const postJsonToApi = async <T>({\n  url,\n  headers,\n  body,\n  failedResponseHandler,\n  successfulResponseHandler,\n  abortSignal,\n  fetch,\n}: {\n  url: string;\n  headers?: Record<string, string | undefined>;\n  body: unknown;\n  failedResponseHandler: ResponseHandler<APICallError>;\n  successfulResponseHandler: ResponseHandler<T>;\n  abortSignal?: AbortSignal;\n  fetch?: FetchFunction;\n}) =>\n  postToApi({\n    url,\n    headers: {\n      'Content-Type': 'application/json',\n      ...headers,\n    },\n    body: {\n      content: JSON.stringify(body),\n      values: body,\n    },\n    failedResponseHandler,\n    successfulResponseHandler,\n    abortSignal,\n    fetch,\n  });\n\nexport const postToApi = async <T>({\n  url,\n  headers = {},\n  body,\n  successfulResponseHandler,\n  failedResponseHandler,\n  abortSignal,\n  fetch = getOriginalFetch(),\n}: {\n  url: string;\n  headers?: Record<string, string | undefined>;\n  body: {\n    content: string | FormData | Uint8Array;\n    values: unknown;\n  };\n  failedResponseHandler: ResponseHandler<Error>;\n  successfulResponseHandler: ResponseHandler<T>;\n  abortSignal?: AbortSignal;\n  fetch?: FetchFunction;\n}) => {\n  try {\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: removeUndefinedEntries(headers),\n      body: body.content,\n      signal: abortSignal,\n    });\n\n    const responseHeaders = extractResponseHeaders(response);\n\n    if (!response.ok) {\n      let errorInformation: {\n        value: Error;\n        responseHeaders?: Record<string, string> | undefined;\n      };\n\n      try {\n        errorInformation = await failedResponseHandler({\n          response,\n          url,\n          requestBodyValues: body.values,\n        });\n      } catch (error) {\n        if (isAbortError(error) || APICallError.isAPICallError(error)) {\n          throw error;\n        }\n\n        throw new APICallError({\n          message: 'Failed to process error response',\n          cause: error,\n          statusCode: response.status,\n          url,\n          responseHeaders,\n          requestBodyValues: body.values,\n        });\n      }\n\n      throw errorInformation.value;\n    }\n\n    try {\n      return await successfulResponseHandler({\n        response,\n        url,\n        requestBodyValues: body.values,\n      });\n    } catch (error) {\n      if (error instanceof Error) {\n        if (isAbortError(error) || APICallError.isAPICallError(error)) {\n          throw error;\n        }\n      }\n\n      throw new APICallError({\n        message: 'Failed to process successful response',\n        cause: error,\n        statusCode: response.status,\n        url,\n        responseHeaders,\n        requestBodyValues: body.values,\n      });\n    }\n  } catch (error) {\n    if (isAbortError(error)) {\n      throw error;\n    }\n\n    // unwrap original error when fetch failed (for easier debugging):\n    if (error instanceof TypeError && error.message === 'fetch failed') {\n      const cause = (error as any).cause;\n\n      if (cause != null) {\n        // Failed to connect to server:\n        throw new APICallError({\n          message: `Cannot connect to API: ${cause.message}`,\n          cause,\n          url,\n          requestBodyValues: body.values,\n          isRetryable: true, // retry when network error\n        });\n      }\n    }\n\n    throw error;\n  }\n};\n","export function removeUndefinedEntries<T>(\n  record: Record<string, T | undefined>,\n): Record<string, T> {\n  return Object.fromEntries(\n    Object.entries(record).filter(([_key, value]) => value != null),\n  ) as Record<string, T>;\n}\n","import { APICallError, EmptyResponseBodyError } from '@ai-sdk/provider';\nimport {\n  EventSourceParserStream,\n  ParsedEvent,\n} from 'eventsource-parser/stream';\nimport { ZodSchema } from 'zod';\nimport { extractResponseHeaders } from './extract-response-headers';\nimport { ParseResult, parseJSON, safeParseJSON } from './parse-json';\n\nexport type ResponseHandler<RETURN_TYPE> = (options: {\n  url: string;\n  requestBodyValues: unknown;\n  response: Response;\n}) => PromiseLike<{\n  value: RETURN_TYPE;\n  responseHeaders?: Record<string, string>;\n}>;\n\nexport const createJsonErrorResponseHandler =\n  <T>({\n    errorSchema,\n    errorToMessage,\n    isRetryable,\n  }: {\n    errorSchema: ZodSchema<T>;\n    errorToMessage: (error: T) => string;\n    isRetryable?: (response: Response, error?: T) => boolean;\n  }): ResponseHandler<APICallError> =>\n  async ({ response, url, requestBodyValues }) => {\n    const responseBody = await response.text();\n    const responseHeaders = extractResponseHeaders(response);\n\n    // Some providers return an empty response body for some errors:\n    if (responseBody.trim() === '') {\n      return {\n        responseHeaders,\n        value: new APICallError({\n          message: response.statusText,\n          url,\n          requestBodyValues,\n          statusCode: response.status,\n          responseHeaders,\n          responseBody,\n          isRetryable: isRetryable?.(response),\n        }),\n      };\n    }\n\n    // resilient parsing in case the response is not JSON or does not match the schema:\n    try {\n      const parsedError = parseJSON({\n        text: responseBody,\n        schema: errorSchema,\n      });\n\n      return {\n        responseHeaders,\n        value: new APICallError({\n          message: errorToMessage(parsedError),\n          url,\n          requestBodyValues,\n          statusCode: response.status,\n          responseHeaders,\n          responseBody,\n          data: parsedError,\n          isRetryable: isRetryable?.(response, parsedError),\n        }),\n      };\n    } catch (parseError) {\n      return {\n        responseHeaders,\n        value: new APICallError({\n          message: response.statusText,\n          url,\n          requestBodyValues,\n          statusCode: response.status,\n          responseHeaders,\n          responseBody,\n          isRetryable: isRetryable?.(response),\n        }),\n      };\n    }\n  };\n\nexport const createEventSourceResponseHandler =\n  <T>(\n    chunkSchema: ZodSchema<T>,\n  ): ResponseHandler<ReadableStream<ParseResult<T>>> =>\n  async ({ response }: { response: Response }) => {\n    const responseHeaders = extractResponseHeaders(response);\n\n    if (response.body == null) {\n      throw new EmptyResponseBodyError({});\n    }\n\n    return {\n      responseHeaders,\n      value: response.body\n        .pipeThrough(new TextDecoderStream())\n        .pipeThrough(new EventSourceParserStream())\n        .pipeThrough(\n          new TransformStream<ParsedEvent, ParseResult<T>>({\n            transform({ data }, controller) {\n              // ignore the 'DONE' event that e.g. OpenAI sends:\n              if (data === '[DONE]') {\n                return;\n              }\n\n              controller.enqueue(\n                safeParseJSON({\n                  text: data,\n                  schema: chunkSchema,\n                }),\n              );\n            },\n          }),\n        ),\n    };\n  };\n\nexport const createJsonStreamResponseHandler =\n  <T>(\n    chunkSchema: ZodSchema<T>,\n  ): ResponseHandler<ReadableStream<ParseResult<T>>> =>\n  async ({ response }: { response: Response }) => {\n    const responseHeaders = extractResponseHeaders(response);\n\n    if (response.body == null) {\n      throw new EmptyResponseBodyError({});\n    }\n\n    let buffer = '';\n\n    return {\n      responseHeaders,\n      value: response.body.pipeThrough(new TextDecoderStream()).pipeThrough(\n        new TransformStream<string, ParseResult<T>>({\n          transform(chunkText, controller) {\n            if (chunkText.endsWith('\\n')) {\n              controller.enqueue(\n                safeParseJSON({\n                  text: buffer + chunkText,\n                  schema: chunkSchema,\n                }),\n              );\n              buffer = '';\n            } else {\n              buffer += chunkText;\n            }\n          },\n        }),\n      ),\n    };\n  };\n\nexport const createJsonResponseHandler =\n  <T>(responseSchema: ZodSchema<T>): ResponseHandler<T> =>\n  async ({ response, url, requestBodyValues }) => {\n    const responseBody = await response.text();\n\n    const parsedResult = safeParseJSON({\n      text: responseBody,\n      schema: responseSchema,\n    });\n\n    const responseHeaders = extractResponseHeaders(response);\n\n    if (!parsedResult.success) {\n      throw new APICallError({\n        message: 'Invalid JSON response',\n        cause: parsedResult.error,\n        statusCode: response.status,\n        responseHeaders,\n        responseBody,\n        url,\n        requestBodyValues,\n      });\n    }\n\n    return {\n      responseHeaders,\n      value: parsedResult.value,\n    };\n  };\n","// btoa and atob need to be invoked as a function call, not as a method call.\n// Otherwise CloudFlare will throw a\n// \"TypeError: Illegal invocation: function called with incorrect this reference\"\nconst { btoa, atob } = globalThis;\n\nexport function convertBase64ToUint8Array(base64String: string) {\n  const base64Url = base64String.replace(/-/g, '+').replace(/_/g, '/');\n  const latin1string = atob(base64Url);\n  return Uint8Array.from(latin1string, byte => byte.codePointAt(0)!);\n}\n\nexport function convertUint8ArrayToBase64(array: Uint8Array): string {\n  let latin1string = '';\n\n  // Note: regular for loop to support older JavaScript versions that\n  // do not support for..of on Uint8Array\n  for (let i = 0; i < array.length; i++) {\n    latin1string += String.fromCodePoint(array[i]);\n  }\n\n  return btoa(latin1string);\n}\n","export function withoutTrailingSlash(url: string | undefined) {\n  return url?.replace(/\\/$/, '');\n}\n"],"names":["validator","TypeValidationError","APICallError"],"mappings":"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"}},
    {"offset": {"line": 3059, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3064, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@ai-sdk/ui-utils/node_modules/@ai-sdk/provider-utils/src/combine-headers.ts","/turbopack/[project]/node_modules/@ai-sdk/ui-utils/node_modules/@ai-sdk/provider-utils/src/convert-async-generator-to-readable-stream.ts","/turbopack/[project]/node_modules/@ai-sdk/ui-utils/node_modules/@ai-sdk/provider-utils/src/extract-response-headers.ts","/turbopack/[project]/node_modules/@ai-sdk/ui-utils/node_modules/@ai-sdk/provider-utils/src/generate-id.ts","/turbopack/[project]/node_modules/@ai-sdk/ui-utils/node_modules/@ai-sdk/provider-utils/src/get-error-message.ts","/turbopack/[project]/node_modules/@ai-sdk/ui-utils/node_modules/@ai-sdk/provider-utils/src/is-abort-error.ts","/turbopack/[project]/node_modules/@ai-sdk/ui-utils/node_modules/@ai-sdk/provider-utils/src/load-api-key.ts","/turbopack/[project]/node_modules/@ai-sdk/ui-utils/node_modules/@ai-sdk/provider-utils/src/load-setting.ts","/turbopack/[project]/node_modules/@ai-sdk/ui-utils/node_modules/@ai-sdk/provider-utils/src/load-optional-setting.ts","/turbopack/[project]/node_modules/@ai-sdk/ui-utils/node_modules/@ai-sdk/provider-utils/src/parse-json.ts","/turbopack/[project]/node_modules/@ai-sdk/ui-utils/node_modules/@ai-sdk/provider-utils/src/validate-types.ts","/turbopack/[project]/node_modules/@ai-sdk/ui-utils/node_modules/@ai-sdk/provider-utils/src/validator.ts","/turbopack/[project]/node_modules/@ai-sdk/ui-utils/node_modules/@ai-sdk/provider-utils/src/post-to-api.ts","/turbopack/[project]/node_modules/@ai-sdk/ui-utils/node_modules/@ai-sdk/provider-utils/src/remove-undefined-entries.ts","/turbopack/[project]/node_modules/@ai-sdk/ui-utils/node_modules/@ai-sdk/provider-utils/src/response-handler.ts","/turbopack/[project]/node_modules/@ai-sdk/ui-utils/node_modules/@ai-sdk/provider-utils/src/uint8-utils.ts","/turbopack/[project]/node_modules/@ai-sdk/ui-utils/node_modules/@ai-sdk/provider-utils/src/without-trailing-slash.ts"],"sourcesContent":["export function combineHeaders(\n  ...headers: Array<Record<string, string | undefined> | undefined>\n): Record<string, string | undefined> {\n  return headers.reduce(\n    (combinedHeaders, currentHeaders) => ({\n      ...combinedHeaders,\n      ...(currentHeaders ?? {}),\n    }),\n    {},\n  ) as Record<string, string | undefined>;\n}\n","/**\n * Converts an AsyncGenerator to a ReadableStream.\n *\n * @template T - The type of elements produced by the AsyncGenerator.\n * @param {AsyncGenerator<T>} stream - The AsyncGenerator to convert.\n * @returns {ReadableStream<T>} - A ReadableStream that provides the same data as the AsyncGenerator.\n */\nexport function convertAsyncGeneratorToReadableStream<T>(\n  stream: AsyncGenerator<T>,\n): ReadableStream<T> {\n  return new ReadableStream<T>({\n    /**\n     * Called when the consumer wants to pull more data from the stream.\n     *\n     * @param {ReadableStreamDefaultController<T>} controller - The controller to enqueue data into the stream.\n     * @returns {Promise<void>}\n     */\n    async pull(controller) {\n      try {\n        const { value, done } = await stream.next();\n        if (done) {\n          controller.close();\n        } else {\n          controller.enqueue(value);\n        }\n      } catch (error) {\n        controller.error(error);\n      }\n    },\n    /**\n     * Called when the consumer cancels the stream.\n     */\n    cancel() {},\n  });\n}\n","/**\nExtracts the headers from a response object and returns them as a key-value object.\n\n@param response - The response object to extract headers from.\n@returns The headers as a key-value object.\n*/\nexport function extractResponseHeaders(\n  response: Response,\n): Record<string, string> {\n  const headers: Record<string, string> = {};\n  response.headers.forEach((value, key) => {\n    headers[key] = value;\n  });\n  return headers;\n}\n","import { customAlphabet } from 'nanoid/non-secure';\n\n/**\n * Creates an ID generator that uses an alphabet of digits, uppercase and lowercase letters.\n *\n * @param alphabet - The alphabet to use for the ID. Default: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.\n * @param prefix - The prefix of the ID to generate. Default: ''.\n * @param size - The size of the random part of the ID to generate. Default: 7.\n */\n//TODO change default size to 16 in 4.0\nexport const createIdGenerator = ({\n  prefix = '',\n  size: defaultSize = 7,\n  alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz',\n}: {\n  prefix?: string;\n  size?: number;\n  alphabet?: string;\n} = {}): ((size?: number) => string) => {\n  const generator = customAlphabet(alphabet, defaultSize);\n  return size => `${prefix}${generator(size)}`;\n};\n\n/**\n * Generates a 7-character random string to use for IDs. Not secure.\n *\n * @param size - The size of the ID to generate. Default: 7.\n */\n//TODO change default size to 16 in 4.0\nexport const generateId = createIdGenerator();\n","export function getErrorMessage(error: unknown | undefined) {\n  if (error == null) {\n    return 'unknown error';\n  }\n\n  if (typeof error === 'string') {\n    return error;\n  }\n\n  if (error instanceof Error) {\n    return error.message;\n  }\n\n  return JSON.stringify(error);\n}\n","export function isAbortError(error: unknown): error is Error {\n  return (\n    error instanceof Error &&\n    (error.name === 'AbortError' || error.name === 'TimeoutError')\n  );\n}\n","import { LoadAPIKeyError } from '@ai-sdk/provider';\n\nexport function loadApiKey({\n  apiKey,\n  environmentVariableName,\n  apiKeyParameterName = 'apiKey',\n  description,\n}: {\n  apiKey: string | undefined;\n  environmentVariableName: string;\n  apiKeyParameterName?: string;\n  description: string;\n}): string {\n  if (typeof apiKey === 'string') {\n    return apiKey;\n  }\n\n  if (apiKey != null) {\n    throw new LoadAPIKeyError({\n      message: `${description} API key must be a string.`,\n    });\n  }\n\n  if (typeof process === 'undefined') {\n    throw new LoadAPIKeyError({\n      message: `${description} API key is missing. Pass it using the '${apiKeyParameterName}' parameter. Environment variables is not supported in this environment.`,\n    });\n  }\n\n  apiKey = process.env[environmentVariableName];\n\n  if (apiKey == null) {\n    throw new LoadAPIKeyError({\n      message: `${description} API key is missing. Pass it using the '${apiKeyParameterName}' parameter or the ${environmentVariableName} environment variable.`,\n    });\n  }\n\n  if (typeof apiKey !== 'string') {\n    throw new LoadAPIKeyError({\n      message: `${description} API key must be a string. The value of the ${environmentVariableName} environment variable is not a string.`,\n    });\n  }\n\n  return apiKey;\n}\n","import { LoadSettingError } from '@ai-sdk/provider';\n\n/**\n * Loads a `string` setting from the environment or a parameter.\n *\n * @param settingValue - The setting value.\n * @param environmentVariableName - The environment variable name.\n * @param settingName - The setting name.\n * @param description - The description of the setting.\n * @returns The setting value.\n */\nexport function loadSetting({\n  settingValue,\n  environmentVariableName,\n  settingName,\n  description,\n}: {\n  settingValue: string | undefined;\n  environmentVariableName: string;\n  settingName: string;\n  description: string;\n}): string {\n  if (typeof settingValue === 'string') {\n    return settingValue;\n  }\n\n  if (settingValue != null) {\n    throw new LoadSettingError({\n      message: `${description} setting must be a string.`,\n    });\n  }\n\n  if (typeof process === 'undefined') {\n    throw new LoadSettingError({\n      message:\n        `${description} setting is missing. ` +\n        `Pass it using the '${settingName}' parameter. ` +\n        `Environment variables is not supported in this environment.`,\n    });\n  }\n\n  settingValue = process.env[environmentVariableName];\n\n  if (settingValue == null) {\n    throw new LoadSettingError({\n      message:\n        `${description} setting is missing. ` +\n        `Pass it using the '${settingName}' parameter ` +\n        `or the ${environmentVariableName} environment variable.`,\n    });\n  }\n\n  if (typeof settingValue !== 'string') {\n    throw new LoadSettingError({\n      message:\n        `${description} setting must be a string. ` +\n        `The value of the ${environmentVariableName} environment variable is not a string.`,\n    });\n  }\n\n  return settingValue;\n}\n","/**\n * Loads an optional `string` setting from the environment or a parameter.\n *\n * @param settingValue - The setting value.\n * @param environmentVariableName - The environment variable name.\n * @returns The setting value.\n */\nexport function loadOptionalSetting({\n  settingValue,\n  environmentVariableName,\n}: {\n  settingValue: string | undefined;\n  environmentVariableName: string;\n}): string | undefined {\n  if (typeof settingValue === 'string') {\n    return settingValue;\n  }\n\n  if (settingValue != null || typeof process === 'undefined') {\n    return undefined;\n  }\n\n  settingValue = process.env[environmentVariableName];\n\n  if (settingValue == null || typeof settingValue !== 'string') {\n    return undefined;\n  }\n\n  return settingValue;\n}\n","import {\n  JSONParseError,\n  JSONValue,\n  TypeValidationError,\n} from '@ai-sdk/provider';\nimport SecureJSON from 'secure-json-parse';\nimport { ZodSchema } from 'zod';\nimport { safeValidateTypes, validateTypes } from './validate-types';\nimport { Validator } from './validator';\n\n/**\n * Parses a JSON string into an unknown object.\n *\n * @param text - The JSON string to parse.\n * @returns {JSONValue} - The parsed JSON object.\n */\nexport function parseJSON(options: {\n  text: string;\n  schema?: undefined;\n}): JSONValue;\n/**\n * Parses a JSON string into a strongly-typed object using the provided schema.\n *\n * @template T - The type of the object to parse the JSON into.\n * @param {string} text - The JSON string to parse.\n * @param {Validator<T>} schema - The schema to use for parsing the JSON.\n * @returns {T} - The parsed object.\n */\nexport function parseJSON<T>(options: {\n  text: string;\n  schema: ZodSchema<T> | Validator<T>;\n}): T;\nexport function parseJSON<T>({\n  text,\n  schema,\n}: {\n  text: string;\n  schema?: ZodSchema<T> | Validator<T>;\n}): T {\n  try {\n    const value = SecureJSON.parse(text);\n\n    if (schema == null) {\n      return value;\n    }\n\n    return validateTypes({ value, schema });\n  } catch (error) {\n    if (\n      JSONParseError.isJSONParseError(error) ||\n      TypeValidationError.isTypeValidationError(error)\n    ) {\n      throw error;\n    }\n\n    throw new JSONParseError({ text, cause: error });\n  }\n}\n\nexport type ParseResult<T> =\n  | { success: true; value: T }\n  | { success: false; error: JSONParseError | TypeValidationError };\n\n/**\n * Safely parses a JSON string and returns the result as an object of type `unknown`.\n *\n * @param text - The JSON string to parse.\n * @returns {object} Either an object with `success: true` and the parsed data, or an object with `success: false` and the error that occurred.\n */\nexport function safeParseJSON(options: {\n  text: string;\n  schema?: undefined;\n}): ParseResult<JSONValue>;\n/**\n * Safely parses a JSON string into a strongly-typed object, using a provided schema to validate the object.\n *\n * @template T - The type of the object to parse the JSON into.\n * @param {string} text - The JSON string to parse.\n * @param {Validator<T>} schema - The schema to use for parsing the JSON.\n * @returns An object with either a `success` flag and the parsed and typed data, or a `success` flag and an error object.\n */\nexport function safeParseJSON<T>(options: {\n  text: string;\n  schema: ZodSchema<T> | Validator<T>;\n}): ParseResult<T>;\nexport function safeParseJSON<T>({\n  text,\n  schema,\n}: {\n  text: string;\n  schema?: ZodSchema<T> | Validator<T>;\n}):\n  | { success: true; value: T }\n  | { success: false; error: JSONParseError | TypeValidationError } {\n  try {\n    const value = SecureJSON.parse(text);\n\n    if (schema == null) {\n      return {\n        success: true,\n        value: value as T,\n      };\n    }\n\n    return safeValidateTypes({ value, schema });\n  } catch (error) {\n    return {\n      success: false,\n      error: JSONParseError.isJSONParseError(error)\n        ? error\n        : new JSONParseError({ text, cause: error }),\n    };\n  }\n}\n\nexport function isParsableJson(input: string): boolean {\n  try {\n    SecureJSON.parse(input);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n@deprecated Use `isParsableJson` instead.\n */\nexport const isParseableJson = isParsableJson;\n","import { TypeValidationError } from '@ai-sdk/provider';\nimport { z } from 'zod';\nimport { Validator, asValidator } from './validator';\n\n/**\n * Validates the types of an unknown object using a schema and\n * return a strongly-typed object.\n *\n * @template T - The type of the object to validate.\n * @param {string} options.value - The object to validate.\n * @param {Validator<T>} options.schema - The schema to use for validating the JSON.\n * @returns {T} - The typed object.\n */\nexport function validateTypes<T>({\n  value,\n  schema: inputSchema,\n}: {\n  value: unknown;\n  schema: z.Schema<T, z.ZodTypeDef, any> | Validator<T>;\n}): T {\n  const result = safeValidateTypes({ value, schema: inputSchema });\n\n  if (!result.success) {\n    throw TypeValidationError.wrap({ value, cause: result.error });\n  }\n\n  return result.value;\n}\n\n/**\n * Safely validates the types of an unknown object using a schema and\n * return a strongly-typed object.\n *\n * @template T - The type of the object to validate.\n * @param {string} options.value - The JSON object to validate.\n * @param {Validator<T>} options.schema - The schema to use for validating the JSON.\n * @returns An object with either a `success` flag and the parsed and typed data, or a `success` flag and an error object.\n */\nexport function safeValidateTypes<T>({\n  value,\n  schema,\n}: {\n  value: unknown;\n  schema: z.Schema<T, z.ZodTypeDef, any> | Validator<T>;\n}):\n  | { success: true; value: T }\n  | { success: false; error: TypeValidationError } {\n  const validator = asValidator(schema);\n\n  try {\n    if (validator.validate == null) {\n      return { success: true, value: value as T };\n    }\n\n    const result = validator.validate(value);\n\n    if (result.success) {\n      return result;\n    }\n\n    return {\n      success: false,\n      error: TypeValidationError.wrap({ value, cause: result.error }),\n    };\n  } catch (error) {\n    return {\n      success: false,\n      error: TypeValidationError.wrap({ value, cause: error }),\n    };\n  }\n}\n","import { z } from 'zod';\n\n/**\n * Used to mark validator functions so we can support both Zod and custom schemas.\n */\nexport const validatorSymbol = Symbol.for('vercel.ai.validator');\n\nexport type ValidationResult<OBJECT> =\n  | { success: true; value: OBJECT }\n  | { success: false; error: Error };\n\nexport type Validator<OBJECT = unknown> = {\n  /**\n   * Used to mark validator functions so we can support both Zod and custom schemas.\n   */\n  [validatorSymbol]: true;\n\n  /**\n   * Optional. Validates that the structure of a value matches this schema,\n   * and returns a typed version of the value if it does.\n   */\n  readonly validate?: (value: unknown) => ValidationResult<OBJECT>;\n};\n\n/**\n * Create a validator.\n *\n * @param validate A validation function for the schema.\n */\nexport function validator<OBJECT>(\n  validate?: undefined | ((value: unknown) => ValidationResult<OBJECT>),\n): Validator<OBJECT> {\n  return { [validatorSymbol]: true, validate };\n}\n\nexport function isValidator(value: unknown): value is Validator {\n  return (\n    typeof value === 'object' &&\n    value !== null &&\n    validatorSymbol in value &&\n    value[validatorSymbol] === true &&\n    'validate' in value\n  );\n}\n\nexport function asValidator<OBJECT>(\n  value: Validator<OBJECT> | z.Schema<OBJECT, z.ZodTypeDef, any>,\n): Validator<OBJECT> {\n  return isValidator(value) ? value : zodValidator(value);\n}\n\nexport function zodValidator<OBJECT>(\n  zodSchema: z.Schema<OBJECT, z.ZodTypeDef, any>,\n): Validator<OBJECT> {\n  return validator(value => {\n    const result = zodSchema.safeParse(value);\n    return result.success\n      ? { success: true, value: result.data }\n      : { success: false, error: result.error };\n  });\n}\n","import { APICallError } from '@ai-sdk/provider';\nimport { extractResponseHeaders } from './extract-response-headers';\nimport { FetchFunction } from './fetch-function';\nimport { isAbortError } from './is-abort-error';\nimport { removeUndefinedEntries } from './remove-undefined-entries';\nimport { ResponseHandler } from './response-handler';\n\n// use function to allow for mocking in tests:\nconst getOriginalFetch = () => globalThis.fetch;\n\nexport const postJsonToApi = async <T>({\n  url,\n  headers,\n  body,\n  failedResponseHandler,\n  successfulResponseHandler,\n  abortSignal,\n  fetch,\n}: {\n  url: string;\n  headers?: Record<string, string | undefined>;\n  body: unknown;\n  failedResponseHandler: ResponseHandler<APICallError>;\n  successfulResponseHandler: ResponseHandler<T>;\n  abortSignal?: AbortSignal;\n  fetch?: FetchFunction;\n}) =>\n  postToApi({\n    url,\n    headers: {\n      'Content-Type': 'application/json',\n      ...headers,\n    },\n    body: {\n      content: JSON.stringify(body),\n      values: body,\n    },\n    failedResponseHandler,\n    successfulResponseHandler,\n    abortSignal,\n    fetch,\n  });\n\nexport const postToApi = async <T>({\n  url,\n  headers = {},\n  body,\n  successfulResponseHandler,\n  failedResponseHandler,\n  abortSignal,\n  fetch = getOriginalFetch(),\n}: {\n  url: string;\n  headers?: Record<string, string | undefined>;\n  body: {\n    content: string | FormData | Uint8Array;\n    values: unknown;\n  };\n  failedResponseHandler: ResponseHandler<Error>;\n  successfulResponseHandler: ResponseHandler<T>;\n  abortSignal?: AbortSignal;\n  fetch?: FetchFunction;\n}) => {\n  try {\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: removeUndefinedEntries(headers),\n      body: body.content,\n      signal: abortSignal,\n    });\n\n    const responseHeaders = extractResponseHeaders(response);\n\n    if (!response.ok) {\n      let errorInformation: {\n        value: Error;\n        responseHeaders?: Record<string, string> | undefined;\n      };\n\n      try {\n        errorInformation = await failedResponseHandler({\n          response,\n          url,\n          requestBodyValues: body.values,\n        });\n      } catch (error) {\n        if (isAbortError(error) || APICallError.isAPICallError(error)) {\n          throw error;\n        }\n\n        throw new APICallError({\n          message: 'Failed to process error response',\n          cause: error,\n          statusCode: response.status,\n          url,\n          responseHeaders,\n          requestBodyValues: body.values,\n        });\n      }\n\n      throw errorInformation.value;\n    }\n\n    try {\n      return await successfulResponseHandler({\n        response,\n        url,\n        requestBodyValues: body.values,\n      });\n    } catch (error) {\n      if (error instanceof Error) {\n        if (isAbortError(error) || APICallError.isAPICallError(error)) {\n          throw error;\n        }\n      }\n\n      throw new APICallError({\n        message: 'Failed to process successful response',\n        cause: error,\n        statusCode: response.status,\n        url,\n        responseHeaders,\n        requestBodyValues: body.values,\n      });\n    }\n  } catch (error) {\n    if (isAbortError(error)) {\n      throw error;\n    }\n\n    // unwrap original error when fetch failed (for easier debugging):\n    if (error instanceof TypeError && error.message === 'fetch failed') {\n      const cause = (error as any).cause;\n\n      if (cause != null) {\n        // Failed to connect to server:\n        throw new APICallError({\n          message: `Cannot connect to API: ${cause.message}`,\n          cause,\n          url,\n          requestBodyValues: body.values,\n          isRetryable: true, // retry when network error\n        });\n      }\n    }\n\n    throw error;\n  }\n};\n","export function removeUndefinedEntries<T>(\n  record: Record<string, T | undefined>,\n): Record<string, T> {\n  return Object.fromEntries(\n    Object.entries(record).filter(([_key, value]) => value != null),\n  ) as Record<string, T>;\n}\n","import { APICallError, EmptyResponseBodyError } from '@ai-sdk/provider';\nimport {\n  EventSourceParserStream,\n  ParsedEvent,\n} from 'eventsource-parser/stream';\nimport { ZodSchema } from 'zod';\nimport { extractResponseHeaders } from './extract-response-headers';\nimport { ParseResult, parseJSON, safeParseJSON } from './parse-json';\n\nexport type ResponseHandler<RETURN_TYPE> = (options: {\n  url: string;\n  requestBodyValues: unknown;\n  response: Response;\n}) => PromiseLike<{\n  value: RETURN_TYPE;\n  responseHeaders?: Record<string, string>;\n}>;\n\nexport const createJsonErrorResponseHandler =\n  <T>({\n    errorSchema,\n    errorToMessage,\n    isRetryable,\n  }: {\n    errorSchema: ZodSchema<T>;\n    errorToMessage: (error: T) => string;\n    isRetryable?: (response: Response, error?: T) => boolean;\n  }): ResponseHandler<APICallError> =>\n  async ({ response, url, requestBodyValues }) => {\n    const responseBody = await response.text();\n    const responseHeaders = extractResponseHeaders(response);\n\n    // Some providers return an empty response body for some errors:\n    if (responseBody.trim() === '') {\n      return {\n        responseHeaders,\n        value: new APICallError({\n          message: response.statusText,\n          url,\n          requestBodyValues,\n          statusCode: response.status,\n          responseHeaders,\n          responseBody,\n          isRetryable: isRetryable?.(response),\n        }),\n      };\n    }\n\n    // resilient parsing in case the response is not JSON or does not match the schema:\n    try {\n      const parsedError = parseJSON({\n        text: responseBody,\n        schema: errorSchema,\n      });\n\n      return {\n        responseHeaders,\n        value: new APICallError({\n          message: errorToMessage(parsedError),\n          url,\n          requestBodyValues,\n          statusCode: response.status,\n          responseHeaders,\n          responseBody,\n          data: parsedError,\n          isRetryable: isRetryable?.(response, parsedError),\n        }),\n      };\n    } catch (parseError) {\n      return {\n        responseHeaders,\n        value: new APICallError({\n          message: response.statusText,\n          url,\n          requestBodyValues,\n          statusCode: response.status,\n          responseHeaders,\n          responseBody,\n          isRetryable: isRetryable?.(response),\n        }),\n      };\n    }\n  };\n\nexport const createEventSourceResponseHandler =\n  <T>(\n    chunkSchema: ZodSchema<T>,\n  ): ResponseHandler<ReadableStream<ParseResult<T>>> =>\n  async ({ response }: { response: Response }) => {\n    const responseHeaders = extractResponseHeaders(response);\n\n    if (response.body == null) {\n      throw new EmptyResponseBodyError({});\n    }\n\n    return {\n      responseHeaders,\n      value: response.body\n        .pipeThrough(new TextDecoderStream())\n        .pipeThrough(new EventSourceParserStream())\n        .pipeThrough(\n          new TransformStream<ParsedEvent, ParseResult<T>>({\n            transform({ data }, controller) {\n              // ignore the 'DONE' event that e.g. OpenAI sends:\n              if (data === '[DONE]') {\n                return;\n              }\n\n              controller.enqueue(\n                safeParseJSON({\n                  text: data,\n                  schema: chunkSchema,\n                }),\n              );\n            },\n          }),\n        ),\n    };\n  };\n\nexport const createJsonStreamResponseHandler =\n  <T>(\n    chunkSchema: ZodSchema<T>,\n  ): ResponseHandler<ReadableStream<ParseResult<T>>> =>\n  async ({ response }: { response: Response }) => {\n    const responseHeaders = extractResponseHeaders(response);\n\n    if (response.body == null) {\n      throw new EmptyResponseBodyError({});\n    }\n\n    let buffer = '';\n\n    return {\n      responseHeaders,\n      value: response.body.pipeThrough(new TextDecoderStream()).pipeThrough(\n        new TransformStream<string, ParseResult<T>>({\n          transform(chunkText, controller) {\n            if (chunkText.endsWith('\\n')) {\n              controller.enqueue(\n                safeParseJSON({\n                  text: buffer + chunkText,\n                  schema: chunkSchema,\n                }),\n              );\n              buffer = '';\n            } else {\n              buffer += chunkText;\n            }\n          },\n        }),\n      ),\n    };\n  };\n\nexport const createJsonResponseHandler =\n  <T>(responseSchema: ZodSchema<T>): ResponseHandler<T> =>\n  async ({ response, url, requestBodyValues }) => {\n    const responseBody = await response.text();\n\n    const parsedResult = safeParseJSON({\n      text: responseBody,\n      schema: responseSchema,\n    });\n\n    const responseHeaders = extractResponseHeaders(response);\n\n    if (!parsedResult.success) {\n      throw new APICallError({\n        message: 'Invalid JSON response',\n        cause: parsedResult.error,\n        statusCode: response.status,\n        responseHeaders,\n        responseBody,\n        url,\n        requestBodyValues,\n      });\n    }\n\n    return {\n      responseHeaders,\n      value: parsedResult.value,\n    };\n  };\n","// btoa and atob need to be invoked as a function call, not as a method call.\n// Otherwise CloudFlare will throw a\n// \"TypeError: Illegal invocation: function called with incorrect this reference\"\nconst { btoa, atob } = globalThis;\n\nexport function convertBase64ToUint8Array(base64String: string) {\n  const base64Url = base64String.replace(/-/g, '+').replace(/_/g, '/');\n  const latin1string = atob(base64Url);\n  return Uint8Array.from(latin1string, byte => byte.codePointAt(0)!);\n}\n\nexport function convertUint8ArrayToBase64(array: Uint8Array): string {\n  let latin1string = '';\n\n  // Note: regular for loop to support older JavaScript versions that\n  // do not support for..of on Uint8Array\n  for (let i = 0; i < array.length; i++) {\n    latin1string += String.fromCodePoint(array[i]);\n  }\n\n  return btoa(latin1string);\n}\n","export function withoutTrailingSlash(url: string | undefined) {\n  return url?.replace(/\\/$/, '');\n}\n"],"names":["validator","TypeValidationError","APICallError"],"mappings":"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"}},
    {"offset": {"line": 3592, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3597, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@ai-sdk/provider-utils/src/combine-headers.ts","/turbopack/[project]/node_modules/@ai-sdk/provider-utils/src/convert-async-generator-to-readable-stream.ts","/turbopack/[project]/node_modules/@ai-sdk/provider-utils/src/download.ts","/turbopack/[project]/node_modules/@ai-sdk/provider-utils/src/extract-response-headers.ts","/turbopack/[project]/node_modules/@ai-sdk/provider-utils/src/generate-id.ts","/turbopack/[project]/node_modules/@ai-sdk/provider-utils/src/get-error-message.ts","/turbopack/[project]/node_modules/@ai-sdk/provider-utils/src/is-abort-error.ts","/turbopack/[project]/node_modules/@ai-sdk/provider-utils/src/load-api-key.ts","/turbopack/[project]/node_modules/@ai-sdk/provider-utils/src/load-setting.ts","/turbopack/[project]/node_modules/@ai-sdk/provider-utils/src/parse-json.ts","/turbopack/[project]/node_modules/@ai-sdk/provider-utils/src/validate-types.ts","/turbopack/[project]/node_modules/@ai-sdk/provider-utils/src/post-to-api.ts","/turbopack/[project]/node_modules/@ai-sdk/provider-utils/src/remove-undefined-entries.ts","/turbopack/[project]/node_modules/@ai-sdk/provider-utils/src/response-handler.ts","/turbopack/[project]/node_modules/@ai-sdk/provider-utils/src/uint8-utils.ts","/turbopack/[project]/node_modules/@ai-sdk/provider-utils/src/without-trailing-slash.ts"],"sourcesContent":["export function combineHeaders(\n  ...headers: Array<Record<string, string | undefined> | undefined>\n): Record<string, string | undefined> {\n  return headers.reduce(\n    (combinedHeaders, currentHeaders) => ({\n      ...combinedHeaders,\n      ...(currentHeaders ?? {}),\n    }),\n    {},\n  ) as Record<string, string | undefined>;\n}\n","/**\n * Converts an AsyncGenerator to a ReadableStream.\n *\n * @template T - The type of elements produced by the AsyncGenerator.\n * @param {AsyncGenerator<T>} stream - The AsyncGenerator to convert.\n * @returns {ReadableStream<T>} - A ReadableStream that provides the same data as the AsyncGenerator.\n */\nexport function convertAsyncGeneratorToReadableStream<T>(\n  stream: AsyncGenerator<T>,\n): ReadableStream<T> {\n  return new ReadableStream<T>({\n    /**\n     * Called when the consumer wants to pull more data from the stream.\n     *\n     * @param {ReadableStreamDefaultController<T>} controller - The controller to enqueue data into the stream.\n     * @returns {Promise<void>}\n     */\n    async pull(controller) {\n      try {\n        const { value, done } = await stream.next();\n        if (done) {\n          controller.close();\n        } else {\n          controller.enqueue(value);\n        }\n      } catch (error) {\n        controller.error(error);\n      }\n    },\n    /**\n     * Called when the consumer cancels the stream.\n     */\n    cancel() {},\n  });\n}\n","import { DownloadError } from '@ai-sdk/provider';\n\nexport async function download({\n  url,\n  fetchImplementation = fetch,\n}: {\n  url: URL;\n  fetchImplementation?: typeof fetch;\n}): Promise<{\n  data: Uint8Array;\n  mimeType: string | undefined;\n}> {\n  const urlText = url.toString();\n  try {\n    const response = await fetchImplementation(urlText);\n\n    if (!response.ok) {\n      throw new DownloadError({\n        url: urlText,\n        statusCode: response.status,\n        statusText: response.statusText,\n      });\n    }\n\n    return {\n      data: new Uint8Array(await response.arrayBuffer()),\n      mimeType: response.headers.get('content-type') ?? undefined,\n    };\n  } catch (error) {\n    if (DownloadError.isDownloadError(error)) {\n      throw error;\n    }\n\n    throw new DownloadError({ url: urlText, cause: error });\n  }\n}\n","/**\nExtracts the headers from a response object and returns them as a key-value object.\n\n@param response - The response object to extract headers from.\n@returns The headers as a key-value object.\n*/\nexport function extractResponseHeaders(\n  response: Response,\n): Record<string, string> {\n  const headers: Record<string, string> = {};\n  response.headers.forEach((value, key) => {\n    headers[key] = value;\n  });\n  return headers;\n}\n","import { customAlphabet } from 'nanoid/non-secure';\n\n/**\n * Generates a 7-character random string to use for IDs. Not secure.\n */\nexport const generateId = customAlphabet(\n  '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz',\n  7,\n);\n","export function getErrorMessage(error: unknown | undefined) {\n  if (error == null) {\n    return 'unknown error';\n  }\n\n  if (typeof error === 'string') {\n    return error;\n  }\n\n  if (error instanceof Error) {\n    return error.message;\n  }\n\n  return JSON.stringify(error);\n}\n","export function isAbortError(error: unknown): error is DOMException {\n  return (\n    error instanceof DOMException &&\n    (error.name === 'AbortError' || error.name === 'TimeoutError')\n  );\n}\n","import { LoadAPIKeyError } from '@ai-sdk/provider';\n\nexport function loadApiKey({\n  apiKey,\n  environmentVariableName,\n  apiKeyParameterName = 'apiKey',\n  description,\n}: {\n  apiKey: string | undefined;\n  environmentVariableName: string;\n  apiKeyParameterName?: string;\n  description: string;\n}): string {\n  if (typeof apiKey === 'string') {\n    return apiKey;\n  }\n\n  if (apiKey != null) {\n    throw new LoadAPIKeyError({\n      message: `${description} API key must be a string.`,\n    });\n  }\n\n  if (typeof process === 'undefined') {\n    throw new LoadAPIKeyError({\n      message: `${description} API key is missing. Pass it using the '${apiKeyParameterName}' parameter. Environment variables is not supported in this environment.`,\n    });\n  }\n\n  apiKey = process.env[environmentVariableName];\n\n  if (apiKey == null) {\n    throw new LoadAPIKeyError({\n      message: `${description} API key is missing. Pass it using the '${apiKeyParameterName}' parameter or the ${environmentVariableName} environment variable.`,\n    });\n  }\n\n  if (typeof apiKey !== 'string') {\n    throw new LoadAPIKeyError({\n      message: `${description} API key must be a string. The value of the ${environmentVariableName} environment variable is not a string.`,\n    });\n  }\n\n  return apiKey;\n}\n","import { LoadSettingError } from '@ai-sdk/provider';\n\nexport function loadSetting({\n  settingValue,\n  environmentVariableName,\n  settingName,\n  description,\n}: {\n  settingValue: string | undefined;\n  environmentVariableName: string;\n  settingName: string;\n  description: string;\n}): string {\n  if (typeof settingValue === 'string') {\n    return settingValue;\n  }\n\n  if (settingValue != null) {\n    throw new LoadSettingError({\n      message: `${description} setting must be a string.`,\n    });\n  }\n\n  if (typeof process === 'undefined') {\n    throw new LoadSettingError({\n      message: `${description} setting is missing. Pass it using the '${settingName}' parameter. Environment variables is not supported in this environment.`,\n    });\n  }\n\n  settingValue = process.env[environmentVariableName];\n\n  if (settingValue == null) {\n    throw new LoadSettingError({\n      message: `${description} setting is missing. Pass it using the '${settingName}' parameter or the ${environmentVariableName} environment variable.`,\n    });\n  }\n\n  if (typeof settingValue !== 'string') {\n    throw new LoadSettingError({\n      message: `${description} setting must be a string. The value of the ${environmentVariableName} environment variable is not a string.`,\n    });\n  }\n\n  return settingValue;\n}\n","import { JSONParseError, TypeValidationError } from '@ai-sdk/provider';\nimport SecureJSON from 'secure-json-parse';\nimport { ZodSchema } from 'zod';\nimport { safeValidateTypes, validateTypes } from './validate-types';\n\n/**\n * Parses a JSON string into an unknown object.\n *\n * @param text - The JSON string to parse.\n * @returns {unknown} - The parsed JSON object.\n */\nexport function parseJSON({ text }: { text: string }): unknown;\n/**\n * Parses a JSON string into a strongly-typed object using the provided schema.\n *\n * @template T - The type of the object to parse the JSON into.\n * @param {string} text - The JSON string to parse.\n * @param {Schema<T>} schema - The schema to use for parsing the JSON.\n * @returns {T} - The parsed object.\n */\nexport function parseJSON<T>({\n  text,\n  schema,\n}: {\n  text: string;\n  schema: ZodSchema<T>;\n}): T;\nexport function parseJSON<T>({\n  text,\n  schema,\n}: {\n  text: string;\n  schema?: ZodSchema<T>;\n}): T {\n  try {\n    const value = SecureJSON.parse(text);\n\n    if (schema == null) {\n      return value;\n    }\n\n    return validateTypes({ value, schema });\n  } catch (error) {\n    if (\n      JSONParseError.isJSONParseError(error) ||\n      TypeValidationError.isTypeValidationError(error)\n    ) {\n      throw error;\n    }\n\n    throw new JSONParseError({ text, cause: error });\n  }\n}\n\nexport type ParseResult<T> =\n  | { success: true; value: T }\n  | { success: false; error: JSONParseError | TypeValidationError };\n\n/**\n * Safely parses a JSON string and returns the result as an object of type `unknown`.\n *\n * @param text - The JSON string to parse.\n * @returns {object} Either an object with `success: true` and the parsed data, or an object with `success: false` and the error that occurred.\n */\nexport function safeParseJSON({ text }: { text: string }): ParseResult<unknown>;\n/**\n * Safely parses a JSON string into a strongly-typed object, using a provided schema to validate the object.\n *\n * @template T - The type of the object to parse the JSON into.\n * @param {string} text - The JSON string to parse.\n * @param {Schema<T>} schema - The schema to use for parsing the JSON.\n * @returns An object with either a `success` flag and the parsed and typed data, or a `success` flag and an error object.\n */\nexport function safeParseJSON<T>({\n  text,\n  schema,\n}: {\n  text: string;\n  schema: ZodSchema<T>;\n}): ParseResult<T>;\nexport function safeParseJSON<T>({\n  text,\n  schema,\n}: {\n  text: string;\n  schema?: ZodSchema<T>;\n}):\n  | { success: true; value: T }\n  | { success: false; error: JSONParseError | TypeValidationError } {\n  try {\n    const value = SecureJSON.parse(text);\n\n    if (schema == null) {\n      return {\n        success: true,\n        value: value as T,\n      };\n    }\n\n    return safeValidateTypes({ value, schema });\n  } catch (error) {\n    return {\n      success: false,\n      error: JSONParseError.isJSONParseError(error)\n        ? error\n        : new JSONParseError({ text, cause: error }),\n    };\n  }\n}\n\nexport function isParsableJson(input: string): boolean {\n  try {\n    SecureJSON.parse(input);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n@deprecated Use `isParsableJson` instead.  \n */\nexport const isParseableJson = isParsableJson;\n","import { TypeValidationError } from '@ai-sdk/provider';\nimport { ZodSchema } from 'zod';\n\n/**\n * Validates the types of an unknown object using a schema and\n * return a strongly-typed object.\n *\n * @template T - The type of the object to validate.\n * @param {string} options.value - The object to validate.\n * @param {Schema<T>} options.schema - The schema to use for validating the JSON.\n * @returns {T} - The typed object.\n */\nexport function validateTypes<T>({\n  value,\n  schema,\n}: {\n  value: unknown;\n  schema: ZodSchema<T>;\n}): T {\n  try {\n    return schema.parse(value);\n  } catch (error) {\n    throw new TypeValidationError({ value, cause: error });\n  }\n}\n\n/**\n * Safely validates the types of an unknown object using a schema and\n * return a strongly-typed object.\n *\n * @template T - The type of the object to validate.\n * @param {string} options.value - The JSON object to validate.\n * @param {Schema<T>} options.schema - The schema to use for validating the JSON.\n * @returns An object with either a `success` flag and the parsed and typed data, or a `success` flag and an error object.\n */\nexport function safeValidateTypes<T>({\n  value,\n  schema,\n}: {\n  value: unknown;\n  schema: ZodSchema<T>;\n}):\n  | { success: true; value: T }\n  | { success: false; error: TypeValidationError } {\n  try {\n    const validationResult = schema.safeParse(value);\n\n    if (validationResult.success) {\n      return {\n        success: true,\n        value: validationResult.data,\n      };\n    }\n\n    return {\n      success: false,\n      error: new TypeValidationError({\n        value,\n        cause: validationResult.error,\n      }),\n    };\n  } catch (error) {\n    return {\n      success: false,\n      error: TypeValidationError.isTypeValidationError(error)\n        ? error\n        : new TypeValidationError({ value, cause: error }),\n    };\n  }\n}\n","import { APICallError } from '@ai-sdk/provider';\nimport { extractResponseHeaders } from './extract-response-headers';\nimport { isAbortError } from './is-abort-error';\nimport { ResponseHandler } from './response-handler';\nimport { removeUndefinedEntries } from './remove-undefined-entries';\n\n// use function to allow for mocking in tests:\nconst getOriginalFetch = () => fetch;\n\nexport const postJsonToApi = async <T>({\n  url,\n  headers,\n  body,\n  failedResponseHandler,\n  successfulResponseHandler,\n  abortSignal,\n  fetch,\n}: {\n  url: string;\n  headers?: Record<string, string | undefined>;\n  body: unknown;\n  failedResponseHandler: ResponseHandler<APICallError>;\n  successfulResponseHandler: ResponseHandler<T>;\n  abortSignal?: AbortSignal;\n  fetch?: ReturnType<typeof getOriginalFetch>;\n}) =>\n  postToApi({\n    url,\n    headers: {\n      'Content-Type': 'application/json',\n      ...headers,\n    },\n    body: {\n      content: JSON.stringify(body),\n      values: body,\n    },\n    failedResponseHandler,\n    successfulResponseHandler,\n    abortSignal,\n    fetch,\n  });\n\nexport const postToApi = async <T>({\n  url,\n  headers = {},\n  body,\n  successfulResponseHandler,\n  failedResponseHandler,\n  abortSignal,\n  fetch = getOriginalFetch(),\n}: {\n  url: string;\n  headers?: Record<string, string | undefined>;\n  body: {\n    content: string | FormData | Uint8Array;\n    values: unknown;\n  };\n  failedResponseHandler: ResponseHandler<Error>;\n  successfulResponseHandler: ResponseHandler<T>;\n  abortSignal?: AbortSignal;\n  fetch?: ReturnType<typeof getOriginalFetch>;\n}) => {\n  try {\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: removeUndefinedEntries(headers),\n      body: body.content,\n      signal: abortSignal,\n    });\n\n    const responseHeaders = extractResponseHeaders(response);\n\n    if (!response.ok) {\n      let errorInformation: {\n        value: Error;\n        responseHeaders?: Record<string, string> | undefined;\n      };\n\n      try {\n        errorInformation = await failedResponseHandler({\n          response,\n          url,\n          requestBodyValues: body.values,\n        });\n      } catch (error) {\n        if (isAbortError(error) || APICallError.isAPICallError(error)) {\n          throw error;\n        }\n\n        throw new APICallError({\n          message: 'Failed to process error response',\n          cause: error,\n          statusCode: response.status,\n          url,\n          responseHeaders,\n          requestBodyValues: body.values,\n        });\n      }\n\n      throw errorInformation.value;\n    }\n\n    try {\n      return await successfulResponseHandler({\n        response,\n        url,\n        requestBodyValues: body.values,\n      });\n    } catch (error) {\n      if (error instanceof Error) {\n        if (isAbortError(error) || APICallError.isAPICallError(error)) {\n          throw error;\n        }\n      }\n\n      throw new APICallError({\n        message: 'Failed to process successful response',\n        cause: error,\n        statusCode: response.status,\n        url,\n        responseHeaders,\n        requestBodyValues: body.values,\n      });\n    }\n  } catch (error) {\n    if (isAbortError(error)) {\n      throw error;\n    }\n\n    // unwrap original error when fetch failed (for easier debugging):\n    if (error instanceof TypeError && error.message === 'fetch failed') {\n      const cause = (error as any).cause;\n\n      if (cause != null) {\n        // Failed to connect to server:\n        throw new APICallError({\n          message: `Cannot connect to API: ${cause.message}`,\n          cause,\n          url,\n          requestBodyValues: body.values,\n          isRetryable: true, // retry when network error\n        });\n      }\n    }\n\n    throw error;\n  }\n};\n","export function removeUndefinedEntries<T>(\n  record: Record<string, T | undefined>,\n): Record<string, T> {\n  return Object.fromEntries(\n    Object.entries(record).filter(([_key, value]) => value != null),\n  ) as Record<string, T>;\n}\n","import { APICallError, EmptyResponseBodyError } from '@ai-sdk/provider';\nimport {\n  EventSourceParserStream,\n  ParsedEvent,\n} from 'eventsource-parser/stream';\nimport { ZodSchema } from 'zod';\nimport { extractResponseHeaders } from './extract-response-headers';\nimport { ParseResult, parseJSON, safeParseJSON } from './parse-json';\n\nexport type ResponseHandler<RETURN_TYPE> = (options: {\n  url: string;\n  requestBodyValues: unknown;\n  response: Response;\n}) => PromiseLike<{\n  value: RETURN_TYPE;\n  responseHeaders?: Record<string, string>;\n}>;\n\nexport const createJsonErrorResponseHandler =\n  <T>({\n    errorSchema,\n    errorToMessage,\n    isRetryable,\n  }: {\n    errorSchema: ZodSchema<T>;\n    errorToMessage: (error: T) => string;\n    isRetryable?: (response: Response, error?: T) => boolean;\n  }): ResponseHandler<APICallError> =>\n  async ({ response, url, requestBodyValues }) => {\n    const responseBody = await response.text();\n    const responseHeaders = extractResponseHeaders(response);\n\n    // Some providers return an empty response body for some errors:\n    if (responseBody.trim() === '') {\n      return {\n        responseHeaders,\n        value: new APICallError({\n          message: response.statusText,\n          url,\n          requestBodyValues,\n          statusCode: response.status,\n          responseHeaders,\n          responseBody,\n          isRetryable: isRetryable?.(response),\n        }),\n      };\n    }\n\n    // resilient parsing in case the response is not JSON or does not match the schema:\n    try {\n      const parsedError = parseJSON({\n        text: responseBody,\n        schema: errorSchema,\n      });\n\n      return {\n        responseHeaders,\n        value: new APICallError({\n          message: errorToMessage(parsedError),\n          url,\n          requestBodyValues,\n          statusCode: response.status,\n          responseHeaders,\n          responseBody,\n          data: parsedError,\n          isRetryable: isRetryable?.(response, parsedError),\n        }),\n      };\n    } catch (parseError) {\n      return {\n        responseHeaders,\n        value: new APICallError({\n          message: response.statusText,\n          url,\n          requestBodyValues,\n          statusCode: response.status,\n          responseHeaders,\n          responseBody,\n          isRetryable: isRetryable?.(response),\n        }),\n      };\n    }\n  };\n\nexport const createEventSourceResponseHandler =\n  <T>(\n    chunkSchema: ZodSchema<T>,\n  ): ResponseHandler<ReadableStream<ParseResult<T>>> =>\n  async ({ response }: { response: Response }) => {\n    const responseHeaders = extractResponseHeaders(response);\n\n    if (response.body == null) {\n      throw new EmptyResponseBodyError({});\n    }\n\n    return {\n      responseHeaders,\n      value: response.body\n        .pipeThrough(new TextDecoderStream())\n        .pipeThrough(new EventSourceParserStream())\n        .pipeThrough(\n          new TransformStream<ParsedEvent, ParseResult<T>>({\n            transform({ data }, controller) {\n              // ignore the 'DONE' event that e.g. OpenAI sends:\n              if (data === '[DONE]') {\n                return;\n              }\n\n              controller.enqueue(\n                safeParseJSON({\n                  text: data,\n                  schema: chunkSchema,\n                }),\n              );\n            },\n          }),\n        ),\n    };\n  };\n\nexport const createJsonStreamResponseHandler =\n  <T>(\n    chunkSchema: ZodSchema<T>,\n  ): ResponseHandler<ReadableStream<ParseResult<T>>> =>\n  async ({ response }: { response: Response }) => {\n    const responseHeaders = extractResponseHeaders(response);\n\n    if (response.body == null) {\n      throw new EmptyResponseBodyError({});\n    }\n\n    let buffer = '';\n\n    return {\n      responseHeaders,\n      value: response.body.pipeThrough(new TextDecoderStream()).pipeThrough(\n        new TransformStream<string, ParseResult<T>>({\n          transform(chunkText, controller) {\n            if (chunkText.endsWith('\\n')) {\n              controller.enqueue(\n                safeParseJSON({\n                  text: buffer + chunkText,\n                  schema: chunkSchema,\n                }),\n              );\n              buffer = '';\n            } else {\n              buffer += chunkText;\n            }\n          },\n        }),\n      ),\n    };\n  };\n\nexport const createJsonResponseHandler =\n  <T>(responseSchema: ZodSchema<T>): ResponseHandler<T> =>\n  async ({ response, url, requestBodyValues }) => {\n    const responseBody = await response.text();\n\n    const parsedResult = safeParseJSON({\n      text: responseBody,\n      schema: responseSchema,\n    });\n\n    const responseHeaders = extractResponseHeaders(response);\n\n    if (!parsedResult.success) {\n      throw new APICallError({\n        message: 'Invalid JSON response',\n        cause: parsedResult.error,\n        statusCode: response.status,\n        responseHeaders,\n        responseBody,\n        url,\n        requestBodyValues,\n      });\n    }\n\n    return {\n      responseHeaders,\n      value: parsedResult.value,\n    };\n  };\n","export function convertBase64ToUint8Array(base64String: string) {\n  const base64Url = base64String.replace(/-/g, '+').replace(/_/g, '/');\n  const latin1string = globalThis.atob(base64Url);\n  return Uint8Array.from(latin1string, byte => byte.codePointAt(0)!);\n}\n\nexport function convertUint8ArrayToBase64(array: Uint8Array): string {\n  let latin1string = '';\n\n  // Note: regular for loop to support older JavaScript versions that\n  // do not support for..of on Uint8Array\n  for (let i = 0; i < array.length; i++) {\n    latin1string += String.fromCodePoint(array[i]);\n  }\n\n  return globalThis.btoa(latin1string);\n}\n","export function withoutTrailingSlash(url: string | undefined) {\n  return url?.replace(/\\/$/, '');\n}\n"],"names":["TypeValidationError","fetch","APICallError"],"mappings":"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"}},
    {"offset": {"line": 4093, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4098, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/zod-to-json-schema/dist/esm/parsers/any.js"],"sourcesContent":["export function parseAnyDef() {\n    return {};\n}\n"],"names":[],"mappings":";;;AAAO,SAAS;IACZ,OAAO,CAAC;AACZ"}},
    {"offset": {"line": 4104, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4109, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/zod-to-json-schema/dist/esm/errorMessages.js"],"sourcesContent":["export function addErrorMessage(res, key, errorMessage, refs) {\n    if (!refs?.errorMessages)\n        return;\n    if (errorMessage) {\n        res.errorMessage = {\n            ...res.errorMessage,\n            [key]: errorMessage,\n        };\n    }\n}\nexport function setResponseValueAndErrors(res, key, value, errorMessage, refs) {\n    res[key] = value;\n    addErrorMessage(res, key, errorMessage, refs);\n}\n"],"names":[],"mappings":";;;;AAAO,SAAS,gBAAgB,GAAG,EAAE,GAAG,EAAE,YAAY,EAAE,IAAI;IACxD,IAAI,CAAC,MAAM,eACP;IACJ,IAAI,cAAc;QACd,IAAI,YAAY,GAAG;YACf,GAAG,IAAI,YAAY;YACnB,CAAC,IAAI,EAAE;QACX;IACJ;AACJ;AACO,SAAS,0BAA0B,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,YAAY,EAAE,IAAI;IACzE,GAAG,CAAC,IAAI,GAAG;IACX,gBAAgB,KAAK,KAAK,cAAc;AAC5C"}},
    {"offset": {"line": 4126, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4131, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/zod-to-json-schema/dist/esm/parsers/array.js"],"sourcesContent":["import { ZodFirstPartyTypeKind } from \"zod\";\nimport { setResponseValueAndErrors } from \"../errorMessages.js\";\nimport { parseDef } from \"../parseDef.js\";\nexport function parseArrayDef(def, refs) {\n    const res = {\n        type: \"array\",\n    };\n    if (def.type?._def?.typeName !== ZodFirstPartyTypeKind.ZodAny) {\n        res.items = parseDef(def.type._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"items\"],\n        });\n    }\n    if (def.minLength) {\n        setResponseValueAndErrors(res, \"minItems\", def.minLength.value, def.minLength.message, refs);\n    }\n    if (def.maxLength) {\n        setResponseValueAndErrors(res, \"maxItems\", def.maxLength.value, def.maxLength.message, refs);\n    }\n    if (def.exactLength) {\n        setResponseValueAndErrors(res, \"minItems\", def.exactLength.value, def.exactLength.message, refs);\n        setResponseValueAndErrors(res, \"maxItems\", def.exactLength.value, def.exactLength.message, refs);\n    }\n    return res;\n}\n"],"names":[],"mappings":";;;;;;;;;;AAGO,SAAS,cAAc,GAAG,EAAE,IAAI;IACnC,MAAM,MAAM;QACR,MAAM;IACV;IACA,IAAI,IAAI,IAAI,EAAE,MAAM,aAAa,sIAAA,CAAA,wBAAqB,CAAC,MAAM,EAAE;QAC3D,IAAI,KAAK,GAAG,CAAA,GAAA,wKAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,IAAI,CAAC,IAAI,EAAE;YAChC,GAAG,IAAI;YACP,aAAa;mBAAI,KAAK,WAAW;gBAAE;aAAQ;QAC/C;IACJ;IACA,IAAI,IAAI,SAAS,EAAE;QACf,CAAA,GAAA,6KAAA,CAAA,4BAAyB,AAAD,EAAE,KAAK,YAAY,IAAI,SAAS,CAAC,KAAK,EAAE,IAAI,SAAS,CAAC,OAAO,EAAE;IAC3F;IACA,IAAI,IAAI,SAAS,EAAE;QACf,CAAA,GAAA,6KAAA,CAAA,4BAAyB,AAAD,EAAE,KAAK,YAAY,IAAI,SAAS,CAAC,KAAK,EAAE,IAAI,SAAS,CAAC,OAAO,EAAE;IAC3F;IACA,IAAI,IAAI,WAAW,EAAE;QACjB,CAAA,GAAA,6KAAA,CAAA,4BAAyB,AAAD,EAAE,KAAK,YAAY,IAAI,WAAW,CAAC,KAAK,EAAE,IAAI,WAAW,CAAC,OAAO,EAAE;QAC3F,CAAA,GAAA,6KAAA,CAAA,4BAAyB,AAAD,EAAE,KAAK,YAAY,IAAI,WAAW,CAAC,KAAK,EAAE,IAAI,WAAW,CAAC,OAAO,EAAE;IAC/F;IACA,OAAO;AACX"}},
    {"offset": {"line": 4166, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4171, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/zod-to-json-schema/dist/esm/parsers/bigint.js"],"sourcesContent":["import { setResponseValueAndErrors } from \"../errorMessages.js\";\nexport function parseBigintDef(def, refs) {\n    const res = {\n        type: \"integer\",\n        format: \"int64\",\n    };\n    if (!def.checks)\n        return res;\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case \"min\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, \"exclusiveMinimum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMinimum = true;\n                    }\n                    setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n                }\n                break;\n            case \"max\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, \"exclusiveMaximum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMaximum = true;\n                    }\n                    setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n                }\n                break;\n            case \"multipleOf\":\n                setResponseValueAndErrors(res, \"multipleOf\", check.value, check.message, refs);\n                break;\n        }\n    }\n    return res;\n}\n"],"names":[],"mappings":";;;;;;AACO,SAAS,eAAe,GAAG,EAAE,IAAI;IACpC,MAAM,MAAM;QACR,MAAM;QACN,QAAQ;IACZ;IACA,IAAI,CAAC,IAAI,MAAM,EACX,OAAO;IACX,KAAK,MAAM,SAAS,IAAI,MAAM,CAAE;QAC5B,OAAQ,MAAM,IAAI;YACd,KAAK;gBACD,IAAI,KAAK,MAAM,KAAK,eAAe;oBAC/B,IAAI,MAAM,SAAS,EAAE;wBACjB,CAAA,GAAA,6KAAA,CAAA,4BAAyB,AAAD,EAAE,KAAK,WAAW,MAAM,KAAK,EAAE,MAAM,OAAO,EAAE;oBAC1E,OACK;wBACD,CAAA,GAAA,6KAAA,CAAA,4BAAyB,AAAD,EAAE,KAAK,oBAAoB,MAAM,KAAK,EAAE,MAAM,OAAO,EAAE;oBACnF;gBACJ,OACK;oBACD,IAAI,CAAC,MAAM,SAAS,EAAE;wBAClB,IAAI,gBAAgB,GAAG;oBAC3B;oBACA,CAAA,GAAA,6KAAA,CAAA,4BAAyB,AAAD,EAAE,KAAK,WAAW,MAAM,KAAK,EAAE,MAAM,OAAO,EAAE;gBAC1E;gBACA;YACJ,KAAK;gBACD,IAAI,KAAK,MAAM,KAAK,eAAe;oBAC/B,IAAI,MAAM,SAAS,EAAE;wBACjB,CAAA,GAAA,6KAAA,CAAA,4BAAyB,AAAD,EAAE,KAAK,WAAW,MAAM,KAAK,EAAE,MAAM,OAAO,EAAE;oBAC1E,OACK;wBACD,CAAA,GAAA,6KAAA,CAAA,4BAAyB,AAAD,EAAE,KAAK,oBAAoB,MAAM,KAAK,EAAE,MAAM,OAAO,EAAE;oBACnF;gBACJ,OACK;oBACD,IAAI,CAAC,MAAM,SAAS,EAAE;wBAClB,IAAI,gBAAgB,GAAG;oBAC3B;oBACA,CAAA,GAAA,6KAAA,CAAA,4BAAyB,AAAD,EAAE,KAAK,WAAW,MAAM,KAAK,EAAE,MAAM,OAAO,EAAE;gBAC1E;gBACA;YACJ,KAAK;gBACD,CAAA,GAAA,6KAAA,CAAA,4BAAyB,AAAD,EAAE,KAAK,cAAc,MAAM,KAAK,EAAE,MAAM,OAAO,EAAE;gBACzE;QACR;IACJ;IACA,OAAO;AACX"}},
    {"offset": {"line": 4220, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4225, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/zod-to-json-schema/dist/esm/parsers/boolean.js"],"sourcesContent":["export function parseBooleanDef() {\n    return {\n        type: \"boolean\",\n    };\n}\n"],"names":[],"mappings":";;;AAAO,SAAS;IACZ,OAAO;QACH,MAAM;IACV;AACJ"}},
    {"offset": {"line": 4233, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4238, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/zod-to-json-schema/dist/esm/parsers/branded.js"],"sourcesContent":["import { parseDef } from \"../parseDef.js\";\nexport function parseBrandedDef(_def, refs) {\n    return parseDef(_def.type._def, refs);\n}\n"],"names":[],"mappings":";;;;;;AACO,SAAS,gBAAgB,IAAI,EAAE,IAAI;IACtC,OAAO,CAAA,GAAA,wKAAA,CAAA,WAAQ,AAAD,EAAE,KAAK,IAAI,CAAC,IAAI,EAAE;AACpC"}},
    {"offset": {"line": 4247, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4252, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/zod-to-json-schema/dist/esm/parsers/catch.js"],"sourcesContent":["import { parseDef } from \"../parseDef.js\";\nexport const parseCatchDef = (def, refs) => {\n    return parseDef(def.innerType._def, refs);\n};\n"],"names":[],"mappings":";;;;;;AACO,MAAM,gBAAgB,CAAC,KAAK;IAC/B,OAAO,CAAA,GAAA,wKAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,SAAS,CAAC,IAAI,EAAE;AACxC"}},
    {"offset": {"line": 4261, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4266, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/zod-to-json-schema/dist/esm/parsers/date.js"],"sourcesContent":["import { setResponseValueAndErrors } from \"../errorMessages.js\";\nexport function parseDateDef(def, refs, overrideDateStrategy) {\n    const strategy = overrideDateStrategy ?? refs.dateStrategy;\n    if (Array.isArray(strategy)) {\n        return {\n            anyOf: strategy.map((item, i) => parseDateDef(def, refs, item)),\n        };\n    }\n    switch (strategy) {\n        case \"string\":\n        case \"format:date-time\":\n            return {\n                type: \"string\",\n                format: \"date-time\",\n            };\n        case \"format:date\":\n            return {\n                type: \"string\",\n                format: \"date\",\n            };\n        case \"integer\":\n            return integerDateParser(def, refs);\n    }\n}\nconst integerDateParser = (def, refs) => {\n    const res = {\n        type: \"integer\",\n        format: \"unix-time\",\n    };\n    if (refs.target === \"openApi3\") {\n        return res;\n    }\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case \"min\":\n                setResponseValueAndErrors(res, \"minimum\", check.value, // This is in milliseconds\n                check.message, refs);\n                break;\n            case \"max\":\n                setResponseValueAndErrors(res, \"maximum\", check.value, // This is in milliseconds\n                check.message, refs);\n                break;\n        }\n    }\n    return res;\n};\n"],"names":[],"mappings":";;;;;;AACO,SAAS,aAAa,GAAG,EAAE,IAAI,EAAE,oBAAoB;IACxD,MAAM,WAAW,wBAAwB,KAAK,YAAY;IAC1D,IAAI,MAAM,OAAO,CAAC,WAAW;QACzB,OAAO;YACH,OAAO,SAAS,GAAG,CAAC,CAAC,MAAM,IAAM,aAAa,KAAK,MAAM;QAC7D;IACJ;IACA,OAAQ;QACJ,KAAK;QACL,KAAK;YACD,OAAO;gBACH,MAAM;gBACN,QAAQ;YACZ;QACJ,KAAK;YACD,OAAO;gBACH,MAAM;gBACN,QAAQ;YACZ;QACJ,KAAK;YACD,OAAO,kBAAkB,KAAK;IACtC;AACJ;AACA,MAAM,oBAAoB,CAAC,KAAK;IAC5B,MAAM,MAAM;QACR,MAAM;QACN,QAAQ;IACZ;IACA,IAAI,KAAK,MAAM,KAAK,YAAY;QAC5B,OAAO;IACX;IACA,KAAK,MAAM,SAAS,IAAI,MAAM,CAAE;QAC5B,OAAQ,MAAM,IAAI;YACd,KAAK;gBACD,CAAA,GAAA,6KAAA,CAAA,4BAAyB,AAAD,EAAE,KAAK,WAAW,MAAM,KAAK,EACrD,MAAM,OAAO,EAAE;gBACf;YACJ,KAAK;gBACD,CAAA,GAAA,6KAAA,CAAA,4BAAyB,AAAD,EAAE,KAAK,WAAW,MAAM,KAAK,EACrD,MAAM,OAAO,EAAE;gBACf;QACR;IACJ;IACA,OAAO;AACX"}},
    {"offset": {"line": 4315, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4320, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/zod-to-json-schema/dist/esm/parsers/default.js"],"sourcesContent":["import { parseDef } from \"../parseDef.js\";\nexport function parseDefaultDef(_def, refs) {\n    return {\n        ...parseDef(_def.innerType._def, refs),\n        default: _def.defaultValue(),\n    };\n}\n"],"names":[],"mappings":";;;;;;AACO,SAAS,gBAAgB,IAAI,EAAE,IAAI;IACtC,OAAO;QACH,GAAG,CAAA,GAAA,wKAAA,CAAA,WAAQ,AAAD,EAAE,KAAK,SAAS,CAAC,IAAI,EAAE,KAAK;QACtC,SAAS,KAAK,YAAY;IAC9B;AACJ"}},
    {"offset": {"line": 4332, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4337, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/zod-to-json-schema/dist/esm/parsers/effects.js"],"sourcesContent":["import { parseDef } from \"../parseDef.js\";\nexport function parseEffectsDef(_def, refs) {\n    return refs.effectStrategy === \"input\"\n        ? parseDef(_def.schema._def, refs)\n        : {};\n}\n"],"names":[],"mappings":";;;;;;AACO,SAAS,gBAAgB,IAAI,EAAE,IAAI;IACtC,OAAO,KAAK,cAAc,KAAK,UACzB,CAAA,GAAA,wKAAA,CAAA,WAAQ,AAAD,EAAE,KAAK,MAAM,CAAC,IAAI,EAAE,QAC3B,CAAC;AACX"}},
    {"offset": {"line": 4346, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4351, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/zod-to-json-schema/dist/esm/parsers/enum.js"],"sourcesContent":["export function parseEnumDef(def) {\n    return {\n        type: \"string\",\n        enum: def.values,\n    };\n}\n"],"names":[],"mappings":";;;AAAO,SAAS,aAAa,GAAG;IAC5B,OAAO;QACH,MAAM;QACN,MAAM,IAAI,MAAM;IACpB;AACJ"}},
    {"offset": {"line": 4360, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4365, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/zod-to-json-schema/dist/esm/parsers/intersection.js"],"sourcesContent":["import { parseDef } from \"../parseDef.js\";\nconst isJsonSchema7AllOfType = (type) => {\n    if (\"type\" in type && type.type === \"string\")\n        return false;\n    return \"allOf\" in type;\n};\nexport function parseIntersectionDef(def, refs) {\n    const allOf = [\n        parseDef(def.left._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"allOf\", \"0\"],\n        }),\n        parseDef(def.right._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"allOf\", \"1\"],\n        }),\n    ].filter((x) => !!x);\n    let unevaluatedProperties = refs.target === \"jsonSchema2019-09\"\n        ? { unevaluatedProperties: false }\n        : undefined;\n    const mergedAllOf = [];\n    // If either of the schemas is an allOf, merge them into a single allOf\n    allOf.forEach((schema) => {\n        if (isJsonSchema7AllOfType(schema)) {\n            mergedAllOf.push(...schema.allOf);\n            if (schema.unevaluatedProperties === undefined) {\n                // If one of the schemas has no unevaluatedProperties set,\n                // the merged schema should also have no unevaluatedProperties set\n                unevaluatedProperties = undefined;\n            }\n        }\n        else {\n            let nestedSchema = schema;\n            if (\"additionalProperties\" in schema &&\n                schema.additionalProperties === false) {\n                const { additionalProperties, ...rest } = schema;\n                nestedSchema = rest;\n            }\n            else {\n                // As soon as one of the schemas has additionalProperties set not to false, we allow unevaluatedProperties\n                unevaluatedProperties = undefined;\n            }\n            mergedAllOf.push(nestedSchema);\n        }\n    });\n    return mergedAllOf.length\n        ? {\n            allOf: mergedAllOf,\n            ...unevaluatedProperties,\n        }\n        : undefined;\n}\n"],"names":[],"mappings":";;;;;;AACA,MAAM,yBAAyB,CAAC;IAC5B,IAAI,UAAU,QAAQ,KAAK,IAAI,KAAK,UAChC,OAAO;IACX,OAAO,WAAW;AACtB;AACO,SAAS,qBAAqB,GAAG,EAAE,IAAI;IAC1C,MAAM,QAAQ;QACV,CAAA,GAAA,wKAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,IAAI,CAAC,IAAI,EAAE;YACpB,GAAG,IAAI;YACP,aAAa;mBAAI,KAAK,WAAW;gBAAE;gBAAS;aAAI;QACpD;QACA,CAAA,GAAA,wKAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,KAAK,CAAC,IAAI,EAAE;YACrB,GAAG,IAAI;YACP,aAAa;mBAAI,KAAK,WAAW;gBAAE;gBAAS;aAAI;QACpD;KACH,CAAC,MAAM,CAAC,CAAC,IAAM,CAAC,CAAC;IAClB,IAAI,wBAAwB,KAAK,MAAM,KAAK,sBACtC;QAAE,uBAAuB;IAAM,IAC/B;IACN,MAAM,cAAc,EAAE;IACtB,uEAAuE;IACvE,MAAM,OAAO,CAAC,CAAC;QACX,IAAI,uBAAuB,SAAS;YAChC,YAAY,IAAI,IAAI,OAAO,KAAK;YAChC,IAAI,OAAO,qBAAqB,KAAK,WAAW;gBAC5C,0DAA0D;gBAC1D,kEAAkE;gBAClE,wBAAwB;YAC5B;QACJ,OACK;YACD,IAAI,eAAe;YACnB,IAAI,0BAA0B,UAC1B,OAAO,oBAAoB,KAAK,OAAO;gBACvC,MAAM,EAAE,oBAAoB,EAAE,GAAG,MAAM,GAAG;gBAC1C,eAAe;YACnB,OACK;gBACD,0GAA0G;gBAC1G,wBAAwB;YAC5B;YACA,YAAY,IAAI,CAAC;QACrB;IACJ;IACA,OAAO,YAAY,MAAM,GACnB;QACE,OAAO;QACP,GAAG,qBAAqB;IAC5B,IACE;AACV"}},
    {"offset": {"line": 4424, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4429, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/zod-to-json-schema/dist/esm/parsers/literal.js"],"sourcesContent":["export function parseLiteralDef(def, refs) {\n    const parsedType = typeof def.value;\n    if (parsedType !== \"bigint\" &&\n        parsedType !== \"number\" &&\n        parsedType !== \"boolean\" &&\n        parsedType !== \"string\") {\n        return {\n            type: Array.isArray(def.value) ? \"array\" : \"object\",\n        };\n    }\n    if (refs.target === \"openApi3\") {\n        return {\n            type: parsedType === \"bigint\" ? \"integer\" : parsedType,\n            enum: [def.value],\n        };\n    }\n    return {\n        type: parsedType === \"bigint\" ? \"integer\" : parsedType,\n        const: def.value,\n    };\n}\n"],"names":[],"mappings":";;;AAAO,SAAS,gBAAgB,GAAG,EAAE,IAAI;IACrC,MAAM,aAAa,OAAO,IAAI,KAAK;IACnC,IAAI,eAAe,YACf,eAAe,YACf,eAAe,aACf,eAAe,UAAU;QACzB,OAAO;YACH,MAAM,MAAM,OAAO,CAAC,IAAI,KAAK,IAAI,UAAU;QAC/C;IACJ;IACA,IAAI,KAAK,MAAM,KAAK,YAAY;QAC5B,OAAO;YACH,MAAM,eAAe,WAAW,YAAY;YAC5C,MAAM;gBAAC,IAAI,KAAK;aAAC;QACrB;IACJ;IACA,OAAO;QACH,MAAM,eAAe,WAAW,YAAY;QAC5C,OAAO,IAAI,KAAK;IACpB;AACJ"}},
    {"offset": {"line": 4452, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4457, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/zod-to-json-schema/dist/esm/parsers/string.js"],"sourcesContent":["import { setResponseValueAndErrors } from \"../errorMessages.js\";\nlet emojiRegex;\n/**\n * Generated from the regular expressions found here as of 2024-05-22:\n * https://github.com/colinhacks/zod/blob/master/src/types.ts.\n *\n * Expressions with /i flag have been changed accordingly.\n */\nexport const zodPatterns = {\n    /**\n     * `c` was changed to `[cC]` to replicate /i flag\n     */\n    cuid: /^[cC][^\\s-]{8,}$/,\n    cuid2: /^[0-9a-z]+$/,\n    ulid: /^[0-9A-HJKMNP-TV-Z]{26}$/,\n    /**\n     * `a-z` was added to replicate /i flag\n     */\n    email: /^(?!\\.)(?!.*\\.\\.)([a-zA-Z0-9_'+\\-\\.]*)[a-zA-Z0-9_+-]@([a-zA-Z0-9][a-zA-Z0-9\\-]*\\.)+[a-zA-Z]{2,}$/,\n    /**\n     * Constructed a valid Unicode RegExp\n     *\n     * Lazily instantiate since this type of regex isn't supported\n     * in all envs (e.g. React Native).\n     *\n     * See:\n     * https://github.com/colinhacks/zod/issues/2433\n     * Fix in Zod:\n     * https://github.com/colinhacks/zod/commit/9340fd51e48576a75adc919bff65dbc4a5d4c99b\n     */\n    emoji: () => {\n        if (emojiRegex === undefined) {\n            emojiRegex = RegExp(\"^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$\", \"u\");\n        }\n        return emojiRegex;\n    },\n    /**\n     * Unused\n     */\n    uuid: /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/,\n    /**\n     * Unused\n     */\n    ipv4: /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,\n    /**\n     * Unused\n     */\n    ipv6: /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/,\n    base64: /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,\n    nanoid: /^[a-zA-Z0-9_-]{21}$/,\n};\nexport function parseStringDef(def, refs) {\n    const res = {\n        type: \"string\",\n    };\n    function processPattern(value) {\n        return refs.patternStrategy === \"escape\"\n            ? escapeNonAlphaNumeric(value)\n            : value;\n    }\n    if (def.checks) {\n        for (const check of def.checks) {\n            switch (check.kind) {\n                case \"min\":\n                    setResponseValueAndErrors(res, \"minLength\", typeof res.minLength === \"number\"\n                        ? Math.max(res.minLength, check.value)\n                        : check.value, check.message, refs);\n                    break;\n                case \"max\":\n                    setResponseValueAndErrors(res, \"maxLength\", typeof res.maxLength === \"number\"\n                        ? Math.min(res.maxLength, check.value)\n                        : check.value, check.message, refs);\n                    break;\n                case \"email\":\n                    switch (refs.emailStrategy) {\n                        case \"format:email\":\n                            addFormat(res, \"email\", check.message, refs);\n                            break;\n                        case \"format:idn-email\":\n                            addFormat(res, \"idn-email\", check.message, refs);\n                            break;\n                        case \"pattern:zod\":\n                            addPattern(res, zodPatterns.email, check.message, refs);\n                            break;\n                    }\n                    break;\n                case \"url\":\n                    addFormat(res, \"uri\", check.message, refs);\n                    break;\n                case \"uuid\":\n                    addFormat(res, \"uuid\", check.message, refs);\n                    break;\n                case \"regex\":\n                    addPattern(res, check.regex, check.message, refs);\n                    break;\n                case \"cuid\":\n                    addPattern(res, zodPatterns.cuid, check.message, refs);\n                    break;\n                case \"cuid2\":\n                    addPattern(res, zodPatterns.cuid2, check.message, refs);\n                    break;\n                case \"startsWith\":\n                    addPattern(res, RegExp(`^${processPattern(check.value)}`), check.message, refs);\n                    break;\n                case \"endsWith\":\n                    addPattern(res, RegExp(`${processPattern(check.value)}$`), check.message, refs);\n                    break;\n                case \"datetime\":\n                    addFormat(res, \"date-time\", check.message, refs);\n                    break;\n                case \"date\":\n                    addFormat(res, \"date\", check.message, refs);\n                    break;\n                case \"time\":\n                    addFormat(res, \"time\", check.message, refs);\n                    break;\n                case \"duration\":\n                    addFormat(res, \"duration\", check.message, refs);\n                    break;\n                case \"length\":\n                    setResponseValueAndErrors(res, \"minLength\", typeof res.minLength === \"number\"\n                        ? Math.max(res.minLength, check.value)\n                        : check.value, check.message, refs);\n                    setResponseValueAndErrors(res, \"maxLength\", typeof res.maxLength === \"number\"\n                        ? Math.min(res.maxLength, check.value)\n                        : check.value, check.message, refs);\n                    break;\n                case \"includes\": {\n                    addPattern(res, RegExp(processPattern(check.value)), check.message, refs);\n                    break;\n                }\n                case \"ip\": {\n                    if (check.version !== \"v6\") {\n                        addFormat(res, \"ipv4\", check.message, refs);\n                    }\n                    if (check.version !== \"v4\") {\n                        addFormat(res, \"ipv6\", check.message, refs);\n                    }\n                    break;\n                }\n                case \"emoji\":\n                    addPattern(res, zodPatterns.emoji, check.message, refs);\n                    break;\n                case \"ulid\": {\n                    addPattern(res, zodPatterns.ulid, check.message, refs);\n                    break;\n                }\n                case \"base64\": {\n                    switch (refs.base64Strategy) {\n                        case \"format:binary\": {\n                            addFormat(res, \"binary\", check.message, refs);\n                            break;\n                        }\n                        case \"contentEncoding:base64\": {\n                            setResponseValueAndErrors(res, \"contentEncoding\", \"base64\", check.message, refs);\n                            break;\n                        }\n                        case \"pattern:zod\": {\n                            addPattern(res, zodPatterns.base64, check.message, refs);\n                            break;\n                        }\n                    }\n                    break;\n                }\n                case \"nanoid\": {\n                    addPattern(res, zodPatterns.nanoid, check.message, refs);\n                }\n                case \"toLowerCase\":\n                case \"toUpperCase\":\n                case \"trim\":\n                    break;\n                default:\n                    ((_) => { })(check);\n            }\n        }\n    }\n    return res;\n}\nconst escapeNonAlphaNumeric = (value) => Array.from(value)\n    .map((c) => (/[a-zA-Z0-9]/.test(c) ? c : `\\\\${c}`))\n    .join(\"\");\nconst addFormat = (schema, value, message, refs) => {\n    if (schema.format || schema.anyOf?.some((x) => x.format)) {\n        if (!schema.anyOf) {\n            schema.anyOf = [];\n        }\n        if (schema.format) {\n            schema.anyOf.push({\n                format: schema.format,\n                ...(schema.errorMessage &&\n                    refs.errorMessages && {\n                    errorMessage: { format: schema.errorMessage.format },\n                }),\n            });\n            delete schema.format;\n            if (schema.errorMessage) {\n                delete schema.errorMessage.format;\n                if (Object.keys(schema.errorMessage).length === 0) {\n                    delete schema.errorMessage;\n                }\n            }\n        }\n        schema.anyOf.push({\n            format: value,\n            ...(message &&\n                refs.errorMessages && { errorMessage: { format: message } }),\n        });\n    }\n    else {\n        setResponseValueAndErrors(schema, \"format\", value, message, refs);\n    }\n};\nconst addPattern = (schema, regex, message, refs) => {\n    if (schema.pattern || schema.allOf?.some((x) => x.pattern)) {\n        if (!schema.allOf) {\n            schema.allOf = [];\n        }\n        if (schema.pattern) {\n            schema.allOf.push({\n                pattern: schema.pattern,\n                ...(schema.errorMessage &&\n                    refs.errorMessages && {\n                    errorMessage: { pattern: schema.errorMessage.pattern },\n                }),\n            });\n            delete schema.pattern;\n            if (schema.errorMessage) {\n                delete schema.errorMessage.pattern;\n                if (Object.keys(schema.errorMessage).length === 0) {\n                    delete schema.errorMessage;\n                }\n            }\n        }\n        schema.allOf.push({\n            pattern: processRegExp(regex, refs),\n            ...(message &&\n                refs.errorMessages && { errorMessage: { pattern: message } }),\n        });\n    }\n    else {\n        setResponseValueAndErrors(schema, \"pattern\", processRegExp(regex, refs), message, refs);\n    }\n};\n// Mutate z.string.regex() in a best attempt to accommodate for regex flags when applyRegexFlags is true\nconst processRegExp = (regexOrFunction, refs) => {\n    const regex = typeof regexOrFunction === \"function\" ? regexOrFunction() : regexOrFunction;\n    if (!refs.applyRegexFlags || !regex.flags)\n        return regex.source;\n    // Currently handled flags\n    const flags = {\n        i: regex.flags.includes(\"i\"),\n        m: regex.flags.includes(\"m\"),\n        s: regex.flags.includes(\"s\"), // `.` matches newlines\n    };\n    // The general principle here is to step through each character, one at a time, applying mutations as flags require. We keep track when the current character is escaped, and when it's inside a group /like [this]/ or (also) a range like /[a-z]/. The following is fairly brittle imperative code; edit at your peril!\n    const source = flags.i ? regex.source.toLowerCase() : regex.source;\n    let pattern = \"\";\n    let isEscaped = false;\n    let inCharGroup = false;\n    let inCharRange = false;\n    for (let i = 0; i < source.length; i++) {\n        if (isEscaped) {\n            pattern += source[i];\n            isEscaped = false;\n            continue;\n        }\n        if (flags.i) {\n            if (inCharGroup) {\n                if (source[i].match(/[a-z]/)) {\n                    if (inCharRange) {\n                        pattern += source[i];\n                        pattern += `${source[i - 2]}-${source[i]}`.toUpperCase();\n                        inCharRange = false;\n                    }\n                    else if (source[i + 1] === \"-\" && source[i + 2]?.match(/[a-z]/)) {\n                        pattern += source[i];\n                        inCharRange = true;\n                    }\n                    else {\n                        pattern += `${source[i]}${source[i].toUpperCase()}`;\n                    }\n                    continue;\n                }\n            }\n            else if (source[i].match(/[a-z]/)) {\n                pattern += `[${source[i]}${source[i].toUpperCase()}]`;\n                continue;\n            }\n        }\n        if (flags.m) {\n            if (source[i] === \"^\") {\n                pattern += `(^|(?<=[\\r\\n]))`;\n                continue;\n            }\n            else if (source[i] === \"$\") {\n                pattern += `($|(?=[\\r\\n]))`;\n                continue;\n            }\n        }\n        if (flags.s && source[i] === \".\") {\n            pattern += inCharGroup ? `${source[i]}\\r\\n` : `[${source[i]}\\r\\n]`;\n            continue;\n        }\n        pattern += source[i];\n        if (source[i] === \"\\\\\") {\n            isEscaped = true;\n        }\n        else if (inCharGroup && source[i] === \"]\") {\n            inCharGroup = false;\n        }\n        else if (!inCharGroup && source[i] === \"[\") {\n            inCharGroup = true;\n        }\n    }\n    try {\n        const regexTest = new RegExp(pattern);\n    }\n    catch {\n        console.warn(`Could not convert regex pattern at ${refs.currentPath.join(\"/\")} to a flag-independent form! Falling back to the flag-ignorant source`);\n        return regex.source;\n    }\n    return pattern;\n};\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 4768, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4773, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/zod-to-json-schema/dist/esm/parsers/record.js"],"sourcesContent":["import { ZodFirstPartyTypeKind, } from \"zod\";\nimport { parseDef } from \"../parseDef.js\";\nimport { parseStringDef } from \"./string.js\";\nexport function parseRecordDef(def, refs) {\n    if (refs.target === \"openApi3\" &&\n        def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodEnum) {\n        return {\n            type: \"object\",\n            required: def.keyType._def.values,\n            properties: def.keyType._def.values.reduce((acc, key) => ({\n                ...acc,\n                [key]: parseDef(def.valueType._def, {\n                    ...refs,\n                    currentPath: [...refs.currentPath, \"properties\", key],\n                }) ?? {},\n            }), {}),\n            additionalProperties: false,\n        };\n    }\n    const schema = {\n        type: \"object\",\n        additionalProperties: parseDef(def.valueType._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"additionalProperties\"],\n        }) ?? {},\n    };\n    if (refs.target === \"openApi3\") {\n        return schema;\n    }\n    if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodString &&\n        def.keyType._def.checks?.length) {\n        const keyType = Object.entries(parseStringDef(def.keyType._def, refs)).reduce((acc, [key, value]) => (key === \"type\" ? acc : { ...acc, [key]: value }), {});\n        return {\n            ...schema,\n            propertyNames: keyType,\n        };\n    }\n    else if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodEnum) {\n        return {\n            ...schema,\n            propertyNames: {\n                enum: def.keyType._def.values,\n            },\n        };\n    }\n    return schema;\n}\n"],"names":[],"mappings":";;;;;;;;;;AAGO,SAAS,eAAe,GAAG,EAAE,IAAI;IACpC,IAAI,KAAK,MAAM,KAAK,cAChB,IAAI,OAAO,EAAE,KAAK,aAAa,sIAAA,CAAA,wBAAqB,CAAC,OAAO,EAAE;QAC9D,OAAO;YACH,MAAM;YACN,UAAU,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM;YACjC,YAAY,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,KAAK,MAAQ,CAAC;oBACtD,GAAG,GAAG;oBACN,CAAC,IAAI,EAAE,CAAA,GAAA,wKAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,SAAS,CAAC,IAAI,EAAE;wBAChC,GAAG,IAAI;wBACP,aAAa;+BAAI,KAAK,WAAW;4BAAE;4BAAc;yBAAI;oBACzD,MAAM,CAAC;gBACX,CAAC,GAAG,CAAC;YACL,sBAAsB;QAC1B;IACJ;IACA,MAAM,SAAS;QACX,MAAM;QACN,sBAAsB,CAAA,GAAA,wKAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,SAAS,CAAC,IAAI,EAAE;YAC/C,GAAG,IAAI;YACP,aAAa;mBAAI,KAAK,WAAW;gBAAE;aAAuB;QAC9D,MAAM,CAAC;IACX;IACA,IAAI,KAAK,MAAM,KAAK,YAAY;QAC5B,OAAO;IACX;IACA,IAAI,IAAI,OAAO,EAAE,KAAK,aAAa,sIAAA,CAAA,wBAAqB,CAAC,SAAS,IAC9D,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ;QACjC,MAAM,UAAU,OAAO,OAAO,CAAC,CAAA,GAAA,iLAAA,CAAA,iBAAc,AAAD,EAAE,IAAI,OAAO,CAAC,IAAI,EAAE,OAAO,MAAM,CAAC,CAAC,KAAK,CAAC,KAAK,MAAM,GAAM,QAAQ,SAAS,MAAM;gBAAE,GAAG,GAAG;gBAAE,CAAC,IAAI,EAAE;YAAM,GAAI,CAAC;QACzJ,OAAO;YACH,GAAG,MAAM;YACT,eAAe;QACnB;IACJ,OACK,IAAI,IAAI,OAAO,EAAE,KAAK,aAAa,sIAAA,CAAA,wBAAqB,CAAC,OAAO,EAAE;QACnE,OAAO;YACH,GAAG,MAAM;YACT,eAAe;gBACX,MAAM,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM;YACjC;QACJ;IACJ;IACA,OAAO;AACX"}},
    {"offset": {"line": 4834, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4839, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/zod-to-json-schema/dist/esm/parsers/map.js"],"sourcesContent":["import { parseDef } from \"../parseDef.js\";\nimport { parseRecordDef } from \"./record.js\";\nexport function parseMapDef(def, refs) {\n    if (refs.mapStrategy === \"record\") {\n        return parseRecordDef(def, refs);\n    }\n    const keys = parseDef(def.keyType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"items\", \"items\", \"0\"],\n    }) || {};\n    const values = parseDef(def.valueType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"items\", \"items\", \"1\"],\n    }) || {};\n    return {\n        type: \"array\",\n        maxItems: 125,\n        items: {\n            type: \"array\",\n            items: [keys, values],\n            minItems: 2,\n            maxItems: 2,\n        },\n    };\n}\n"],"names":[],"mappings":";;;;;;;;AAEO,SAAS,YAAY,GAAG,EAAE,IAAI;IACjC,IAAI,KAAK,WAAW,KAAK,UAAU;QAC/B,OAAO,CAAA,GAAA,iLAAA,CAAA,iBAAc,AAAD,EAAE,KAAK;IAC/B;IACA,MAAM,OAAO,CAAA,GAAA,wKAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,OAAO,CAAC,IAAI,EAAE;QACpC,GAAG,IAAI;QACP,aAAa;eAAI,KAAK,WAAW;YAAE;YAAS;YAAS;SAAI;IAC7D,MAAM,CAAC;IACP,MAAM,SAAS,CAAA,GAAA,wKAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,SAAS,CAAC,IAAI,EAAE;QACxC,GAAG,IAAI;QACP,aAAa;eAAI,KAAK,WAAW;YAAE;YAAS;YAAS;SAAI;IAC7D,MAAM,CAAC;IACP,OAAO;QACH,MAAM;QACN,UAAU;QACV,OAAO;YACH,MAAM;YACN,OAAO;gBAAC;gBAAM;aAAO;YACrB,UAAU;YACV,UAAU;QACd;IACJ;AACJ"}},
    {"offset": {"line": 4883, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4888, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/zod-to-json-schema/dist/esm/parsers/nativeEnum.js"],"sourcesContent":["export function parseNativeEnumDef(def) {\n    const object = def.values;\n    const actualKeys = Object.keys(def.values).filter((key) => {\n        return typeof object[object[key]] !== \"number\";\n    });\n    const actualValues = actualKeys.map((key) => object[key]);\n    const parsedTypes = Array.from(new Set(actualValues.map((values) => typeof values)));\n    return {\n        type: parsedTypes.length === 1\n            ? parsedTypes[0] === \"string\"\n                ? \"string\"\n                : \"number\"\n            : [\"string\", \"number\"],\n        enum: actualValues,\n    };\n}\n"],"names":[],"mappings":";;;AAAO,SAAS,mBAAmB,GAAG;IAClC,MAAM,SAAS,IAAI,MAAM;IACzB,MAAM,aAAa,OAAO,IAAI,CAAC,IAAI,MAAM,EAAE,MAAM,CAAC,CAAC;QAC/C,OAAO,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK;IAC1C;IACA,MAAM,eAAe,WAAW,GAAG,CAAC,CAAC,MAAQ,MAAM,CAAC,IAAI;IACxD,MAAM,cAAc,MAAM,IAAI,CAAC,IAAI,IAAI,aAAa,GAAG,CAAC,CAAC,SAAW,OAAO;IAC3E,OAAO;QACH,MAAM,YAAY,MAAM,KAAK,IACvB,WAAW,CAAC,EAAE,KAAK,WACf,WACA,WACJ;YAAC;YAAU;SAAS;QAC1B,MAAM;IACV;AACJ"}},
    {"offset": {"line": 4906, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4911, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/zod-to-json-schema/dist/esm/parsers/never.js"],"sourcesContent":["export function parseNeverDef() {\n    return {\n        not: {},\n    };\n}\n"],"names":[],"mappings":";;;AAAO,SAAS;IACZ,OAAO;QACH,KAAK,CAAC;IACV;AACJ"}},
    {"offset": {"line": 4919, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4924, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/zod-to-json-schema/dist/esm/parsers/null.js"],"sourcesContent":["export function parseNullDef(refs) {\n    return refs.target === \"openApi3\"\n        ? {\n            enum: [\"null\"],\n            nullable: true,\n        }\n        : {\n            type: \"null\",\n        };\n}\n"],"names":[],"mappings":";;;AAAO,SAAS,aAAa,IAAI;IAC7B,OAAO,KAAK,MAAM,KAAK,aACjB;QACE,MAAM;YAAC;SAAO;QACd,UAAU;IACd,IACE;QACE,MAAM;IACV;AACR"}},
    {"offset": {"line": 4937, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4942, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/zod-to-json-schema/dist/esm/parsers/union.js"],"sourcesContent":["import { parseDef } from \"../parseDef.js\";\nexport const primitiveMappings = {\n    ZodString: \"string\",\n    ZodNumber: \"number\",\n    ZodBigInt: \"integer\",\n    ZodBoolean: \"boolean\",\n    ZodNull: \"null\",\n};\nexport function parseUnionDef(def, refs) {\n    if (refs.target === \"openApi3\")\n        return asAnyOf(def, refs);\n    const options = def.options instanceof Map ? Array.from(def.options.values()) : def.options;\n    // This blocks tries to look ahead a bit to produce nicer looking schemas with type array instead of anyOf.\n    if (options.every((x) => x._def.typeName in primitiveMappings &&\n        (!x._def.checks || !x._def.checks.length))) {\n        // all types in union are primitive and lack checks, so might as well squash into {type: [...]}\n        const types = options.reduce((types, x) => {\n            const type = primitiveMappings[x._def.typeName]; //Can be safely casted due to row 43\n            return type && !types.includes(type) ? [...types, type] : types;\n        }, []);\n        return {\n            type: types.length > 1 ? types : types[0],\n        };\n    }\n    else if (options.every((x) => x._def.typeName === \"ZodLiteral\" && !x.description)) {\n        // all options literals\n        const types = options.reduce((acc, x) => {\n            const type = typeof x._def.value;\n            switch (type) {\n                case \"string\":\n                case \"number\":\n                case \"boolean\":\n                    return [...acc, type];\n                case \"bigint\":\n                    return [...acc, \"integer\"];\n                case \"object\":\n                    if (x._def.value === null)\n                        return [...acc, \"null\"];\n                case \"symbol\":\n                case \"undefined\":\n                case \"function\":\n                default:\n                    return acc;\n            }\n        }, []);\n        if (types.length === options.length) {\n            // all the literals are primitive, as far as null can be considered primitive\n            const uniqueTypes = types.filter((x, i, a) => a.indexOf(x) === i);\n            return {\n                type: uniqueTypes.length > 1 ? uniqueTypes : uniqueTypes[0],\n                enum: options.reduce((acc, x) => {\n                    return acc.includes(x._def.value) ? acc : [...acc, x._def.value];\n                }, []),\n            };\n        }\n    }\n    else if (options.every((x) => x._def.typeName === \"ZodEnum\")) {\n        return {\n            type: \"string\",\n            enum: options.reduce((acc, x) => [\n                ...acc,\n                ...x._def.values.filter((x) => !acc.includes(x)),\n            ], []),\n        };\n    }\n    return asAnyOf(def, refs);\n}\nconst asAnyOf = (def, refs) => {\n    const anyOf = (def.options instanceof Map\n        ? Array.from(def.options.values())\n        : def.options)\n        .map((x, i) => parseDef(x._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"anyOf\", `${i}`],\n    }))\n        .filter((x) => !!x &&\n        (!refs.strictUnions ||\n            (typeof x === \"object\" && Object.keys(x).length > 0)));\n    return anyOf.length ? { anyOf } : undefined;\n};\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 5038, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5043, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/zod-to-json-schema/dist/esm/parsers/nullable.js"],"sourcesContent":["import { parseDef } from \"../parseDef.js\";\nimport { primitiveMappings } from \"./union.js\";\nexport function parseNullableDef(def, refs) {\n    if ([\"ZodString\", \"ZodNumber\", \"ZodBigInt\", \"ZodBoolean\", \"ZodNull\"].includes(def.innerType._def.typeName) &&\n        (!def.innerType._def.checks || !def.innerType._def.checks.length)) {\n        if (refs.target === \"openApi3\") {\n            return {\n                type: primitiveMappings[def.innerType._def.typeName],\n                nullable: true,\n            };\n        }\n        return {\n            type: [\n                primitiveMappings[def.innerType._def.typeName],\n                \"null\",\n            ],\n        };\n    }\n    if (refs.target === \"openApi3\") {\n        const base = parseDef(def.innerType._def, {\n            ...refs,\n            currentPath: [...refs.currentPath],\n        });\n        if (base && '$ref' in base)\n            return { allOf: [base], nullable: true };\n        return base && { ...base, nullable: true };\n    }\n    const base = parseDef(def.innerType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"anyOf\", \"0\"],\n    });\n    return base && { anyOf: [base, { type: \"null\" }] };\n}\n"],"names":[],"mappings":";;;;;;;;AAEO,SAAS,iBAAiB,GAAG,EAAE,IAAI;IACtC,IAAI;QAAC;QAAa;QAAa;QAAa;QAAc;KAAU,CAAC,QAAQ,CAAC,IAAI,SAAS,CAAC,IAAI,CAAC,QAAQ,KACrG,CAAC,CAAC,IAAI,SAAS,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG;QACnE,IAAI,KAAK,MAAM,KAAK,YAAY;YAC5B,OAAO;gBACH,MAAM,gLAAA,CAAA,oBAAiB,CAAC,IAAI,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC;gBACpD,UAAU;YACd;QACJ;QACA,OAAO;YACH,MAAM;gBACF,gLAAA,CAAA,oBAAiB,CAAC,IAAI,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC;gBAC9C;aACH;QACL;IACJ;IACA,IAAI,KAAK,MAAM,KAAK,YAAY;QAC5B,MAAM,OAAO,CAAA,GAAA,wKAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,SAAS,CAAC,IAAI,EAAE;YACtC,GAAG,IAAI;YACP,aAAa;mBAAI,KAAK,WAAW;aAAC;QACtC;QACA,IAAI,QAAQ,UAAU,MAClB,OAAO;YAAE,OAAO;gBAAC;aAAK;YAAE,UAAU;QAAK;QAC3C,OAAO,QAAQ;YAAE,GAAG,IAAI;YAAE,UAAU;QAAK;IAC7C;IACA,MAAM,OAAO,CAAA,GAAA,wKAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,SAAS,CAAC,IAAI,EAAE;QACtC,GAAG,IAAI;QACP,aAAa;eAAI,KAAK,WAAW;YAAE;YAAS;SAAI;IACpD;IACA,OAAO,QAAQ;QAAE,OAAO;YAAC;YAAM;gBAAE,MAAM;YAAO;SAAE;IAAC;AACrD"}},
    {"offset": {"line": 5107, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5112, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/zod-to-json-schema/dist/esm/parsers/number.js"],"sourcesContent":["import { addErrorMessage, setResponseValueAndErrors, } from \"../errorMessages.js\";\nexport function parseNumberDef(def, refs) {\n    const res = {\n        type: \"number\",\n    };\n    if (!def.checks)\n        return res;\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case \"int\":\n                res.type = \"integer\";\n                addErrorMessage(res, \"type\", check.message, refs);\n                break;\n            case \"min\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, \"exclusiveMinimum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMinimum = true;\n                    }\n                    setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n                }\n                break;\n            case \"max\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, \"exclusiveMaximum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMaximum = true;\n                    }\n                    setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n                }\n                break;\n            case \"multipleOf\":\n                setResponseValueAndErrors(res, \"multipleOf\", check.value, check.message, refs);\n                break;\n        }\n    }\n    return res;\n}\n"],"names":[],"mappings":";;;;;;AACO,SAAS,eAAe,GAAG,EAAE,IAAI;IACpC,MAAM,MAAM;QACR,MAAM;IACV;IACA,IAAI,CAAC,IAAI,MAAM,EACX,OAAO;IACX,KAAK,MAAM,SAAS,IAAI,MAAM,CAAE;QAC5B,OAAQ,MAAM,IAAI;YACd,KAAK;gBACD,IAAI,IAAI,GAAG;gBACX,CAAA,GAAA,6KAAA,CAAA,kBAAe,AAAD,EAAE,KAAK,QAAQ,MAAM,OAAO,EAAE;gBAC5C;YACJ,KAAK;gBACD,IAAI,KAAK,MAAM,KAAK,eAAe;oBAC/B,IAAI,MAAM,SAAS,EAAE;wBACjB,CAAA,GAAA,6KAAA,CAAA,4BAAyB,AAAD,EAAE,KAAK,WAAW,MAAM,KAAK,EAAE,MAAM,OAAO,EAAE;oBAC1E,OACK;wBACD,CAAA,GAAA,6KAAA,CAAA,4BAAyB,AAAD,EAAE,KAAK,oBAAoB,MAAM,KAAK,EAAE,MAAM,OAAO,EAAE;oBACnF;gBACJ,OACK;oBACD,IAAI,CAAC,MAAM,SAAS,EAAE;wBAClB,IAAI,gBAAgB,GAAG;oBAC3B;oBACA,CAAA,GAAA,6KAAA,CAAA,4BAAyB,AAAD,EAAE,KAAK,WAAW,MAAM,KAAK,EAAE,MAAM,OAAO,EAAE;gBAC1E;gBACA;YACJ,KAAK;gBACD,IAAI,KAAK,MAAM,KAAK,eAAe;oBAC/B,IAAI,MAAM,SAAS,EAAE;wBACjB,CAAA,GAAA,6KAAA,CAAA,4BAAyB,AAAD,EAAE,KAAK,WAAW,MAAM,KAAK,EAAE,MAAM,OAAO,EAAE;oBAC1E,OACK;wBACD,CAAA,GAAA,6KAAA,CAAA,4BAAyB,AAAD,EAAE,KAAK,oBAAoB,MAAM,KAAK,EAAE,MAAM,OAAO,EAAE;oBACnF;gBACJ,OACK;oBACD,IAAI,CAAC,MAAM,SAAS,EAAE;wBAClB,IAAI,gBAAgB,GAAG;oBAC3B;oBACA,CAAA,GAAA,6KAAA,CAAA,4BAAyB,AAAD,EAAE,KAAK,WAAW,MAAM,KAAK,EAAE,MAAM,OAAO,EAAE;gBAC1E;gBACA;YACJ,KAAK;gBACD,CAAA,GAAA,6KAAA,CAAA,4BAAyB,AAAD,EAAE,KAAK,cAAc,MAAM,KAAK,EAAE,MAAM,OAAO,EAAE;gBACzE;QACR;IACJ;IACA,OAAO;AACX"}},
    {"offset": {"line": 5164, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5169, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/zod-to-json-schema/dist/esm/parsers/object.js"],"sourcesContent":["import { parseDef } from \"../parseDef.js\";\nfunction decideAdditionalProperties(def, refs) {\n    if (refs.removeAdditionalStrategy === \"strict\") {\n        return def.catchall._def.typeName === \"ZodNever\"\n            ? def.unknownKeys !== \"strict\"\n            : parseDef(def.catchall._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"additionalProperties\"],\n            }) ?? true;\n    }\n    else {\n        return def.catchall._def.typeName === \"ZodNever\"\n            ? def.unknownKeys === \"passthrough\"\n            : parseDef(def.catchall._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"additionalProperties\"],\n            }) ?? true;\n    }\n}\n;\nexport function parseObjectDefX(def, refs) {\n    Object.keys(def.shape()).reduce((schema, key) => {\n        let prop = def.shape()[key];\n        const isOptional = prop.isOptional();\n        if (!isOptional) {\n            prop = { ...prop._def.innerSchema };\n        }\n        const propSchema = parseDef(prop._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"properties\", key],\n            propertyPath: [...refs.currentPath, \"properties\", key],\n        });\n        if (propSchema !== undefined) {\n            schema.properties[key] = propSchema;\n            if (!isOptional) {\n                if (!schema.required) {\n                    schema.required = [];\n                }\n                schema.required.push(key);\n            }\n        }\n        return schema;\n    }, {\n        type: \"object\",\n        properties: {},\n        additionalProperties: decideAdditionalProperties(def, refs),\n    });\n    const result = {\n        type: \"object\",\n        ...Object.entries(def.shape()).reduce((acc, [propName, propDef]) => {\n            if (propDef === undefined || propDef._def === undefined)\n                return acc;\n            const parsedDef = parseDef(propDef._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"properties\", propName],\n                propertyPath: [...refs.currentPath, \"properties\", propName],\n            });\n            if (parsedDef === undefined)\n                return acc;\n            return {\n                properties: { ...acc.properties, [propName]: parsedDef },\n                required: propDef.isOptional()\n                    ? acc.required\n                    : [...acc.required, propName],\n            };\n        }, { properties: {}, required: [] }),\n        additionalProperties: decideAdditionalProperties(def, refs),\n    };\n    if (!result.required.length)\n        delete result.required;\n    return result;\n}\nexport function parseObjectDef(def, refs) {\n    const result = {\n        type: \"object\",\n        ...Object.entries(def.shape()).reduce((acc, [propName, propDef]) => {\n            if (propDef === undefined || propDef._def === undefined)\n                return acc;\n            const parsedDef = parseDef(propDef._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"properties\", propName],\n                propertyPath: [...refs.currentPath, \"properties\", propName],\n            });\n            if (parsedDef === undefined)\n                return acc;\n            return {\n                properties: { ...acc.properties, [propName]: parsedDef },\n                required: propDef.isOptional()\n                    ? acc.required\n                    : [...acc.required, propName],\n            };\n        }, { properties: {}, required: [] }),\n        additionalProperties: decideAdditionalProperties(def, refs),\n    };\n    if (!result.required.length)\n        delete result.required;\n    return result;\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 5308, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5313, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/zod-to-json-schema/dist/esm/parsers/optional.js"],"sourcesContent":["import { parseDef } from \"../parseDef.js\";\nexport const parseOptionalDef = (def, refs) => {\n    if (refs.currentPath.toString() === refs.propertyPath?.toString()) {\n        return parseDef(def.innerType._def, refs);\n    }\n    const innerSchema = parseDef(def.innerType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"anyOf\", \"1\"],\n    });\n    return innerSchema\n        ? {\n            anyOf: [\n                {\n                    not: {},\n                },\n                innerSchema,\n            ],\n        }\n        : {};\n};\n"],"names":[],"mappings":";;;;;;AACO,MAAM,mBAAmB,CAAC,KAAK;IAClC,IAAI,KAAK,WAAW,CAAC,QAAQ,OAAO,KAAK,YAAY,EAAE,YAAY;QAC/D,OAAO,CAAA,GAAA,wKAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,SAAS,CAAC,IAAI,EAAE;IACxC;IACA,MAAM,cAAc,CAAA,GAAA,wKAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,SAAS,CAAC,IAAI,EAAE;QAC7C,GAAG,IAAI;QACP,aAAa;eAAI,KAAK,WAAW;YAAE;YAAS;SAAI;IACpD;IACA,OAAO,cACD;QACE,OAAO;YACH;gBACI,KAAK,CAAC;YACV;YACA;SACH;IACL,IACE,CAAC;AACX"}},
    {"offset": {"line": 5340, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5345, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/zod-to-json-schema/dist/esm/parsers/pipeline.js"],"sourcesContent":["import { parseDef } from \"../parseDef.js\";\nexport const parsePipelineDef = (def, refs) => {\n    if (refs.pipeStrategy === \"input\") {\n        return parseDef(def.in._def, refs);\n    }\n    else if (refs.pipeStrategy === \"output\") {\n        return parseDef(def.out._def, refs);\n    }\n    const a = parseDef(def.in._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"allOf\", \"0\"],\n    });\n    const b = parseDef(def.out._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"allOf\", a ? \"1\" : \"0\"],\n    });\n    return {\n        allOf: [a, b].filter((x) => x !== undefined),\n    };\n};\n"],"names":[],"mappings":";;;;;;AACO,MAAM,mBAAmB,CAAC,KAAK;IAClC,IAAI,KAAK,YAAY,KAAK,SAAS;QAC/B,OAAO,CAAA,GAAA,wKAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,EAAE,CAAC,IAAI,EAAE;IACjC,OACK,IAAI,KAAK,YAAY,KAAK,UAAU;QACrC,OAAO,CAAA,GAAA,wKAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,GAAG,CAAC,IAAI,EAAE;IAClC;IACA,MAAM,IAAI,CAAA,GAAA,wKAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,EAAE,CAAC,IAAI,EAAE;QAC5B,GAAG,IAAI;QACP,aAAa;eAAI,KAAK,WAAW;YAAE;YAAS;SAAI;IACpD;IACA,MAAM,IAAI,CAAA,GAAA,wKAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,GAAG,CAAC,IAAI,EAAE;QAC7B,GAAG,IAAI;QACP,aAAa;eAAI,KAAK,WAAW;YAAE;YAAS,IAAI,MAAM;SAAI;IAC9D;IACA,OAAO;QACH,OAAO;YAAC;YAAG;SAAE,CAAC,MAAM,CAAC,CAAC,IAAM,MAAM;IACtC;AACJ"}},
    {"offset": {"line": 5380, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5385, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/zod-to-json-schema/dist/esm/parsers/promise.js"],"sourcesContent":["import { parseDef } from \"../parseDef.js\";\nexport function parsePromiseDef(def, refs) {\n    return parseDef(def.type._def, refs);\n}\n"],"names":[],"mappings":";;;;;;AACO,SAAS,gBAAgB,GAAG,EAAE,IAAI;IACrC,OAAO,CAAA,GAAA,wKAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,IAAI,CAAC,IAAI,EAAE;AACnC"}},
    {"offset": {"line": 5394, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5399, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/zod-to-json-schema/dist/esm/parsers/set.js"],"sourcesContent":["import { setResponseValueAndErrors } from \"../errorMessages.js\";\nimport { parseDef } from \"../parseDef.js\";\nexport function parseSetDef(def, refs) {\n    const items = parseDef(def.valueType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"items\"],\n    });\n    const schema = {\n        type: \"array\",\n        uniqueItems: true,\n        items,\n    };\n    if (def.minSize) {\n        setResponseValueAndErrors(schema, \"minItems\", def.minSize.value, def.minSize.message, refs);\n    }\n    if (def.maxSize) {\n        setResponseValueAndErrors(schema, \"maxItems\", def.maxSize.value, def.maxSize.message, refs);\n    }\n    return schema;\n}\n"],"names":[],"mappings":";;;;;;;;AAEO,SAAS,YAAY,GAAG,EAAE,IAAI;IACjC,MAAM,QAAQ,CAAA,GAAA,wKAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,SAAS,CAAC,IAAI,EAAE;QACvC,GAAG,IAAI;QACP,aAAa;eAAI,KAAK,WAAW;YAAE;SAAQ;IAC/C;IACA,MAAM,SAAS;QACX,MAAM;QACN,aAAa;QACb;IACJ;IACA,IAAI,IAAI,OAAO,EAAE;QACb,CAAA,GAAA,6KAAA,CAAA,4BAAyB,AAAD,EAAE,QAAQ,YAAY,IAAI,OAAO,CAAC,KAAK,EAAE,IAAI,OAAO,CAAC,OAAO,EAAE;IAC1F;IACA,IAAI,IAAI,OAAO,EAAE;QACb,CAAA,GAAA,6KAAA,CAAA,4BAAyB,AAAD,EAAE,QAAQ,YAAY,IAAI,OAAO,CAAC,KAAK,EAAE,IAAI,OAAO,CAAC,OAAO,EAAE;IAC1F;IACA,OAAO;AACX"}},
    {"offset": {"line": 5428, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5433, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/zod-to-json-schema/dist/esm/parsers/tuple.js"],"sourcesContent":["import { parseDef } from \"../parseDef.js\";\nexport function parseTupleDef(def, refs) {\n    if (def.rest) {\n        return {\n            type: \"array\",\n            minItems: def.items.length,\n            items: def.items\n                .map((x, i) => parseDef(x._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"items\", `${i}`],\n            }))\n                .reduce((acc, x) => (x === undefined ? acc : [...acc, x]), []),\n            additionalItems: parseDef(def.rest._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"additionalItems\"],\n            }),\n        };\n    }\n    else {\n        return {\n            type: \"array\",\n            minItems: def.items.length,\n            maxItems: def.items.length,\n            items: def.items\n                .map((x, i) => parseDef(x._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"items\", `${i}`],\n            }))\n                .reduce((acc, x) => (x === undefined ? acc : [...acc, x]), []),\n        };\n    }\n}\n"],"names":[],"mappings":";;;;;;AACO,SAAS,cAAc,GAAG,EAAE,IAAI;IACnC,IAAI,IAAI,IAAI,EAAE;QACV,OAAO;YACH,MAAM;YACN,UAAU,IAAI,KAAK,CAAC,MAAM;YAC1B,OAAO,IAAI,KAAK,CACX,GAAG,CAAC,CAAC,GAAG,IAAM,CAAA,GAAA,wKAAA,CAAA,WAAQ,AAAD,EAAE,EAAE,IAAI,EAAE;oBAChC,GAAG,IAAI;oBACP,aAAa;2BAAI,KAAK,WAAW;wBAAE;wBAAS,CAAC,EAAE,EAAE,CAAC;qBAAC;gBACvD,IACK,MAAM,CAAC,CAAC,KAAK,IAAO,MAAM,YAAY,MAAM;uBAAI;oBAAK;iBAAE,EAAG,EAAE;YACjE,iBAAiB,CAAA,GAAA,wKAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,IAAI,CAAC,IAAI,EAAE;gBACrC,GAAG,IAAI;gBACP,aAAa;uBAAI,KAAK,WAAW;oBAAE;iBAAkB;YACzD;QACJ;IACJ,OACK;QACD,OAAO;YACH,MAAM;YACN,UAAU,IAAI,KAAK,CAAC,MAAM;YAC1B,UAAU,IAAI,KAAK,CAAC,MAAM;YAC1B,OAAO,IAAI,KAAK,CACX,GAAG,CAAC,CAAC,GAAG,IAAM,CAAA,GAAA,wKAAA,CAAA,WAAQ,AAAD,EAAE,EAAE,IAAI,EAAE;oBAChC,GAAG,IAAI;oBACP,aAAa;2BAAI,KAAK,WAAW;wBAAE;wBAAS,CAAC,EAAE,EAAE,CAAC;qBAAC;gBACvD,IACK,MAAM,CAAC,CAAC,KAAK,IAAO,MAAM,YAAY,MAAM;uBAAI;oBAAK;iBAAE,EAAG,EAAE;QACrE;IACJ;AACJ"}},
    {"offset": {"line": 5482, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5487, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/zod-to-json-schema/dist/esm/parsers/undefined.js"],"sourcesContent":["export function parseUndefinedDef() {\n    return {\n        not: {},\n    };\n}\n"],"names":[],"mappings":";;;AAAO,SAAS;IACZ,OAAO;QACH,KAAK,CAAC;IACV;AACJ"}},
    {"offset": {"line": 5495, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5500, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/zod-to-json-schema/dist/esm/parsers/unknown.js"],"sourcesContent":["export function parseUnknownDef() {\n    return {};\n}\n"],"names":[],"mappings":";;;AAAO,SAAS;IACZ,OAAO,CAAC;AACZ"}},
    {"offset": {"line": 5506, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5511, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/zod-to-json-schema/dist/esm/parsers/readonly.js"],"sourcesContent":["import { parseDef } from \"../parseDef.js\";\nexport const parseReadonlyDef = (def, refs) => {\n    return parseDef(def.innerType._def, refs);\n};\n"],"names":[],"mappings":";;;;;;AACO,MAAM,mBAAmB,CAAC,KAAK;IAClC,OAAO,CAAA,GAAA,wKAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,SAAS,CAAC,IAAI,EAAE;AACxC"}},
    {"offset": {"line": 5520, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5525, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/zod-to-json-schema/dist/esm/Options.js"],"sourcesContent":["export const ignoreOverride = Symbol(\"Let zodToJsonSchema decide on which parser to use\");\nexport const defaultOptions = {\n    name: undefined,\n    $refStrategy: \"root\",\n    basePath: [\"#\"],\n    effectStrategy: \"input\",\n    pipeStrategy: \"all\",\n    dateStrategy: \"format:date-time\",\n    mapStrategy: \"entries\",\n    removeAdditionalStrategy: \"passthrough\",\n    definitionPath: \"definitions\",\n    target: \"jsonSchema7\",\n    strictUnions: false,\n    definitions: {},\n    errorMessages: false,\n    markdownDescription: false,\n    patternStrategy: \"escape\",\n    applyRegexFlags: false,\n    emailStrategy: \"format:email\",\n    base64Strategy: \"contentEncoding:base64\",\n    nameStrategy: \"ref\"\n};\nexport const getDefaultOptions = (options) => (typeof options === \"string\"\n    ? {\n        ...defaultOptions,\n        name: options,\n    }\n    : {\n        ...defaultOptions,\n        ...options,\n    });\n"],"names":[],"mappings":";;;;;AAAO,MAAM,iBAAiB,OAAO;AAC9B,MAAM,iBAAiB;IAC1B,MAAM;IACN,cAAc;IACd,UAAU;QAAC;KAAI;IACf,gBAAgB;IAChB,cAAc;IACd,cAAc;IACd,aAAa;IACb,0BAA0B;IAC1B,gBAAgB;IAChB,QAAQ;IACR,cAAc;IACd,aAAa,CAAC;IACd,eAAe;IACf,qBAAqB;IACrB,iBAAiB;IACjB,iBAAiB;IACjB,eAAe;IACf,gBAAgB;IAChB,cAAc;AAClB;AACO,MAAM,oBAAoB,CAAC,UAAa,OAAO,YAAY,WAC5D;QACE,GAAG,cAAc;QACjB,MAAM;IACV,IACE;QACE,GAAG,cAAc;QACjB,GAAG,OAAO;IACd"}},
    {"offset": {"line": 5561, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5566, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/zod-to-json-schema/dist/esm/parseDef.js"],"sourcesContent":["import { ZodFirstPartyTypeKind } from \"zod\";\nimport { parseAnyDef } from \"./parsers/any.js\";\nimport { parseArrayDef } from \"./parsers/array.js\";\nimport { parseBigintDef } from \"./parsers/bigint.js\";\nimport { parseBooleanDef } from \"./parsers/boolean.js\";\nimport { parseBrandedDef } from \"./parsers/branded.js\";\nimport { parseCatchDef } from \"./parsers/catch.js\";\nimport { parseDateDef } from \"./parsers/date.js\";\nimport { parseDefaultDef } from \"./parsers/default.js\";\nimport { parseEffectsDef } from \"./parsers/effects.js\";\nimport { parseEnumDef } from \"./parsers/enum.js\";\nimport { parseIntersectionDef, } from \"./parsers/intersection.js\";\nimport { parseLiteralDef } from \"./parsers/literal.js\";\nimport { parseMapDef } from \"./parsers/map.js\";\nimport { parseNativeEnumDef, } from \"./parsers/nativeEnum.js\";\nimport { parseNeverDef } from \"./parsers/never.js\";\nimport { parseNullDef } from \"./parsers/null.js\";\nimport { parseNullableDef, } from \"./parsers/nullable.js\";\nimport { parseNumberDef } from \"./parsers/number.js\";\nimport { parseObjectDef } from \"./parsers/object.js\";\nimport { parseOptionalDef } from \"./parsers/optional.js\";\nimport { parsePipelineDef } from \"./parsers/pipeline.js\";\nimport { parsePromiseDef } from \"./parsers/promise.js\";\nimport { parseRecordDef } from \"./parsers/record.js\";\nimport { parseSetDef } from \"./parsers/set.js\";\nimport { parseStringDef } from \"./parsers/string.js\";\nimport { parseTupleDef } from \"./parsers/tuple.js\";\nimport { parseUndefinedDef, } from \"./parsers/undefined.js\";\nimport { parseUnionDef } from \"./parsers/union.js\";\nimport { parseUnknownDef } from \"./parsers/unknown.js\";\nimport { parseReadonlyDef } from \"./parsers/readonly.js\";\nimport { ignoreOverride } from \"./Options.js\";\nexport function parseDef(def, refs, forceResolution = false) {\n    const seenItem = refs.seen.get(def);\n    if (refs.override) {\n        const overrideResult = refs.override?.(def, refs, seenItem, forceResolution);\n        if (overrideResult !== ignoreOverride) {\n            return overrideResult;\n        }\n    }\n    if (seenItem && !forceResolution) {\n        const seenSchema = get$ref(seenItem, refs);\n        if (seenSchema !== undefined) {\n            return seenSchema;\n        }\n    }\n    const newItem = { def, path: refs.currentPath, jsonSchema: undefined };\n    refs.seen.set(def, newItem);\n    const jsonSchema = selectParser(def, def.typeName, refs);\n    if (jsonSchema) {\n        addMeta(def, refs, jsonSchema);\n    }\n    newItem.jsonSchema = jsonSchema;\n    return jsonSchema;\n}\nconst get$ref = (item, refs) => {\n    switch (refs.$refStrategy) {\n        case \"root\":\n            return { $ref: item.path.join(\"/\") };\n        case \"relative\":\n            return { $ref: getRelativePath(refs.currentPath, item.path) };\n        case \"none\":\n        case \"seen\": {\n            if (item.path.length < refs.currentPath.length &&\n                item.path.every((value, index) => refs.currentPath[index] === value)) {\n                console.warn(`Recursive reference detected at ${refs.currentPath.join(\"/\")}! Defaulting to any`);\n                return {};\n            }\n            return refs.$refStrategy === \"seen\" ? {} : undefined;\n        }\n    }\n};\nconst getRelativePath = (pathA, pathB) => {\n    let i = 0;\n    for (; i < pathA.length && i < pathB.length; i++) {\n        if (pathA[i] !== pathB[i])\n            break;\n    }\n    return [(pathA.length - i).toString(), ...pathB.slice(i)].join(\"/\");\n};\nconst selectParser = (def, typeName, refs) => {\n    switch (typeName) {\n        case ZodFirstPartyTypeKind.ZodString:\n            return parseStringDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodNumber:\n            return parseNumberDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodObject:\n            return parseObjectDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodBigInt:\n            return parseBigintDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodBoolean:\n            return parseBooleanDef();\n        case ZodFirstPartyTypeKind.ZodDate:\n            return parseDateDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodUndefined:\n            return parseUndefinedDef();\n        case ZodFirstPartyTypeKind.ZodNull:\n            return parseNullDef(refs);\n        case ZodFirstPartyTypeKind.ZodArray:\n            return parseArrayDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodUnion:\n        case ZodFirstPartyTypeKind.ZodDiscriminatedUnion:\n            return parseUnionDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodIntersection:\n            return parseIntersectionDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodTuple:\n            return parseTupleDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodRecord:\n            return parseRecordDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodLiteral:\n            return parseLiteralDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodEnum:\n            return parseEnumDef(def);\n        case ZodFirstPartyTypeKind.ZodNativeEnum:\n            return parseNativeEnumDef(def);\n        case ZodFirstPartyTypeKind.ZodNullable:\n            return parseNullableDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodOptional:\n            return parseOptionalDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodMap:\n            return parseMapDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodSet:\n            return parseSetDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodLazy:\n            return parseDef(def.getter()._def, refs);\n        case ZodFirstPartyTypeKind.ZodPromise:\n            return parsePromiseDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodNaN:\n        case ZodFirstPartyTypeKind.ZodNever:\n            return parseNeverDef();\n        case ZodFirstPartyTypeKind.ZodEffects:\n            return parseEffectsDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodAny:\n            return parseAnyDef();\n        case ZodFirstPartyTypeKind.ZodUnknown:\n            return parseUnknownDef();\n        case ZodFirstPartyTypeKind.ZodDefault:\n            return parseDefaultDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodBranded:\n            return parseBrandedDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodReadonly:\n            return parseReadonlyDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodCatch:\n            return parseCatchDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodPipeline:\n            return parsePipelineDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodFunction:\n        case ZodFirstPartyTypeKind.ZodVoid:\n        case ZodFirstPartyTypeKind.ZodSymbol:\n            return undefined;\n        default:\n            return ((_) => undefined)(typeName);\n    }\n};\nconst addMeta = (def, refs, jsonSchema) => {\n    if (def.description) {\n        jsonSchema.description = def.description;\n        if (refs.markdownDescription) {\n            jsonSchema.markdownDescription = def.description;\n        }\n    }\n    return jsonSchema;\n};\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 5775, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5780, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/zod-to-json-schema/dist/esm/Refs.js"],"sourcesContent":["import { getDefaultOptions } from \"./Options.js\";\nexport const getRefs = (options) => {\n    const _options = getDefaultOptions(options);\n    const currentPath = _options.name !== undefined\n        ? [..._options.basePath, _options.definitionPath, _options.name]\n        : _options.basePath;\n    return {\n        ..._options,\n        currentPath: currentPath,\n        propertyPath: undefined,\n        seen: new Map(Object.entries(_options.definitions).map(([name, def]) => [\n            def._def,\n            {\n                def: def._def,\n                path: [..._options.basePath, _options.definitionPath, name],\n                // Resolution of references will be forced even though seen, so it's ok that the schema is undefined here for now.\n                jsonSchema: undefined,\n            },\n        ])),\n    };\n};\n"],"names":[],"mappings":";;;;;;AACO,MAAM,UAAU,CAAC;IACpB,MAAM,WAAW,CAAA,GAAA,uKAAA,CAAA,oBAAiB,AAAD,EAAE;IACnC,MAAM,cAAc,SAAS,IAAI,KAAK,YAChC;WAAI,SAAS,QAAQ;QAAE,SAAS,cAAc;QAAE,SAAS,IAAI;KAAC,GAC9D,SAAS,QAAQ;IACvB,OAAO;QACH,GAAG,QAAQ;QACX,aAAa;QACb,cAAc;QACd,MAAM,IAAI,IAAI,OAAO,OAAO,CAAC,SAAS,WAAW,EAAE,GAAG,CAAC,CAAC,CAAC,MAAM,IAAI,GAAK;gBACpE,IAAI,IAAI;gBACR;oBACI,KAAK,IAAI,IAAI;oBACb,MAAM;2BAAI,SAAS,QAAQ;wBAAE,SAAS,cAAc;wBAAE;qBAAK;oBAC3D,kHAAkH;oBAClH,YAAY;gBAChB;aACH;IACL;AACJ"}},
    {"offset": {"line": 5812, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5817, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/zod-to-json-schema/dist/esm/zodToJsonSchema.js"],"sourcesContent":["import { parseDef } from \"./parseDef.js\";\nimport { getRefs } from \"./Refs.js\";\nconst zodToJsonSchema = (schema, options) => {\n    const refs = getRefs(options);\n    const definitions = typeof options === \"object\" && options.definitions\n        ? Object.entries(options.definitions).reduce((acc, [name, schema]) => ({\n            ...acc,\n            [name]: parseDef(schema._def, {\n                ...refs,\n                currentPath: [...refs.basePath, refs.definitionPath, name],\n            }, true) ?? {},\n        }), {})\n        : undefined;\n    const name = typeof options === \"string\"\n        ? options\n        : options?.nameStrategy === \"title\"\n            ? undefined\n            : options?.name;\n    const main = parseDef(schema._def, name === undefined\n        ? refs\n        : {\n            ...refs,\n            currentPath: [...refs.basePath, refs.definitionPath, name],\n        }, false) ?? {};\n    const title = typeof options === \"object\" &&\n        options.name !== undefined &&\n        options.nameStrategy === \"title\"\n        ? options.name\n        : undefined;\n    if (title !== undefined) {\n        main.title = title;\n    }\n    const combined = name === undefined\n        ? definitions\n            ? {\n                ...main,\n                [refs.definitionPath]: definitions,\n            }\n            : main\n        : {\n            $ref: [\n                ...(refs.$refStrategy === \"relative\" ? [] : refs.basePath),\n                refs.definitionPath,\n                name,\n            ].join(\"/\"),\n            [refs.definitionPath]: {\n                ...definitions,\n                [name]: main,\n            },\n        };\n    if (refs.target === \"jsonSchema7\") {\n        combined.$schema = \"http://json-schema.org/draft-07/schema#\";\n    }\n    else if (refs.target === \"jsonSchema2019-09\") {\n        combined.$schema = \"https://json-schema.org/draft/2019-09/schema#\";\n    }\n    return combined;\n};\nexport { zodToJsonSchema };\n"],"names":[],"mappings":";;;;;;;;AAEA,MAAM,kBAAkB,CAAC,QAAQ;IAC7B,MAAM,OAAO,CAAA,GAAA,oKAAA,CAAA,UAAO,AAAD,EAAE;IACrB,MAAM,cAAc,OAAO,YAAY,YAAY,QAAQ,WAAW,GAChE,OAAO,OAAO,CAAC,QAAQ,WAAW,EAAE,MAAM,CAAC,CAAC,KAAK,CAAC,MAAM,OAAO,GAAK,CAAC;YACnE,GAAG,GAAG;YACN,CAAC,KAAK,EAAE,CAAA,GAAA,wKAAA,CAAA,WAAQ,AAAD,EAAE,OAAO,IAAI,EAAE;gBAC1B,GAAG,IAAI;gBACP,aAAa;uBAAI,KAAK,QAAQ;oBAAE,KAAK,cAAc;oBAAE;iBAAK;YAC9D,GAAG,SAAS,CAAC;QACjB,CAAC,GAAG,CAAC,KACH;IACN,MAAM,OAAO,OAAO,YAAY,WAC1B,UACA,SAAS,iBAAiB,UACtB,YACA,SAAS;IACnB,MAAM,OAAO,CAAA,GAAA,wKAAA,CAAA,WAAQ,AAAD,EAAE,OAAO,IAAI,EAAE,SAAS,YACtC,OACA;QACE,GAAG,IAAI;QACP,aAAa;eAAI,KAAK,QAAQ;YAAE,KAAK,cAAc;YAAE;SAAK;IAC9D,GAAG,UAAU,CAAC;IAClB,MAAM,QAAQ,OAAO,YAAY,YAC7B,QAAQ,IAAI,KAAK,aACjB,QAAQ,YAAY,KAAK,UACvB,QAAQ,IAAI,GACZ;IACN,IAAI,UAAU,WAAW;QACrB,KAAK,KAAK,GAAG;IACjB;IACA,MAAM,WAAW,SAAS,YACpB,cACI;QACE,GAAG,IAAI;QACP,CAAC,KAAK,cAAc,CAAC,EAAE;IAC3B,IACE,OACJ;QACE,MAAM;eACE,KAAK,YAAY,KAAK,aAAa,EAAE,GAAG,KAAK,QAAQ;YACzD,KAAK,cAAc;YACnB;SACH,CAAC,IAAI,CAAC;QACP,CAAC,KAAK,cAAc,CAAC,EAAE;YACnB,GAAG,WAAW;YACd,CAAC,KAAK,EAAE;QACZ;IACJ;IACJ,IAAI,KAAK,MAAM,KAAK,eAAe;QAC/B,SAAS,OAAO,GAAG;IACvB,OACK,IAAI,KAAK,MAAM,KAAK,qBAAqB;QAC1C,SAAS,OAAO,GAAG;IACvB;IACA,OAAO;AACX"}},
    {"offset": {"line": 5873, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5878, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/zod-to-json-schema/dist/esm/index.js"],"sourcesContent":["export * from \"./Options.js\";\nexport * from \"./Refs.js\";\nexport * from \"./errorMessages.js\";\nexport * from \"./parseDef.js\";\nexport * from \"./parsers/any.js\";\nexport * from \"./parsers/array.js\";\nexport * from \"./parsers/bigint.js\";\nexport * from \"./parsers/boolean.js\";\nexport * from \"./parsers/branded.js\";\nexport * from \"./parsers/catch.js\";\nexport * from \"./parsers/date.js\";\nexport * from \"./parsers/default.js\";\nexport * from \"./parsers/effects.js\";\nexport * from \"./parsers/enum.js\";\nexport * from \"./parsers/intersection.js\";\nexport * from \"./parsers/literal.js\";\nexport * from \"./parsers/map.js\";\nexport * from \"./parsers/nativeEnum.js\";\nexport * from \"./parsers/never.js\";\nexport * from \"./parsers/null.js\";\nexport * from \"./parsers/nullable.js\";\nexport * from \"./parsers/number.js\";\nexport * from \"./parsers/object.js\";\nexport * from \"./parsers/optional.js\";\nexport * from \"./parsers/pipeline.js\";\nexport * from \"./parsers/promise.js\";\nexport * from \"./parsers/readonly.js\";\nexport * from \"./parsers/record.js\";\nexport * from \"./parsers/set.js\";\nexport * from \"./parsers/string.js\";\nexport * from \"./parsers/tuple.js\";\nexport * from \"./parsers/undefined.js\";\nexport * from \"./parsers/union.js\";\nexport * from \"./parsers/unknown.js\";\nexport * from \"./zodToJsonSchema.js\";\nimport { zodToJsonSchema } from \"./zodToJsonSchema.js\";\nexport default zodToJsonSchema;\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uCAoCe,+KAAA,CAAA,kBAAe"}},
    {"offset": {"line": 5920, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5925, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@ai-sdk/ui-utils/src/index.ts","/turbopack/[project]/node_modules/@ai-sdk/ui-utils/src/process-data-protocol-response.ts","/turbopack/[project]/node_modules/@ai-sdk/ui-utils/src/parse-partial-json.ts","/turbopack/[project]/node_modules/@ai-sdk/ui-utils/src/fix-json.ts","/turbopack/[project]/node_modules/@ai-sdk/ui-utils/src/stream-parts.ts","/turbopack/[project]/node_modules/@ai-sdk/ui-utils/src/read-data-stream.ts","/turbopack/[project]/node_modules/@ai-sdk/ui-utils/src/call-chat-api.ts","/turbopack/[project]/node_modules/@ai-sdk/ui-utils/src/call-completion-api.ts","/turbopack/[project]/node_modules/@ai-sdk/ui-utils/src/create-chunk-decoder.ts","/turbopack/[project]/node_modules/@ai-sdk/ui-utils/src/data-url.ts","/turbopack/[project]/node_modules/@ai-sdk/ui-utils/src/is-deep-equal-data.ts","/turbopack/[project]/node_modules/@ai-sdk/ui-utils/src/process-chat-stream.ts","/turbopack/[project]/node_modules/@ai-sdk/ui-utils/src/schema.ts"],"sourcesContent":["export * from './types';\n\nexport { generateId } from '@ai-sdk/provider-utils';\n\n// Export stream data utilities for custom stream implementations,\n// both on the client and server side.\n// NOTE: this is experimental / internal and may change without notice\nexport { callChatApi } from './call-chat-api';\nexport { callCompletionApi } from './call-completion-api';\nexport { createChunkDecoder } from './create-chunk-decoder';\nexport { getTextFromDataUrl } from './data-url';\nexport type { DeepPartial } from './deep-partial';\nexport { isDeepEqualData } from './is-deep-equal-data';\nexport { processDataProtocolResponse } from './process-data-protocol-response';\nexport { parsePartialJson } from './parse-partial-json';\nexport { processChatStream } from './process-chat-stream';\nexport { readDataStream } from './read-data-stream';\nexport { asSchema, jsonSchema, zodSchema } from './schema';\nexport type { Schema } from './schema';\nexport { formatStreamPart, parseStreamPart } from './stream-parts';\nexport type { StreamPart, StreamString } from './stream-parts';\n","import { generateId as generateIdFunction } from '@ai-sdk/provider-utils';\nimport { parsePartialJson } from './parse-partial-json';\nimport { readDataStream } from './read-data-stream';\nimport type {\n  FunctionCall,\n  JSONValue,\n  Message,\n  ToolCall,\n  UseChatOptions,\n} from './types';\nimport { LanguageModelV1FinishReason } from '@ai-sdk/provider';\n\ntype PrefixMap = {\n  text?: Message;\n  // @deprecated\n  function_call?: Message & {\n    role: 'assistant';\n    function_call: FunctionCall;\n  };\n  // @deprecated\n  tool_calls?: Message & {\n    role: 'assistant';\n    tool_calls: ToolCall[];\n  };\n};\n\nfunction assignAnnotationsToMessage<T extends Message | null | undefined>(\n  message: T,\n  annotations: JSONValue[] | undefined,\n): T {\n  if (!message || !annotations || !annotations.length) return message;\n  return { ...message, annotations: [...annotations] } as T;\n}\n\nexport async function processDataProtocolResponse({\n  reader,\n  abortControllerRef,\n  update,\n  onToolCall,\n  onFinish,\n  generateId = generateIdFunction,\n  getCurrentDate = () => new Date(),\n}: {\n  reader: ReadableStreamDefaultReader<Uint8Array>;\n  abortControllerRef?: {\n    current: AbortController | null;\n  };\n  update: (newMessages: Message[], data: JSONValue[] | undefined) => void;\n  onToolCall?: UseChatOptions['onToolCall'];\n  onFinish?: (options: {\n    message: Message | undefined;\n    finishReason: LanguageModelV1FinishReason;\n    usage: {\n      completionTokens: number;\n      promptTokens: number;\n      totalTokens: number;\n    };\n  }) => void;\n  generateId?: () => string;\n  getCurrentDate?: () => Date;\n}) {\n  const createdAt = getCurrentDate();\n\n  let prefixMap: PrefixMap = {};\n  let nextPrefixMap: PrefixMap | undefined = undefined;\n\n  const previousMessages: Message[] = [];\n\n  const data: JSONValue[] = [];\n\n  // keep list of current message annotations for message\n  let message_annotations: JSONValue[] | undefined = undefined;\n\n  // keep track of partial tool calls\n  const partialToolCalls: Record<\n    string,\n    { text: string; prefixMapIndex: number; toolName: string }\n  > = {};\n\n  let usage: {\n    completionTokens: number;\n    promptTokens: number;\n    totalTokens: number;\n  } = {\n    completionTokens: NaN,\n    promptTokens: NaN,\n    totalTokens: NaN,\n  };\n  let finishReason: LanguageModelV1FinishReason = 'unknown';\n\n  // we create a map of each prefix, and for each prefixed message we push to the map\n  for await (const { type, value } of readDataStream(reader, {\n    isAborted: () => abortControllerRef?.current === null,\n  })) {\n    if (type === 'error') {\n      throw new Error(value);\n    }\n\n    if (type === 'finish_step') {\n      if (!value.isContinued) {\n        nextPrefixMap = {};\n      }\n      continue;\n    }\n\n    if (type === 'finish_message') {\n      finishReason = value.finishReason;\n\n      if (value.usage != null) {\n        const { completionTokens, promptTokens } = value.usage;\n\n        usage = {\n          completionTokens,\n          promptTokens,\n          totalTokens: completionTokens + promptTokens,\n        };\n      }\n\n      continue;\n    }\n\n    if (nextPrefixMap) {\n      if (prefixMap.text) {\n        previousMessages.push(prefixMap.text);\n      }\n      if (prefixMap.function_call) {\n        previousMessages.push(prefixMap.function_call);\n      }\n      if (prefixMap.tool_calls) {\n        previousMessages.push(prefixMap.tool_calls);\n      }\n\n      prefixMap = nextPrefixMap;\n      nextPrefixMap = undefined;\n    }\n\n    if (type === 'text') {\n      if (prefixMap['text']) {\n        prefixMap['text'] = {\n          ...prefixMap['text'],\n          content: (prefixMap['text'].content || '') + value,\n        };\n      } else {\n        prefixMap['text'] = {\n          id: generateId(),\n          role: 'assistant',\n          content: value,\n          createdAt,\n        };\n      }\n    }\n\n    // Tool invocations are part of an assistant message\n    if (type === 'tool_call_streaming_start') {\n      // create message if it doesn't exist\n      if (prefixMap.text == null) {\n        prefixMap.text = {\n          id: generateId(),\n          role: 'assistant',\n          content: '',\n          createdAt,\n        };\n      }\n\n      if (prefixMap.text.toolInvocations == null) {\n        prefixMap.text.toolInvocations = [];\n      }\n\n      // add the partial tool call to the map\n      partialToolCalls[value.toolCallId] = {\n        text: '',\n        toolName: value.toolName,\n        prefixMapIndex: prefixMap.text.toolInvocations.length,\n      };\n\n      prefixMap.text.toolInvocations.push({\n        state: 'partial-call',\n        toolCallId: value.toolCallId,\n        toolName: value.toolName,\n        args: undefined,\n      });\n    } else if (type === 'tool_call_delta') {\n      const partialToolCall = partialToolCalls[value.toolCallId];\n\n      partialToolCall.text += value.argsTextDelta;\n\n      const { value: partialArgs } = parsePartialJson(partialToolCall.text);\n\n      prefixMap.text!.toolInvocations![partialToolCall.prefixMapIndex] = {\n        state: 'partial-call',\n        toolCallId: value.toolCallId,\n        toolName: partialToolCall.toolName,\n        args: partialArgs,\n      };\n\n      // trigger update for streaming by copying adding a update id that changes\n      // (without it, the changes get stuck in SWR and are not forwarded to rendering):\n      (prefixMap.text! as any).internalUpdateId = generateId();\n    } else if (type === 'tool_call') {\n      if (partialToolCalls[value.toolCallId] != null) {\n        // change the partial tool call to a full tool call\n        prefixMap.text!.toolInvocations![\n          partialToolCalls[value.toolCallId].prefixMapIndex\n        ] = { state: 'call', ...value };\n      } else {\n        // create message if it doesn't exist\n        if (prefixMap.text == null) {\n          prefixMap.text = {\n            id: generateId(),\n            role: 'assistant',\n            content: '',\n            createdAt,\n          };\n        }\n\n        if (prefixMap.text.toolInvocations == null) {\n          prefixMap.text.toolInvocations = [];\n        }\n\n        prefixMap.text.toolInvocations.push({\n          state: 'call',\n          ...value,\n        });\n      }\n\n      // trigger update for streaming by copying adding a update id that changes\n      // (without it, the changes get stuck in SWR and are not forwarded to rendering):\n      (prefixMap.text! as any).internalUpdateId = generateId();\n\n      // invoke the onToolCall callback if it exists. This is blocking.\n      // In the future we should make this non-blocking, which\n      // requires additional state management for error handling etc.\n      if (onToolCall) {\n        const result = await onToolCall({ toolCall: value });\n        if (result != null) {\n          // store the result in the tool invocation\n          prefixMap.text!.toolInvocations![\n            prefixMap.text!.toolInvocations!.length - 1\n          ] = { state: 'result', ...value, result };\n        }\n      }\n    } else if (type === 'tool_result') {\n      const toolInvocations = prefixMap.text?.toolInvocations;\n\n      if (toolInvocations == null) {\n        throw new Error('tool_result must be preceded by a tool_call');\n      }\n\n      // find if there is any tool invocation with the same toolCallId\n      // and replace it with the result\n      const toolInvocationIndex = toolInvocations.findIndex(\n        invocation => invocation.toolCallId === value.toolCallId,\n      );\n\n      if (toolInvocationIndex === -1) {\n        throw new Error(\n          'tool_result must be preceded by a tool_call with the same toolCallId',\n        );\n      }\n\n      toolInvocations[toolInvocationIndex] = {\n        ...toolInvocations[toolInvocationIndex],\n        state: 'result' as const,\n        ...value,\n      };\n    }\n\n    let functionCallMessage: Message | null | undefined = null;\n\n    if (type === 'function_call') {\n      prefixMap['function_call'] = {\n        id: generateId(),\n        role: 'assistant',\n        content: '',\n        function_call: value.function_call,\n        name: value.function_call.name,\n        createdAt,\n      };\n\n      functionCallMessage = prefixMap['function_call'];\n    }\n\n    let toolCallMessage: Message | null | undefined = null;\n\n    if (type === 'tool_calls') {\n      prefixMap['tool_calls'] = {\n        id: generateId(),\n        role: 'assistant',\n        content: '',\n        tool_calls: value.tool_calls,\n        createdAt,\n      };\n\n      toolCallMessage = prefixMap['tool_calls'];\n    }\n\n    if (type === 'data') {\n      data.push(...value);\n    }\n\n    let responseMessage = prefixMap['text'];\n\n    if (type === 'message_annotations') {\n      if (!message_annotations) {\n        message_annotations = [...value];\n      } else {\n        message_annotations.push(...value);\n      }\n\n      // Update any existing message with the latest annotations\n      functionCallMessage = assignAnnotationsToMessage(\n        prefixMap['function_call'],\n        message_annotations,\n      );\n      toolCallMessage = assignAnnotationsToMessage(\n        prefixMap['tool_calls'],\n        message_annotations,\n      );\n      responseMessage = assignAnnotationsToMessage(\n        prefixMap['text'],\n        message_annotations,\n      );\n    }\n\n    // keeps the prefixMap up to date with the latest annotations, even if annotations preceded the message\n    if (message_annotations?.length) {\n      if (prefixMap.text) {\n        prefixMap.text.annotations = [...message_annotations!];\n      }\n      if (prefixMap.function_call) {\n        prefixMap.function_call.annotations = [...message_annotations!];\n      }\n      if (prefixMap.tool_calls) {\n        prefixMap.tool_calls.annotations = [...message_annotations!];\n      }\n    }\n\n    // We add function & tool calls and response messages to the messages[], but data is its own thing\n    const merged = [functionCallMessage, toolCallMessage, responseMessage]\n      .filter(Boolean)\n      .map(message => ({\n        ...assignAnnotationsToMessage(message, message_annotations),\n      })) as Message[];\n\n    update([...previousMessages, ...merged], [...data]); // make a copy of the data array\n  }\n\n  onFinish?.({ message: prefixMap.text, finishReason, usage });\n\n  return {\n    messages: [\n      prefixMap.text,\n      prefixMap.function_call,\n      prefixMap.tool_calls,\n    ].filter(Boolean) as Message[],\n    data,\n  };\n}\n","import { JSONValue } from '@ai-sdk/provider';\nimport SecureJSON from 'secure-json-parse';\nimport { fixJson } from './fix-json';\n\nexport function parsePartialJson(jsonText: string | undefined): {\n  value: JSONValue | undefined;\n  state:\n    | 'undefined-input'\n    | 'successful-parse'\n    | 'repaired-parse'\n    | 'failed-parse';\n} {\n  if (jsonText === undefined) {\n    return { value: undefined, state: 'undefined-input' };\n  }\n\n  try {\n    // first attempt a regular JSON parse:\n    return {\n      value: SecureJSON.parse(jsonText),\n      state: 'successful-parse',\n    };\n  } catch (ignored) {\n    try {\n      // then try to fix the partial JSON and parse it:\n      return {\n        value: SecureJSON.parse(fixJson(jsonText)),\n        state: 'repaired-parse',\n      };\n    } catch (ignored) {\n      // ignored\n    }\n  }\n\n  return { value: undefined, state: 'failed-parse' };\n}\n","type State =\n  | 'ROOT'\n  | 'FINISH'\n  | 'INSIDE_STRING'\n  | 'INSIDE_STRING_ESCAPE'\n  | 'INSIDE_LITERAL'\n  | 'INSIDE_NUMBER'\n  | 'INSIDE_OBJECT_START'\n  | 'INSIDE_OBJECT_KEY'\n  | 'INSIDE_OBJECT_AFTER_KEY'\n  | 'INSIDE_OBJECT_BEFORE_VALUE'\n  | 'INSIDE_OBJECT_AFTER_VALUE'\n  | 'INSIDE_OBJECT_AFTER_COMMA'\n  | 'INSIDE_ARRAY_START'\n  | 'INSIDE_ARRAY_AFTER_VALUE'\n  | 'INSIDE_ARRAY_AFTER_COMMA';\n\n// Implemented as a scanner with additional fixing\n// that performs a single linear time scan pass over the partial JSON.\n//\n// The states should ideally match relevant states from the JSON spec:\n// https://www.json.org/json-en.html\n//\n// Please note that invalid JSON is not considered/covered, because it\n// is assumed that the resulting JSON will be processed by a standard\n// JSON parser that will detect any invalid JSON.\nexport function fixJson(input: string): string {\n  const stack: State[] = ['ROOT'];\n  let lastValidIndex = -1;\n  let literalStart: number | null = null;\n\n  function processValueStart(char: string, i: number, swapState: State) {\n    {\n      switch (char) {\n        case '\"': {\n          lastValidIndex = i;\n          stack.pop();\n          stack.push(swapState);\n          stack.push('INSIDE_STRING');\n          break;\n        }\n\n        case 'f':\n        case 't':\n        case 'n': {\n          lastValidIndex = i;\n          literalStart = i;\n          stack.pop();\n          stack.push(swapState);\n          stack.push('INSIDE_LITERAL');\n          break;\n        }\n\n        case '-': {\n          stack.pop();\n          stack.push(swapState);\n          stack.push('INSIDE_NUMBER');\n          break;\n        }\n        case '0':\n        case '1':\n        case '2':\n        case '3':\n        case '4':\n        case '5':\n        case '6':\n        case '7':\n        case '8':\n        case '9': {\n          lastValidIndex = i;\n          stack.pop();\n          stack.push(swapState);\n          stack.push('INSIDE_NUMBER');\n          break;\n        }\n\n        case '{': {\n          lastValidIndex = i;\n          stack.pop();\n          stack.push(swapState);\n          stack.push('INSIDE_OBJECT_START');\n          break;\n        }\n\n        case '[': {\n          lastValidIndex = i;\n          stack.pop();\n          stack.push(swapState);\n          stack.push('INSIDE_ARRAY_START');\n          break;\n        }\n      }\n    }\n  }\n\n  function processAfterObjectValue(char: string, i: number) {\n    switch (char) {\n      case ',': {\n        stack.pop();\n        stack.push('INSIDE_OBJECT_AFTER_COMMA');\n        break;\n      }\n      case '}': {\n        lastValidIndex = i;\n        stack.pop();\n        break;\n      }\n    }\n  }\n\n  function processAfterArrayValue(char: string, i: number) {\n    switch (char) {\n      case ',': {\n        stack.pop();\n        stack.push('INSIDE_ARRAY_AFTER_COMMA');\n        break;\n      }\n      case ']': {\n        lastValidIndex = i;\n        stack.pop();\n        break;\n      }\n    }\n  }\n\n  for (let i = 0; i < input.length; i++) {\n    const char = input[i];\n    const currentState = stack[stack.length - 1];\n\n    switch (currentState) {\n      case 'ROOT':\n        processValueStart(char, i, 'FINISH');\n        break;\n\n      case 'INSIDE_OBJECT_START': {\n        switch (char) {\n          case '\"': {\n            stack.pop();\n            stack.push('INSIDE_OBJECT_KEY');\n            break;\n          }\n          case '}': {\n            lastValidIndex = i;\n            stack.pop();\n            break;\n          }\n        }\n        break;\n      }\n\n      case 'INSIDE_OBJECT_AFTER_COMMA': {\n        switch (char) {\n          case '\"': {\n            stack.pop();\n            stack.push('INSIDE_OBJECT_KEY');\n            break;\n          }\n        }\n        break;\n      }\n\n      case 'INSIDE_OBJECT_KEY': {\n        switch (char) {\n          case '\"': {\n            stack.pop();\n            stack.push('INSIDE_OBJECT_AFTER_KEY');\n            break;\n          }\n        }\n        break;\n      }\n\n      case 'INSIDE_OBJECT_AFTER_KEY': {\n        switch (char) {\n          case ':': {\n            stack.pop();\n            stack.push('INSIDE_OBJECT_BEFORE_VALUE');\n\n            break;\n          }\n        }\n        break;\n      }\n\n      case 'INSIDE_OBJECT_BEFORE_VALUE': {\n        processValueStart(char, i, 'INSIDE_OBJECT_AFTER_VALUE');\n        break;\n      }\n\n      case 'INSIDE_OBJECT_AFTER_VALUE': {\n        processAfterObjectValue(char, i);\n        break;\n      }\n\n      case 'INSIDE_STRING': {\n        switch (char) {\n          case '\"': {\n            stack.pop();\n            lastValidIndex = i;\n            break;\n          }\n\n          case '\\\\': {\n            stack.push('INSIDE_STRING_ESCAPE');\n            break;\n          }\n\n          default: {\n            lastValidIndex = i;\n          }\n        }\n\n        break;\n      }\n\n      case 'INSIDE_ARRAY_START': {\n        switch (char) {\n          case ']': {\n            lastValidIndex = i;\n            stack.pop();\n            break;\n          }\n\n          default: {\n            lastValidIndex = i;\n            processValueStart(char, i, 'INSIDE_ARRAY_AFTER_VALUE');\n            break;\n          }\n        }\n        break;\n      }\n\n      case 'INSIDE_ARRAY_AFTER_VALUE': {\n        switch (char) {\n          case ',': {\n            stack.pop();\n            stack.push('INSIDE_ARRAY_AFTER_COMMA');\n            break;\n          }\n\n          case ']': {\n            lastValidIndex = i;\n            stack.pop();\n            break;\n          }\n\n          default: {\n            lastValidIndex = i;\n            break;\n          }\n        }\n\n        break;\n      }\n\n      case 'INSIDE_ARRAY_AFTER_COMMA': {\n        processValueStart(char, i, 'INSIDE_ARRAY_AFTER_VALUE');\n        break;\n      }\n\n      case 'INSIDE_STRING_ESCAPE': {\n        stack.pop();\n        lastValidIndex = i;\n\n        break;\n      }\n\n      case 'INSIDE_NUMBER': {\n        switch (char) {\n          case '0':\n          case '1':\n          case '2':\n          case '3':\n          case '4':\n          case '5':\n          case '6':\n          case '7':\n          case '8':\n          case '9': {\n            lastValidIndex = i;\n            break;\n          }\n\n          case 'e':\n          case 'E':\n          case '-':\n          case '.': {\n            break;\n          }\n\n          case ',': {\n            stack.pop();\n\n            if (stack[stack.length - 1] === 'INSIDE_ARRAY_AFTER_VALUE') {\n              processAfterArrayValue(char, i);\n            }\n\n            if (stack[stack.length - 1] === 'INSIDE_OBJECT_AFTER_VALUE') {\n              processAfterObjectValue(char, i);\n            }\n\n            break;\n          }\n\n          case '}': {\n            stack.pop();\n\n            if (stack[stack.length - 1] === 'INSIDE_OBJECT_AFTER_VALUE') {\n              processAfterObjectValue(char, i);\n            }\n\n            break;\n          }\n\n          case ']': {\n            stack.pop();\n\n            if (stack[stack.length - 1] === 'INSIDE_ARRAY_AFTER_VALUE') {\n              processAfterArrayValue(char, i);\n            }\n\n            break;\n          }\n\n          default: {\n            stack.pop();\n            break;\n          }\n        }\n\n        break;\n      }\n\n      case 'INSIDE_LITERAL': {\n        const partialLiteral = input.substring(literalStart!, i + 1);\n\n        if (\n          !'false'.startsWith(partialLiteral) &&\n          !'true'.startsWith(partialLiteral) &&\n          !'null'.startsWith(partialLiteral)\n        ) {\n          stack.pop();\n\n          if (stack[stack.length - 1] === 'INSIDE_OBJECT_AFTER_VALUE') {\n            processAfterObjectValue(char, i);\n          } else if (stack[stack.length - 1] === 'INSIDE_ARRAY_AFTER_VALUE') {\n            processAfterArrayValue(char, i);\n          }\n        } else {\n          lastValidIndex = i;\n        }\n\n        break;\n      }\n    }\n  }\n\n  let result = input.slice(0, lastValidIndex + 1);\n\n  for (let i = stack.length - 1; i >= 0; i--) {\n    const state = stack[i];\n\n    switch (state) {\n      case 'INSIDE_STRING': {\n        result += '\"';\n        break;\n      }\n\n      case 'INSIDE_OBJECT_KEY':\n      case 'INSIDE_OBJECT_AFTER_KEY':\n      case 'INSIDE_OBJECT_AFTER_COMMA':\n      case 'INSIDE_OBJECT_START':\n      case 'INSIDE_OBJECT_BEFORE_VALUE':\n      case 'INSIDE_OBJECT_AFTER_VALUE': {\n        result += '}';\n        break;\n      }\n\n      case 'INSIDE_ARRAY_START':\n      case 'INSIDE_ARRAY_AFTER_COMMA':\n      case 'INSIDE_ARRAY_AFTER_VALUE': {\n        result += ']';\n        break;\n      }\n\n      case 'INSIDE_LITERAL': {\n        const partialLiteral = input.substring(literalStart!, input.length);\n\n        if ('true'.startsWith(partialLiteral)) {\n          result += 'true'.slice(partialLiteral.length);\n        } else if ('false'.startsWith(partialLiteral)) {\n          result += 'false'.slice(partialLiteral.length);\n        } else if ('null'.startsWith(partialLiteral)) {\n          result += 'null'.slice(partialLiteral.length);\n        }\n      }\n    }\n  }\n\n  return result;\n}\n","import { LanguageModelV1FinishReason } from '@ai-sdk/provider';\nimport { ToolCall as CoreToolCall } from './duplicated/tool-call';\nimport { ToolResult as CoreToolResult } from './duplicated/tool-result';\nimport {\n  AssistantMessage,\n  DataMessage,\n  FunctionCall,\n  JSONValue,\n  ToolCall,\n} from './types';\n\nexport type StreamString =\n  `${(typeof StreamStringPrefixes)[keyof typeof StreamStringPrefixes]}:${string}\\n`;\n\nexport interface StreamPart<CODE extends string, NAME extends string, TYPE> {\n  code: CODE;\n  name: NAME;\n  parse: (value: JSONValue) => { type: NAME; value: TYPE };\n}\n\nconst textStreamPart: StreamPart<'0', 'text', string> = {\n  code: '0',\n  name: 'text',\n  parse: (value: JSONValue) => {\n    if (typeof value !== 'string') {\n      throw new Error('\"text\" parts expect a string value.');\n    }\n    return { type: 'text', value };\n  },\n};\n\nconst functionCallStreamPart: StreamPart<\n  '1',\n  'function_call',\n  { function_call: FunctionCall }\n> = {\n  code: '1',\n  name: 'function_call',\n  parse: (value: JSONValue) => {\n    if (\n      value == null ||\n      typeof value !== 'object' ||\n      !('function_call' in value) ||\n      typeof value.function_call !== 'object' ||\n      value.function_call == null ||\n      !('name' in value.function_call) ||\n      !('arguments' in value.function_call) ||\n      typeof value.function_call.name !== 'string' ||\n      typeof value.function_call.arguments !== 'string'\n    ) {\n      throw new Error(\n        '\"function_call\" parts expect an object with a \"function_call\" property.',\n      );\n    }\n\n    return {\n      type: 'function_call',\n      value: value as unknown as { function_call: FunctionCall },\n    };\n  },\n};\n\nconst dataStreamPart: StreamPart<'2', 'data', Array<JSONValue>> = {\n  code: '2',\n  name: 'data',\n  parse: (value: JSONValue) => {\n    if (!Array.isArray(value)) {\n      throw new Error('\"data\" parts expect an array value.');\n    }\n\n    return { type: 'data', value };\n  },\n};\n\nconst errorStreamPart: StreamPart<'3', 'error', string> = {\n  code: '3',\n  name: 'error',\n  parse: (value: JSONValue) => {\n    if (typeof value !== 'string') {\n      throw new Error('\"error\" parts expect a string value.');\n    }\n    return { type: 'error', value };\n  },\n};\n\nconst assistantMessageStreamPart: StreamPart<\n  '4',\n  'assistant_message',\n  AssistantMessage\n> = {\n  code: '4',\n  name: 'assistant_message',\n  parse: (value: JSONValue) => {\n    if (\n      value == null ||\n      typeof value !== 'object' ||\n      !('id' in value) ||\n      !('role' in value) ||\n      !('content' in value) ||\n      typeof value.id !== 'string' ||\n      typeof value.role !== 'string' ||\n      value.role !== 'assistant' ||\n      !Array.isArray(value.content) ||\n      !value.content.every(\n        item =>\n          item != null &&\n          typeof item === 'object' &&\n          'type' in item &&\n          item.type === 'text' &&\n          'text' in item &&\n          item.text != null &&\n          typeof item.text === 'object' &&\n          'value' in item.text &&\n          typeof item.text.value === 'string',\n      )\n    ) {\n      throw new Error(\n        '\"assistant_message\" parts expect an object with an \"id\", \"role\", and \"content\" property.',\n      );\n    }\n\n    return {\n      type: 'assistant_message',\n      value: value as AssistantMessage,\n    };\n  },\n};\n\nconst assistantControlDataStreamPart: StreamPart<\n  '5',\n  'assistant_control_data',\n  {\n    threadId: string;\n    messageId: string;\n  }\n> = {\n  code: '5',\n  name: 'assistant_control_data',\n  parse: (value: JSONValue) => {\n    if (\n      value == null ||\n      typeof value !== 'object' ||\n      !('threadId' in value) ||\n      !('messageId' in value) ||\n      typeof value.threadId !== 'string' ||\n      typeof value.messageId !== 'string'\n    ) {\n      throw new Error(\n        '\"assistant_control_data\" parts expect an object with a \"threadId\" and \"messageId\" property.',\n      );\n    }\n\n    return {\n      type: 'assistant_control_data',\n      value: {\n        threadId: value.threadId,\n        messageId: value.messageId,\n      },\n    };\n  },\n};\n\nconst dataMessageStreamPart: StreamPart<'6', 'data_message', DataMessage> = {\n  code: '6',\n  name: 'data_message',\n  parse: (value: JSONValue) => {\n    if (\n      value == null ||\n      typeof value !== 'object' ||\n      !('role' in value) ||\n      !('data' in value) ||\n      typeof value.role !== 'string' ||\n      value.role !== 'data'\n    ) {\n      throw new Error(\n        '\"data_message\" parts expect an object with a \"role\" and \"data\" property.',\n      );\n    }\n\n    return {\n      type: 'data_message',\n      value: value as DataMessage,\n    };\n  },\n};\n\nconst toolCallsStreamPart: StreamPart<\n  '7',\n  'tool_calls',\n  { tool_calls: ToolCall[] }\n> = {\n  code: '7',\n  name: 'tool_calls',\n  parse: (value: JSONValue) => {\n    if (\n      value == null ||\n      typeof value !== 'object' ||\n      !('tool_calls' in value) ||\n      typeof value.tool_calls !== 'object' ||\n      value.tool_calls == null ||\n      !Array.isArray(value.tool_calls) ||\n      value.tool_calls.some(\n        tc =>\n          tc == null ||\n          typeof tc !== 'object' ||\n          !('id' in tc) ||\n          typeof tc.id !== 'string' ||\n          !('type' in tc) ||\n          typeof tc.type !== 'string' ||\n          !('function' in tc) ||\n          tc.function == null ||\n          typeof tc.function !== 'object' ||\n          !('arguments' in tc.function) ||\n          typeof tc.function.name !== 'string' ||\n          typeof tc.function.arguments !== 'string',\n      )\n    ) {\n      throw new Error(\n        '\"tool_calls\" parts expect an object with a ToolCallPayload.',\n      );\n    }\n\n    return {\n      type: 'tool_calls',\n      value: value as unknown as { tool_calls: ToolCall[] },\n    };\n  },\n};\n\nconst messageAnnotationsStreamPart: StreamPart<\n  '8',\n  'message_annotations',\n  Array<JSONValue>\n> = {\n  code: '8',\n  name: 'message_annotations',\n  parse: (value: JSONValue) => {\n    if (!Array.isArray(value)) {\n      throw new Error('\"message_annotations\" parts expect an array value.');\n    }\n\n    return { type: 'message_annotations', value };\n  },\n};\n\nconst toolCallStreamPart: StreamPart<\n  '9',\n  'tool_call',\n  CoreToolCall<string, any>\n> = {\n  code: '9',\n  name: 'tool_call',\n  parse: (value: JSONValue) => {\n    if (\n      value == null ||\n      typeof value !== 'object' ||\n      !('toolCallId' in value) ||\n      typeof value.toolCallId !== 'string' ||\n      !('toolName' in value) ||\n      typeof value.toolName !== 'string' ||\n      !('args' in value) ||\n      typeof value.args !== 'object'\n    ) {\n      throw new Error(\n        '\"tool_call\" parts expect an object with a \"toolCallId\", \"toolName\", and \"args\" property.',\n      );\n    }\n\n    return {\n      type: 'tool_call',\n      value: value as unknown as CoreToolCall<string, any>,\n    };\n  },\n};\n\nconst toolResultStreamPart: StreamPart<\n  'a',\n  'tool_result',\n  Omit<CoreToolResult<string, any, any>, 'args' | 'toolName'>\n> = {\n  code: 'a',\n  name: 'tool_result',\n  parse: (value: JSONValue) => {\n    if (\n      value == null ||\n      typeof value !== 'object' ||\n      !('toolCallId' in value) ||\n      typeof value.toolCallId !== 'string' ||\n      !('result' in value)\n    ) {\n      throw new Error(\n        '\"tool_result\" parts expect an object with a \"toolCallId\" and a \"result\" property.',\n      );\n    }\n\n    return {\n      type: 'tool_result',\n      value: value as unknown as Omit<\n        CoreToolResult<string, any, any>,\n        'args' | 'toolName'\n      >,\n    };\n  },\n};\n\nconst toolCallStreamingStartStreamPart: StreamPart<\n  'b',\n  'tool_call_streaming_start',\n  { toolCallId: string; toolName: string }\n> = {\n  code: 'b',\n  name: 'tool_call_streaming_start',\n  parse: (value: JSONValue) => {\n    if (\n      value == null ||\n      typeof value !== 'object' ||\n      !('toolCallId' in value) ||\n      typeof value.toolCallId !== 'string' ||\n      !('toolName' in value) ||\n      typeof value.toolName !== 'string'\n    ) {\n      throw new Error(\n        '\"tool_call_streaming_start\" parts expect an object with a \"toolCallId\" and \"toolName\" property.',\n      );\n    }\n\n    return {\n      type: 'tool_call_streaming_start',\n      value: value as unknown as { toolCallId: string; toolName: string },\n    };\n  },\n};\n\nconst toolCallDeltaStreamPart: StreamPart<\n  'c',\n  'tool_call_delta',\n  { toolCallId: string; argsTextDelta: string }\n> = {\n  code: 'c',\n  name: 'tool_call_delta',\n  parse: (value: JSONValue) => {\n    if (\n      value == null ||\n      typeof value !== 'object' ||\n      !('toolCallId' in value) ||\n      typeof value.toolCallId !== 'string' ||\n      !('argsTextDelta' in value) ||\n      typeof value.argsTextDelta !== 'string'\n    ) {\n      throw new Error(\n        '\"tool_call_delta\" parts expect an object with a \"toolCallId\" and \"argsTextDelta\" property.',\n      );\n    }\n\n    return {\n      type: 'tool_call_delta',\n      value: value as unknown as {\n        toolCallId: string;\n        argsTextDelta: string;\n      },\n    };\n  },\n};\n\nconst finishMessageStreamPart: StreamPart<\n  'd',\n  'finish_message',\n  {\n    finishReason: LanguageModelV1FinishReason;\n    usage?: {\n      promptTokens: number;\n      completionTokens: number;\n    };\n  }\n> = {\n  code: 'd',\n  name: 'finish_message',\n  parse: (value: JSONValue) => {\n    if (\n      value == null ||\n      typeof value !== 'object' ||\n      !('finishReason' in value) ||\n      typeof value.finishReason !== 'string'\n    ) {\n      throw new Error(\n        '\"finish_message\" parts expect an object with a \"finishReason\" property.',\n      );\n    }\n\n    const result: {\n      finishReason: LanguageModelV1FinishReason;\n      usage?: {\n        promptTokens: number;\n        completionTokens: number;\n      };\n    } = {\n      finishReason: value.finishReason as LanguageModelV1FinishReason,\n    };\n\n    if (\n      'usage' in value &&\n      value.usage != null &&\n      typeof value.usage === 'object' &&\n      'promptTokens' in value.usage &&\n      'completionTokens' in value.usage\n    ) {\n      result.usage = {\n        promptTokens:\n          typeof value.usage.promptTokens === 'number'\n            ? value.usage.promptTokens\n            : Number.NaN,\n        completionTokens:\n          typeof value.usage.completionTokens === 'number'\n            ? value.usage.completionTokens\n            : Number.NaN,\n      };\n    }\n\n    return {\n      type: 'finish_message',\n      value: result,\n    };\n  },\n};\n\nconst finishStepStreamPart: StreamPart<\n  'e',\n  'finish_step',\n  {\n    isContinued: boolean;\n    finishReason: LanguageModelV1FinishReason;\n    usage?: {\n      promptTokens: number;\n      completionTokens: number;\n    };\n  }\n> = {\n  code: 'e',\n  name: 'finish_step',\n  parse: (value: JSONValue) => {\n    if (\n      value == null ||\n      typeof value !== 'object' ||\n      !('finishReason' in value) ||\n      typeof value.finishReason !== 'string'\n    ) {\n      throw new Error(\n        '\"finish_step\" parts expect an object with a \"finishReason\" property.',\n      );\n    }\n\n    const result: {\n      isContinued: boolean;\n      finishReason: LanguageModelV1FinishReason;\n      usage?: {\n        promptTokens: number;\n        completionTokens: number;\n      };\n    } = {\n      finishReason: value.finishReason as LanguageModelV1FinishReason,\n      isContinued: false,\n    };\n\n    if (\n      'usage' in value &&\n      value.usage != null &&\n      typeof value.usage === 'object' &&\n      'promptTokens' in value.usage &&\n      'completionTokens' in value.usage\n    ) {\n      result.usage = {\n        promptTokens:\n          typeof value.usage.promptTokens === 'number'\n            ? value.usage.promptTokens\n            : Number.NaN,\n        completionTokens:\n          typeof value.usage.completionTokens === 'number'\n            ? value.usage.completionTokens\n            : Number.NaN,\n      };\n    }\n\n    if ('isContinued' in value && typeof value.isContinued === 'boolean') {\n      result.isContinued = value.isContinued;\n    }\n\n    return {\n      type: 'finish_step',\n      value: result,\n    };\n  },\n};\n\nconst streamParts = [\n  textStreamPart,\n  functionCallStreamPart,\n  dataStreamPart,\n  errorStreamPart,\n  assistantMessageStreamPart,\n  assistantControlDataStreamPart,\n  dataMessageStreamPart,\n  toolCallsStreamPart,\n  messageAnnotationsStreamPart,\n  toolCallStreamPart,\n  toolResultStreamPart,\n  toolCallStreamingStartStreamPart,\n  toolCallDeltaStreamPart,\n  finishMessageStreamPart,\n  finishStepStreamPart,\n] as const;\n\n// union type of all stream parts\ntype StreamParts =\n  | typeof textStreamPart\n  | typeof functionCallStreamPart\n  | typeof dataStreamPart\n  | typeof errorStreamPart\n  | typeof assistantMessageStreamPart\n  | typeof assistantControlDataStreamPart\n  | typeof dataMessageStreamPart\n  | typeof toolCallsStreamPart\n  | typeof messageAnnotationsStreamPart\n  | typeof toolCallStreamPart\n  | typeof toolResultStreamPart\n  | typeof toolCallStreamingStartStreamPart\n  | typeof toolCallDeltaStreamPart\n  | typeof finishMessageStreamPart\n  | typeof finishStepStreamPart;\n\n/**\n * Maps the type of a stream part to its value type.\n */\ntype StreamPartValueType = {\n  [P in StreamParts as P['name']]: ReturnType<P['parse']>['value'];\n};\n\nexport type StreamPartType =\n  | ReturnType<typeof textStreamPart.parse>\n  | ReturnType<typeof functionCallStreamPart.parse>\n  | ReturnType<typeof dataStreamPart.parse>\n  | ReturnType<typeof errorStreamPart.parse>\n  | ReturnType<typeof assistantMessageStreamPart.parse>\n  | ReturnType<typeof assistantControlDataStreamPart.parse>\n  | ReturnType<typeof dataMessageStreamPart.parse>\n  | ReturnType<typeof toolCallsStreamPart.parse>\n  | ReturnType<typeof messageAnnotationsStreamPart.parse>\n  | ReturnType<typeof toolCallStreamPart.parse>\n  | ReturnType<typeof toolResultStreamPart.parse>\n  | ReturnType<typeof toolCallStreamingStartStreamPart.parse>\n  | ReturnType<typeof toolCallDeltaStreamPart.parse>\n  | ReturnType<typeof finishMessageStreamPart.parse>\n  | ReturnType<typeof finishStepStreamPart.parse>;\n\nexport const streamPartsByCode = {\n  [textStreamPart.code]: textStreamPart,\n  [functionCallStreamPart.code]: functionCallStreamPart,\n  [dataStreamPart.code]: dataStreamPart,\n  [errorStreamPart.code]: errorStreamPart,\n  [assistantMessageStreamPart.code]: assistantMessageStreamPart,\n  [assistantControlDataStreamPart.code]: assistantControlDataStreamPart,\n  [dataMessageStreamPart.code]: dataMessageStreamPart,\n  [toolCallsStreamPart.code]: toolCallsStreamPart,\n  [messageAnnotationsStreamPart.code]: messageAnnotationsStreamPart,\n  [toolCallStreamPart.code]: toolCallStreamPart,\n  [toolResultStreamPart.code]: toolResultStreamPart,\n  [toolCallStreamingStartStreamPart.code]: toolCallStreamingStartStreamPart,\n  [toolCallDeltaStreamPart.code]: toolCallDeltaStreamPart,\n  [finishMessageStreamPart.code]: finishMessageStreamPart,\n  [finishStepStreamPart.code]: finishStepStreamPart,\n} as const;\n\n/**\n * The map of prefixes for data in the stream\n *\n * - 0: Text from the LLM response\n * - 1: (OpenAI) function_call responses\n * - 2: custom JSON added by the user using `Data`\n * - 6: (OpenAI) tool_call responses\n *\n * Example:\n * ```\n * 0:Vercel\n * 0:'s\n * 0: AI\n * 0: AI\n * 0: SDK\n * 0: is great\n * 0:!\n * 2: { \"someJson\": \"value\" }\n * 1: {\"function_call\": {\"name\": \"get_current_weather\", \"arguments\": \"{\\\\n\\\\\"location\\\\\": \\\\\"Charlottesville, Virginia\\\\\",\\\\n\\\\\"format\\\\\": \\\\\"celsius\\\\\"\\\\n}\"}}\n * 6: {\"tool_call\": {\"id\": \"tool_0\", \"type\": \"function\", \"function\": {\"name\": \"get_current_weather\", \"arguments\": \"{\\\\n\\\\\"location\\\\\": \\\\\"Charlottesville, Virginia\\\\\",\\\\n\\\\\"format\\\\\": \\\\\"celsius\\\\\"\\\\n}\"}}}\n *```\n */\nexport const StreamStringPrefixes = {\n  [textStreamPart.name]: textStreamPart.code,\n  [functionCallStreamPart.name]: functionCallStreamPart.code,\n  [dataStreamPart.name]: dataStreamPart.code,\n  [errorStreamPart.name]: errorStreamPart.code,\n  [assistantMessageStreamPart.name]: assistantMessageStreamPart.code,\n  [assistantControlDataStreamPart.name]: assistantControlDataStreamPart.code,\n  [dataMessageStreamPart.name]: dataMessageStreamPart.code,\n  [toolCallsStreamPart.name]: toolCallsStreamPart.code,\n  [messageAnnotationsStreamPart.name]: messageAnnotationsStreamPart.code,\n  [toolCallStreamPart.name]: toolCallStreamPart.code,\n  [toolResultStreamPart.name]: toolResultStreamPart.code,\n  [toolCallStreamingStartStreamPart.name]:\n    toolCallStreamingStartStreamPart.code,\n  [toolCallDeltaStreamPart.name]: toolCallDeltaStreamPart.code,\n  [finishMessageStreamPart.name]: finishMessageStreamPart.code,\n  [finishStepStreamPart.name]: finishStepStreamPart.code,\n} as const;\n\nexport const validCodes = streamParts.map(part => part.code);\n\n/**\nParses a stream part from a string.\n\n@param line The string to parse.\n@returns The parsed stream part.\n@throws An error if the string cannot be parsed.\n */\nexport const parseStreamPart = (line: string): StreamPartType => {\n  const firstSeparatorIndex = line.indexOf(':');\n\n  if (firstSeparatorIndex === -1) {\n    throw new Error('Failed to parse stream string. No separator found.');\n  }\n\n  const prefix = line.slice(0, firstSeparatorIndex);\n\n  if (!validCodes.includes(prefix as keyof typeof streamPartsByCode)) {\n    throw new Error(`Failed to parse stream string. Invalid code ${prefix}.`);\n  }\n\n  const code = prefix as keyof typeof streamPartsByCode;\n\n  const textValue = line.slice(firstSeparatorIndex + 1);\n  const jsonValue: JSONValue = JSON.parse(textValue);\n\n  return streamPartsByCode[code].parse(jsonValue);\n};\n\n/**\nPrepends a string with a prefix from the `StreamChunkPrefixes`, JSON-ifies it,\nand appends a new line.\n\nIt ensures type-safety for the part type and value.\n */\nexport function formatStreamPart<T extends keyof StreamPartValueType>(\n  type: T,\n  value: StreamPartValueType[T],\n): StreamString {\n  const streamPart = streamParts.find(part => part.name === type);\n\n  if (!streamPart) {\n    throw new Error(`Invalid stream part type: ${type}`);\n  }\n\n  return `${streamPart.code}:${JSON.stringify(value)}\\n`;\n}\n","import { StreamPartType, parseStreamPart } from './stream-parts';\n\nconst NEWLINE = '\\n'.charCodeAt(0);\n\n// concatenates all the chunks into a single Uint8Array\nfunction concatChunks(chunks: Uint8Array[], totalLength: number) {\n  const concatenatedChunks = new Uint8Array(totalLength);\n\n  let offset = 0;\n  for (const chunk of chunks) {\n    concatenatedChunks.set(chunk, offset);\n    offset += chunk.length;\n  }\n  chunks.length = 0;\n\n  return concatenatedChunks;\n}\n\n/**\nConverts a ReadableStreamDefaultReader into an async generator that yields\nStreamPart objects.\n\n@param reader\n       Reader for the stream to read from.\n@param isAborted\n       Optional function that returns true if the request has been aborted.\n       If the function returns true, the generator will stop reading the stream.\n       If the function is not provided, the generator will not stop reading the stream.\n */\nexport async function* readDataStream(\n  reader: ReadableStreamDefaultReader<Uint8Array>,\n  {\n    isAborted,\n  }: {\n    isAborted?: () => boolean;\n  } = {},\n): AsyncGenerator<StreamPartType> {\n  // implementation note: this slightly more complex algorithm is required\n  // to pass the tests in the edge environment.\n\n  const decoder = new TextDecoder();\n  const chunks: Uint8Array[] = [];\n  let totalLength = 0;\n\n  while (true) {\n    const { value } = await reader.read();\n\n    if (value) {\n      chunks.push(value);\n      totalLength += value.length;\n      if (value[value.length - 1] !== NEWLINE) {\n        // if the last character is not a newline, we have not read the whole JSON value\n        continue;\n      }\n    }\n\n    if (chunks.length === 0) {\n      break; // we have reached the end of the stream\n    }\n\n    const concatenatedChunks = concatChunks(chunks, totalLength);\n    totalLength = 0;\n\n    const streamParts = decoder\n      .decode(concatenatedChunks, { stream: true })\n      .split('\\n')\n      .filter(line => line !== '') // splitting leaves an empty string at the end\n      .map(parseStreamPart);\n\n    for (const streamPart of streamParts) {\n      yield streamPart;\n    }\n\n    // The request has been aborted, stop reading the stream.\n    if (isAborted?.()) {\n      reader.cancel();\n      break;\n    }\n  }\n}\n","import { createChunkDecoder } from './index';\nimport { processDataProtocolResponse } from './process-data-protocol-response';\nimport { IdGenerator, JSONValue, Message, UseChatOptions } from './types';\n\n// use function to allow for mocking in tests:\nconst getOriginalFetch = () => fetch;\n\nexport async function callChatApi({\n  api,\n  body,\n  streamProtocol = 'data',\n  credentials,\n  headers,\n  abortController,\n  restoreMessagesOnFailure,\n  onResponse,\n  onUpdate,\n  onFinish,\n  onToolCall,\n  generateId,\n  fetch = getOriginalFetch(),\n}: {\n  api: string;\n  body: Record<string, any>;\n  streamProtocol: 'data' | 'text' | undefined;\n  credentials: RequestCredentials | undefined;\n  headers: HeadersInit | undefined;\n  abortController: (() => AbortController | null) | undefined;\n  restoreMessagesOnFailure: () => void;\n  onResponse: ((response: Response) => void | Promise<void>) | undefined;\n  onUpdate: (newMessages: Message[], data: JSONValue[] | undefined) => void;\n  onFinish: UseChatOptions['onFinish'];\n  onToolCall: UseChatOptions['onToolCall'];\n  generateId: IdGenerator;\n  fetch: ReturnType<typeof getOriginalFetch> | undefined;\n}) {\n  const response = await fetch(api, {\n    method: 'POST',\n    body: JSON.stringify(body),\n    headers: {\n      'Content-Type': 'application/json',\n      ...headers,\n    },\n    signal: abortController?.()?.signal,\n    credentials,\n  }).catch(err => {\n    restoreMessagesOnFailure();\n    throw err;\n  });\n\n  if (onResponse) {\n    try {\n      await onResponse(response);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  if (!response.ok) {\n    restoreMessagesOnFailure();\n    throw new Error(\n      (await response.text()) ?? 'Failed to fetch the chat response.',\n    );\n  }\n\n  if (!response.body) {\n    throw new Error('The response body is empty.');\n  }\n\n  const reader = response.body.getReader();\n\n  switch (streamProtocol) {\n    case 'text': {\n      const decoder = createChunkDecoder();\n\n      const resultMessage = {\n        id: generateId(),\n        createdAt: new Date(),\n        role: 'assistant' as const,\n        content: '',\n      };\n\n      while (true) {\n        const { done, value } = await reader.read();\n        if (done) {\n          break;\n        }\n\n        resultMessage.content += decoder(value);\n\n        // note: creating a new message object is required for Solid.js streaming\n        onUpdate([{ ...resultMessage }], []);\n\n        // The request has been aborted, stop reading the stream.\n        if (abortController?.() === null) {\n          reader.cancel();\n          break;\n        }\n      }\n\n      // in text mode, we don't have usage information or finish reason:\n      onFinish?.(resultMessage, {\n        usage: { completionTokens: NaN, promptTokens: NaN, totalTokens: NaN },\n        finishReason: 'unknown',\n      });\n\n      return {\n        messages: [resultMessage],\n        data: [],\n      };\n    }\n\n    case 'data': {\n      return await processDataProtocolResponse({\n        reader,\n        abortControllerRef:\n          abortController != null ? { current: abortController() } : undefined,\n        update: onUpdate,\n        onToolCall,\n        onFinish({ message, finishReason, usage }) {\n          if (onFinish && message != null) {\n            onFinish(message, { usage, finishReason });\n          }\n        },\n        generateId,\n      });\n    }\n\n    default: {\n      const exhaustiveCheck: never = streamProtocol;\n      throw new Error(`Unknown stream protocol: ${exhaustiveCheck}`);\n    }\n  }\n}\n","import { readDataStream } from './read-data-stream';\nimport { JSONValue } from './types';\nimport { createChunkDecoder } from './index';\n\n// use function to allow for mocking in tests:\nconst getOriginalFetch = () => fetch;\n\nexport async function callCompletionApi({\n  api,\n  prompt,\n  credentials,\n  headers,\n  body,\n  streamProtocol = 'data',\n  setCompletion,\n  setLoading,\n  setError,\n  setAbortController,\n  onResponse,\n  onFinish,\n  onError,\n  onData,\n  fetch = getOriginalFetch(),\n}: {\n  api: string;\n  prompt: string;\n  credentials: RequestCredentials | undefined;\n  headers: HeadersInit | undefined;\n  body: Record<string, any>;\n  streamProtocol: 'data' | 'text' | undefined;\n  setCompletion: (completion: string) => void;\n  setLoading: (loading: boolean) => void;\n  setError: (error: Error | undefined) => void;\n  setAbortController: (abortController: AbortController | null) => void;\n  onResponse: ((response: Response) => void | Promise<void>) | undefined;\n  onFinish: ((prompt: string, completion: string) => void) | undefined;\n  onError: ((error: Error) => void) | undefined;\n  onData: ((data: JSONValue[]) => void) | undefined;\n  fetch: ReturnType<typeof getOriginalFetch> | undefined;\n}) {\n  try {\n    setLoading(true);\n    setError(undefined);\n\n    const abortController = new AbortController();\n    setAbortController(abortController);\n\n    // Empty the completion immediately.\n    setCompletion('');\n\n    const res = await fetch(api, {\n      method: 'POST',\n      body: JSON.stringify({\n        prompt,\n        ...body,\n      }),\n      credentials,\n      headers: {\n        'Content-Type': 'application/json',\n        ...headers,\n      },\n      signal: abortController.signal,\n    }).catch(err => {\n      throw err;\n    });\n\n    if (onResponse) {\n      try {\n        await onResponse(res);\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    if (!res.ok) {\n      throw new Error(\n        (await res.text()) || 'Failed to fetch the chat response.',\n      );\n    }\n\n    if (!res.body) {\n      throw new Error('The response body is empty.');\n    }\n\n    let result = '';\n    const reader = res.body.getReader();\n\n    switch (streamProtocol) {\n      case 'text': {\n        const decoder = createChunkDecoder();\n\n        while (true) {\n          const { done, value } = await reader.read();\n          if (done) {\n            break;\n          }\n\n          // Update the completion state with the new message tokens.\n          result += decoder(value);\n          setCompletion(result);\n\n          // The request has been aborted, stop reading the stream.\n          if (abortController === null) {\n            reader.cancel();\n            break;\n          }\n        }\n\n        break;\n      }\n\n      case 'data': {\n        for await (const { type, value } of readDataStream(reader, {\n          isAborted: () => abortController === null,\n        })) {\n          switch (type) {\n            case 'text': {\n              result += value;\n              setCompletion(result);\n              break;\n            }\n            case 'data': {\n              onData?.(value);\n              break;\n            }\n          }\n        }\n        break;\n      }\n\n      default: {\n        const exhaustiveCheck: never = streamProtocol;\n        throw new Error(`Unknown stream protocol: ${exhaustiveCheck}`);\n      }\n    }\n\n    if (onFinish) {\n      onFinish(prompt, result);\n    }\n\n    setAbortController(null);\n    return result;\n  } catch (err) {\n    // Ignore abort errors as they are expected.\n    if ((err as any).name === 'AbortError') {\n      setAbortController(null);\n      return null;\n    }\n\n    if (err instanceof Error) {\n      if (onError) {\n        onError(err);\n      }\n    }\n\n    setError(err as Error);\n  } finally {\n    setLoading(false);\n  }\n}\n","import { StreamPartType, parseStreamPart } from './stream-parts';\n\n// simple decoder signatures:\nfunction createChunkDecoder(): (chunk: Uint8Array | undefined) => string;\nfunction createChunkDecoder(\n  complex: false,\n): (chunk: Uint8Array | undefined) => string;\n// complex decoder signature:\nfunction createChunkDecoder(\n  complex: true,\n): (chunk: Uint8Array | undefined) => StreamPartType[];\n// combined signature for when the client calls this function with a boolean:\nfunction createChunkDecoder(\n  complex?: boolean,\n): (chunk: Uint8Array | undefined) => StreamPartType[] | string;\nfunction createChunkDecoder(complex?: boolean) {\n  const decoder = new TextDecoder();\n\n  if (!complex) {\n    return function (chunk: Uint8Array | undefined): string {\n      if (!chunk) return '';\n      return decoder.decode(chunk, { stream: true });\n    };\n  }\n\n  return function (chunk: Uint8Array | undefined) {\n    const decoded = decoder\n      .decode(chunk, { stream: true })\n      .split('\\n')\n      .filter(line => line !== ''); // splitting leaves an empty string at the end\n\n    return decoded.map(parseStreamPart).filter(Boolean);\n  };\n}\n\nexport { createChunkDecoder };\n","/**\n * Converts a data URL of type text/* to a text string.\n */\nexport function getTextFromDataUrl(dataUrl: string): string {\n  const [header, base64Content] = dataUrl.split(',');\n  const mimeType = header.split(';')[0].split(':')[1];\n\n  if (mimeType == null || base64Content == null) {\n    throw new Error('Invalid data URL format');\n  }\n\n  try {\n    return window.atob(base64Content);\n  } catch (error) {\n    throw new Error(`Error decoding data URL`);\n  }\n}\n","/**\n * Performs a deep-equal comparison of two parsed JSON objects.\n *\n * @param {any} obj1 - The first object to compare.\n * @param {any} obj2 - The second object to compare.\n * @returns {boolean} - Returns true if the two objects are deeply equal, false otherwise.\n */\nexport function isDeepEqualData(obj1: any, obj2: any): boolean {\n  // Check for strict equality first\n  if (obj1 === obj2) return true;\n\n  // Check if either is null or undefined\n  if (obj1 == null || obj2 == null) return false;\n\n  // Check if both are objects\n  if (typeof obj1 !== 'object' && typeof obj2 !== 'object')\n    return obj1 === obj2;\n\n  // If they are not strictly equal, they both need to be Objects\n  if (obj1.constructor !== obj2.constructor) return false;\n\n  // Special handling for Date objects\n  if (obj1 instanceof Date && obj2 instanceof Date) {\n    return obj1.getTime() === obj2.getTime();\n  }\n\n  // Handle arrays: compare length and then perform a recursive deep comparison on each item\n  if (Array.isArray(obj1)) {\n    if (obj1.length !== obj2.length) return false;\n    for (let i = 0; i < obj1.length; i++) {\n      if (!isDeepEqualData(obj1[i], obj2[i])) return false;\n    }\n    return true; // All array elements matched\n  }\n\n  // Compare the set of keys in each object\n  const keys1 = Object.keys(obj1);\n  const keys2 = Object.keys(obj2);\n  if (keys1.length !== keys2.length) return false;\n\n  // Check each key-value pair recursively\n  for (const key of keys1) {\n    if (!keys2.includes(key)) return false;\n    if (!isDeepEqualData(obj1[key], obj2[key])) return false;\n  }\n\n  return true; // All keys and values matched\n}\n","import {\n  ChatRequest,\n  FunctionCall,\n  JSONValue,\n  Message,\n  ToolCall,\n} from './types';\n\nexport async function processChatStream({\n  getStreamedResponse,\n  experimental_onFunctionCall,\n  experimental_onToolCall,\n  updateChatRequest,\n  getCurrentMessages,\n}: {\n  getStreamedResponse: () => Promise<\n    Message | { messages: Message[]; data: JSONValue[] }\n  >;\n  experimental_onFunctionCall?: (\n    chatMessages: Message[],\n    functionCall: FunctionCall,\n  ) => Promise<void | ChatRequest>;\n  experimental_onToolCall?: (\n    chatMessages: Message[],\n    toolCalls: ToolCall[],\n  ) => Promise<void | ChatRequest>;\n  updateChatRequest: (chatRequest: ChatRequest) => void;\n  getCurrentMessages: () => Message[];\n}) {\n  while (true) {\n    // TODO-STREAMDATA: This should be {  const { messages: streamedResponseMessages, data } =\n    // await getStreamedResponse(} once Stream Data is not experimental\n    const messagesAndDataOrJustMessage = await getStreamedResponse();\n\n    // Using experimental stream data\n    if ('messages' in messagesAndDataOrJustMessage) {\n      let hasFollowingResponse = false;\n\n      for (const message of messagesAndDataOrJustMessage.messages) {\n        // See if the message has a complete function call or tool call\n        if (\n          (message.function_call === undefined ||\n            typeof message.function_call === 'string') &&\n          (message.tool_calls === undefined ||\n            typeof message.tool_calls === 'string')\n        ) {\n          continue;\n        }\n\n        hasFollowingResponse = true;\n        // Try to handle function call\n        if (experimental_onFunctionCall) {\n          const functionCall = message.function_call;\n          // Make sure functionCall is an object\n          // If not, we got tool calls instead of function calls\n          if (typeof functionCall !== 'object') {\n            console.warn(\n              'experimental_onFunctionCall should not be defined when using tools',\n            );\n            continue;\n          }\n\n          // User handles the function call in their own functionCallHandler.\n          // The \"arguments\" key of the function call object will still be a string which will have to be parsed in the function handler.\n          // If the \"arguments\" JSON is malformed due to model error the user will have to handle that themselves.\n\n          const functionCallResponse: ChatRequest | void =\n            await experimental_onFunctionCall(\n              getCurrentMessages(),\n              functionCall,\n            );\n\n          // If the user does not return anything as a result of the function call, the loop will break.\n          if (functionCallResponse === undefined) {\n            hasFollowingResponse = false;\n            break;\n          }\n\n          // A function call response was returned.\n          // The updated chat with function call response will be sent to the API in the next iteration of the loop.\n          updateChatRequest(functionCallResponse);\n        }\n        // Try to handle tool call\n        if (experimental_onToolCall) {\n          const toolCalls = message.tool_calls;\n          // Make sure toolCalls is an array of objects\n          // If not, we got function calls instead of tool calls\n          if (\n            !Array.isArray(toolCalls) ||\n            toolCalls.some(toolCall => typeof toolCall !== 'object')\n          ) {\n            console.warn(\n              'experimental_onToolCall should not be defined when using tools',\n            );\n            continue;\n          }\n\n          // User handles the function call in their own functionCallHandler.\n          // The \"arguments\" key of the function call object will still be a string which will have to be parsed in the function handler.\n          // If the \"arguments\" JSON is malformed due to model error the user will have to handle that themselves.\n          const toolCallResponse: ChatRequest | void =\n            await experimental_onToolCall(getCurrentMessages(), toolCalls);\n\n          // If the user does not return anything as a result of the function call, the loop will break.\n          if (toolCallResponse === undefined) {\n            hasFollowingResponse = false;\n            break;\n          }\n\n          // A function call response was returned.\n          // The updated chat with function call response will be sent to the API in the next iteration of the loop.\n          updateChatRequest(toolCallResponse);\n        }\n      }\n      if (!hasFollowingResponse) {\n        break;\n      }\n    } else {\n      const streamedResponseMessage = messagesAndDataOrJustMessage;\n\n      // TODO-STREAMDATA: Remove this once Stream Data is not experimental\n      if (\n        (streamedResponseMessage.function_call === undefined ||\n          typeof streamedResponseMessage.function_call === 'string') &&\n        (streamedResponseMessage.tool_calls === undefined ||\n          typeof streamedResponseMessage.tool_calls === 'string')\n      ) {\n        break;\n      }\n\n      // If we get here and are expecting a function call, the message should have one, if not warn and continue\n      if (experimental_onFunctionCall) {\n        const functionCall = streamedResponseMessage.function_call;\n        if (!(typeof functionCall === 'object')) {\n          console.warn(\n            'experimental_onFunctionCall should not be defined when using tools',\n          );\n          continue;\n        }\n        const functionCallResponse: ChatRequest | void =\n          await experimental_onFunctionCall(getCurrentMessages(), functionCall);\n\n        // If the user does not return anything as a result of the function call, the loop will break.\n        if (functionCallResponse === undefined) break;\n        // A function call response was returned.\n        // The updated chat with function call response will be sent to the API in the next iteration of the loop.\n        fixFunctionCallArguments(functionCallResponse);\n        updateChatRequest(functionCallResponse);\n      }\n      // If we get here and are expecting a tool call, the message should have one, if not warn and continue\n      if (experimental_onToolCall) {\n        const toolCalls = streamedResponseMessage.tool_calls;\n        if (!(typeof toolCalls === 'object')) {\n          console.warn(\n            'experimental_onToolCall should not be defined when using functions',\n          );\n          continue;\n        }\n        const toolCallResponse: ChatRequest | void =\n          await experimental_onToolCall(getCurrentMessages(), toolCalls);\n\n        // If the user does not return anything as a result of the function call, the loop will break.\n        if (toolCallResponse === undefined) break;\n        // A function call response was returned.\n        // The updated chat with function call response will be sent to the API in the next iteration of the loop.\n        fixFunctionCallArguments(toolCallResponse);\n        updateChatRequest(toolCallResponse);\n      }\n\n      // Make sure function call arguments are sent back to the API as a string\n      function fixFunctionCallArguments(response: ChatRequest) {\n        for (const message of response.messages) {\n          if (message.tool_calls !== undefined) {\n            for (const toolCall of message.tool_calls) {\n              if (typeof toolCall === 'object') {\n                if (\n                  toolCall.function.arguments &&\n                  typeof toolCall.function.arguments !== 'string'\n                ) {\n                  toolCall.function.arguments = JSON.stringify(\n                    toolCall.function.arguments,\n                  );\n                }\n              }\n            }\n          }\n          if (message.function_call !== undefined) {\n            if (typeof message.function_call === 'object') {\n              if (\n                message.function_call.arguments &&\n                typeof message.function_call.arguments !== 'string'\n              ) {\n                message.function_call.arguments = JSON.stringify(\n                  message.function_call.arguments,\n                );\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","import { Validator, validatorSymbol } from '@ai-sdk/provider-utils';\nimport { JSONSchema7 } from 'json-schema';\nimport { z } from 'zod';\nimport zodToJsonSchema from 'zod-to-json-schema';\n\n/**\n * Used to mark schemas so we can support both Zod and custom schemas.\n */\nconst schemaSymbol = Symbol.for('vercel.ai.schema');\n\nexport type Schema<OBJECT = unknown> = Validator<OBJECT> & {\n  /**\n   * Used to mark schemas so we can support both Zod and custom schemas.\n   */\n  [schemaSymbol]: true;\n\n  /**\n   * Schema type for inference.\n   */\n  _type: OBJECT;\n\n  /**\n   * The JSON Schema for the schema. It is passed to the providers.\n   */\n  readonly jsonSchema: JSONSchema7;\n};\n\n/**\n * Create a schema using a JSON Schema.\n *\n * @param jsonSchema The JSON Schema for the schema.\n * @param options.validate Optional. A validation function for the schema.\n */\nexport function jsonSchema<OBJECT = unknown>(\n  jsonSchema: JSONSchema7,\n  {\n    validate,\n  }: {\n    validate?: (\n      value: unknown,\n    ) => { success: true; value: OBJECT } | { success: false; error: Error };\n  } = {},\n): Schema<OBJECT> {\n  return {\n    [schemaSymbol]: true,\n    _type: undefined as OBJECT, // should never be used directly\n    [validatorSymbol]: true,\n    jsonSchema,\n    validate,\n  };\n}\n\nfunction isSchema(value: unknown): value is Schema {\n  return (\n    typeof value === 'object' &&\n    value !== null &&\n    schemaSymbol in value &&\n    value[schemaSymbol] === true &&\n    'jsonSchema' in value &&\n    'validate' in value\n  );\n}\n\nexport function asSchema<OBJECT>(\n  schema: z.Schema<OBJECT, z.ZodTypeDef, any> | Schema<OBJECT>,\n): Schema<OBJECT> {\n  return isSchema(schema) ? schema : zodSchema(schema);\n}\n\nexport function zodSchema<OBJECT>(\n  zodSchema: z.Schema<OBJECT, z.ZodTypeDef, any>,\n): Schema<OBJECT> {\n  return jsonSchema(\n    // we assume that zodToJsonSchema will return a valid JSONSchema7:\n    zodToJsonSchema(zodSchema) as JSONSchema7,\n    {\n      validate: value => {\n        const result = zodSchema.safeParse(value);\n        return result.success\n          ? { success: true, value: result.data }\n          : { success: false, error: result.error };\n      },\n    },\n  );\n}\n"],"names":["ignored","streamParts","generateId","fetch","getOriginalFetch","fixFunctionCallArguments","jsonSchema","zodSchema"],"mappings":"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"}},
    {"offset": {"line": 7311, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7316, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@ai-sdk/openai/src/openai-facade.ts","/turbopack/[project]/node_modules/@ai-sdk/openai/src/openai-chat-language-model.ts","/turbopack/[project]/node_modules/@ai-sdk/openai/src/convert-to-openai-chat-messages.ts","/turbopack/[project]/node_modules/@ai-sdk/openai/src/map-openai-chat-logprobs.ts","/turbopack/[project]/node_modules/@ai-sdk/openai/src/map-openai-finish-reason.ts","/turbopack/[project]/node_modules/@ai-sdk/openai/src/openai-error.ts","/turbopack/[project]/node_modules/@ai-sdk/openai/src/openai-completion-language-model.ts","/turbopack/[project]/node_modules/@ai-sdk/openai/src/convert-to-openai-completion-prompt.ts","/turbopack/[project]/node_modules/@ai-sdk/openai/src/map-openai-completion-logprobs.ts","/turbopack/[project]/node_modules/@ai-sdk/openai/src/openai-provider.ts","/turbopack/[project]/node_modules/@ai-sdk/openai/src/openai-embedding-model.ts"],"sourcesContent":["import { loadApiKey, withoutTrailingSlash } from '@ai-sdk/provider-utils';\nimport { OpenAIChatLanguageModel } from './openai-chat-language-model';\nimport { OpenAIChatModelId, OpenAIChatSettings } from './openai-chat-settings';\nimport { OpenAICompletionLanguageModel } from './openai-completion-language-model';\nimport {\n  OpenAICompletionModelId,\n  OpenAICompletionSettings,\n} from './openai-completion-settings';\nimport { OpenAIProviderSettings } from './openai-provider';\n\n/**\n@deprecated Use `createOpenAI` instead.\n */\nexport class OpenAI {\n  /**\nUse a different URL prefix for API calls, e.g. to use proxy servers.\nThe default prefix is `https://api.openai.com/v1`.\n   */\n  readonly baseURL: string;\n\n  /**\nAPI key that is being send using the `Authorization` header.\nIt defaults to the `OPENAI_API_KEY` environment variable.\n */\n  readonly apiKey?: string;\n\n  /**\nOpenAI Organization.\n   */\n  readonly organization?: string;\n\n  /**\nOpenAI project.\n   */\n  readonly project?: string;\n\n  /**\nCustom headers to include in the requests.\n   */\n  readonly headers?: Record<string, string>;\n\n  /**\n   * Creates a new OpenAI provider instance.\n   */\n  constructor(options: OpenAIProviderSettings = {}) {\n    this.baseURL =\n      withoutTrailingSlash(options.baseURL ?? options.baseUrl) ??\n      'https://api.openai.com/v1';\n    this.apiKey = options.apiKey;\n    this.organization = options.organization;\n    this.project = options.project;\n    this.headers = options.headers;\n  }\n\n  private get baseConfig() {\n    return {\n      organization: this.organization,\n      baseURL: this.baseURL,\n      headers: () => ({\n        Authorization: `Bearer ${loadApiKey({\n          apiKey: this.apiKey,\n          environmentVariableName: 'OPENAI_API_KEY',\n          description: 'OpenAI',\n        })}`,\n        'OpenAI-Organization': this.organization,\n        'OpenAI-Project': this.project,\n        ...this.headers,\n      }),\n    };\n  }\n\n  chat(modelId: OpenAIChatModelId, settings: OpenAIChatSettings = {}) {\n    return new OpenAIChatLanguageModel(modelId, settings, {\n      provider: 'openai.chat',\n      ...this.baseConfig,\n      compatibility: 'strict',\n      url: ({ path }) => `${this.baseURL}${path}`,\n    });\n  }\n\n  completion(\n    modelId: OpenAICompletionModelId,\n    settings: OpenAICompletionSettings = {},\n  ) {\n    return new OpenAICompletionLanguageModel(modelId, settings, {\n      provider: 'openai.completion',\n      ...this.baseConfig,\n      compatibility: 'strict',\n      url: ({ path }) => `${this.baseURL}${path}`,\n    });\n  }\n}\n","import {\n  InvalidResponseDataError,\n  LanguageModelV1,\n  LanguageModelV1FinishReason,\n  LanguageModelV1LogProbs,\n  LanguageModelV1StreamPart,\n  UnsupportedFunctionalityError,\n} from '@ai-sdk/provider';\nimport {\n  ParseResult,\n  combineHeaders,\n  createEventSourceResponseHandler,\n  createJsonResponseHandler,\n  generateId,\n  isParsableJson,\n  postJsonToApi,\n} from '@ai-sdk/provider-utils';\nimport { z } from 'zod';\nimport { convertToOpenAIChatMessages } from './convert-to-openai-chat-messages';\nimport { mapOpenAIChatLogProbsOutput } from './map-openai-chat-logprobs';\nimport { mapOpenAIFinishReason } from './map-openai-finish-reason';\nimport { OpenAIChatModelId, OpenAIChatSettings } from './openai-chat-settings';\nimport {\n  openAIErrorDataSchema,\n  openaiFailedResponseHandler,\n} from './openai-error';\n\ntype OpenAIChatConfig = {\n  provider: string;\n  compatibility: 'strict' | 'compatible';\n  headers: () => Record<string, string | undefined>;\n  url: (options: { modelId: string; path: string }) => string;\n  fetch?: typeof fetch;\n};\n\nexport class OpenAIChatLanguageModel implements LanguageModelV1 {\n  readonly specificationVersion = 'v1';\n  readonly defaultObjectGenerationMode = 'tool';\n\n  readonly modelId: OpenAIChatModelId;\n  readonly settings: OpenAIChatSettings;\n\n  private readonly config: OpenAIChatConfig;\n\n  constructor(\n    modelId: OpenAIChatModelId,\n    settings: OpenAIChatSettings,\n    config: OpenAIChatConfig,\n  ) {\n    this.modelId = modelId;\n    this.settings = settings;\n    this.config = config;\n  }\n\n  get provider(): string {\n    return this.config.provider;\n  }\n\n  private getArgs({\n    mode,\n    prompt,\n    maxTokens,\n    temperature,\n    topP,\n    frequencyPenalty,\n    presencePenalty,\n    seed,\n  }: Parameters<LanguageModelV1['doGenerate']>[0]) {\n    const type = mode.type;\n\n    const baseArgs = {\n      // model id:\n      model: this.modelId,\n\n      // model specific settings:\n      logit_bias: this.settings.logitBias,\n      logprobs:\n        this.settings.logprobs === true ||\n        typeof this.settings.logprobs === 'number'\n          ? true\n          : undefined,\n      top_logprobs:\n        typeof this.settings.logprobs === 'number'\n          ? this.settings.logprobs\n          : typeof this.settings.logprobs === 'boolean'\n          ? this.settings.logprobs\n            ? 0\n            : undefined\n          : undefined,\n      user: this.settings.user,\n      parallel_tool_calls: this.settings.parallelToolCalls,\n\n      // standardized settings:\n      max_tokens: maxTokens,\n      temperature,\n      top_p: topP,\n      frequency_penalty: frequencyPenalty,\n      presence_penalty: presencePenalty,\n      seed,\n\n      // messages:\n      messages: convertToOpenAIChatMessages(prompt),\n    };\n\n    switch (type) {\n      case 'regular': {\n        return { ...baseArgs, ...prepareToolsAndToolChoice(mode) };\n      }\n\n      case 'object-json': {\n        return {\n          ...baseArgs,\n          response_format: { type: 'json_object' },\n        };\n      }\n\n      case 'object-tool': {\n        return {\n          ...baseArgs,\n          tool_choice: { type: 'function', function: { name: mode.tool.name } },\n          tools: [\n            {\n              type: 'function',\n              function: {\n                name: mode.tool.name,\n                description: mode.tool.description,\n                parameters: mode.tool.parameters,\n              },\n            },\n          ],\n        };\n      }\n\n      case 'object-grammar': {\n        throw new UnsupportedFunctionalityError({\n          functionality: 'object-grammar mode',\n        });\n      }\n\n      default: {\n        const _exhaustiveCheck: never = type;\n        throw new Error(`Unsupported type: ${_exhaustiveCheck}`);\n      }\n    }\n  }\n\n  async doGenerate(\n    options: Parameters<LanguageModelV1['doGenerate']>[0],\n  ): Promise<Awaited<ReturnType<LanguageModelV1['doGenerate']>>> {\n    const args = this.getArgs(options);\n\n    const { responseHeaders, value: response } = await postJsonToApi({\n      url: this.config.url({\n        path: '/chat/completions',\n        modelId: this.modelId,\n      }),\n      headers: combineHeaders(this.config.headers(), options.headers),\n      body: args,\n      failedResponseHandler: openaiFailedResponseHandler,\n      successfulResponseHandler: createJsonResponseHandler(\n        openAIChatResponseSchema,\n      ),\n      abortSignal: options.abortSignal,\n      fetch: this.config.fetch,\n    });\n\n    const { messages: rawPrompt, ...rawSettings } = args;\n    const choice = response.choices[0];\n\n    return {\n      text: choice.message.content ?? undefined,\n      toolCalls: choice.message.tool_calls?.map(toolCall => ({\n        toolCallType: 'function',\n        toolCallId: toolCall.id ?? generateId(),\n        toolName: toolCall.function.name,\n        args: toolCall.function.arguments!,\n      })),\n      finishReason: mapOpenAIFinishReason(choice.finish_reason),\n      usage: {\n        promptTokens: response.usage.prompt_tokens,\n        completionTokens: response.usage.completion_tokens,\n      },\n      rawCall: { rawPrompt, rawSettings },\n      rawResponse: { headers: responseHeaders },\n      warnings: [],\n      logprobs: mapOpenAIChatLogProbsOutput(choice.logprobs),\n    };\n  }\n\n  async doStream(\n    options: Parameters<LanguageModelV1['doStream']>[0],\n  ): Promise<Awaited<ReturnType<LanguageModelV1['doStream']>>> {\n    const args = this.getArgs(options);\n\n    const { responseHeaders, value: response } = await postJsonToApi({\n      url: this.config.url({\n        path: '/chat/completions',\n        modelId: this.modelId,\n      }),\n      headers: combineHeaders(this.config.headers(), options.headers),\n      body: {\n        ...args,\n        stream: true,\n\n        // only include stream_options when in strict compatibility mode:\n        stream_options:\n          this.config.compatibility === 'strict'\n            ? { include_usage: true }\n            : undefined,\n      },\n      failedResponseHandler: openaiFailedResponseHandler,\n      successfulResponseHandler: createEventSourceResponseHandler(\n        openaiChatChunkSchema,\n      ),\n      abortSignal: options.abortSignal,\n      fetch: this.config.fetch,\n    });\n\n    const { messages: rawPrompt, ...rawSettings } = args;\n\n    const toolCalls: Array<{\n      id: string;\n      type: 'function';\n      function: {\n        name: string;\n        arguments: string;\n      };\n    }> = [];\n\n    let finishReason: LanguageModelV1FinishReason = 'other';\n    let usage: { promptTokens: number; completionTokens: number } = {\n      promptTokens: Number.NaN,\n      completionTokens: Number.NaN,\n    };\n    let logprobs: LanguageModelV1LogProbs;\n\n    return {\n      stream: response.pipeThrough(\n        new TransformStream<\n          ParseResult<z.infer<typeof openaiChatChunkSchema>>,\n          LanguageModelV1StreamPart\n        >({\n          transform(chunk, controller) {\n            // handle failed chunk parsing / validation:\n            if (!chunk.success) {\n              finishReason = 'error';\n              controller.enqueue({ type: 'error', error: chunk.error });\n              return;\n            }\n\n            const value = chunk.value;\n\n            // handle error chunks:\n            if ('error' in value) {\n              finishReason = 'error';\n              controller.enqueue({ type: 'error', error: value.error });\n              return;\n            }\n\n            if (value.usage != null) {\n              usage = {\n                promptTokens: value.usage.prompt_tokens,\n                completionTokens: value.usage.completion_tokens,\n              };\n            }\n\n            const choice = value.choices[0];\n\n            if (choice?.finish_reason != null) {\n              finishReason = mapOpenAIFinishReason(choice.finish_reason);\n            }\n\n            if (choice?.delta == null) {\n              return;\n            }\n\n            const delta = choice.delta;\n\n            if (delta.content != null) {\n              controller.enqueue({\n                type: 'text-delta',\n                textDelta: delta.content,\n              });\n            }\n\n            const mappedLogprobs = mapOpenAIChatLogProbsOutput(\n              choice?.logprobs,\n            );\n            if (mappedLogprobs?.length) {\n              if (logprobs === undefined) logprobs = [];\n              logprobs.push(...mappedLogprobs);\n            }\n\n            if (delta.tool_calls != null) {\n              for (const toolCallDelta of delta.tool_calls) {\n                const index = toolCallDelta.index;\n\n                // Tool call start. OpenAI returns all information except the arguments in the first chunk.\n                if (toolCalls[index] == null) {\n                  if (toolCallDelta.type !== 'function') {\n                    throw new InvalidResponseDataError({\n                      data: toolCallDelta,\n                      message: `Expected 'function' type.`,\n                    });\n                  }\n\n                  if (toolCallDelta.id == null) {\n                    throw new InvalidResponseDataError({\n                      data: toolCallDelta,\n                      message: `Expected 'id' to be a string.`,\n                    });\n                  }\n\n                  if (toolCallDelta.function?.name == null) {\n                    throw new InvalidResponseDataError({\n                      data: toolCallDelta,\n                      message: `Expected 'function.name' to be a string.`,\n                    });\n                  }\n\n                  toolCalls[index] = {\n                    id: toolCallDelta.id,\n                    type: 'function',\n                    function: {\n                      name: toolCallDelta.function.name,\n                      arguments: toolCallDelta.function.arguments ?? '',\n                    },\n                  };\n\n                  const toolCall = toolCalls[index];\n\n                  // check if tool call is complete (some providers send the full tool call in one chunk)\n                  if (\n                    toolCall.function?.name != null &&\n                    toolCall.function?.arguments != null &&\n                    isParsableJson(toolCall.function.arguments)\n                  ) {\n                    // send delta\n                    controller.enqueue({\n                      type: 'tool-call-delta',\n                      toolCallType: 'function',\n                      toolCallId: toolCall.id,\n                      toolName: toolCall.function.name,\n                      argsTextDelta: toolCall.function.arguments,\n                    });\n\n                    // send tool call\n                    controller.enqueue({\n                      type: 'tool-call',\n                      toolCallType: 'function',\n                      toolCallId: toolCall.id ?? generateId(),\n                      toolName: toolCall.function.name,\n                      args: toolCall.function.arguments,\n                    });\n                  }\n\n                  continue;\n                }\n\n                // existing tool call, merge\n                const toolCall = toolCalls[index];\n\n                if (toolCallDelta.function?.arguments != null) {\n                  toolCall.function!.arguments +=\n                    toolCallDelta.function?.arguments ?? '';\n                }\n\n                // send delta\n                controller.enqueue({\n                  type: 'tool-call-delta',\n                  toolCallType: 'function',\n                  toolCallId: toolCall.id,\n                  toolName: toolCall.function.name,\n                  argsTextDelta: toolCallDelta.function.arguments ?? '',\n                });\n\n                // check if tool call is complete\n                if (\n                  toolCall.function?.name != null &&\n                  toolCall.function?.arguments != null &&\n                  isParsableJson(toolCall.function.arguments)\n                ) {\n                  controller.enqueue({\n                    type: 'tool-call',\n                    toolCallType: 'function',\n                    toolCallId: toolCall.id ?? generateId(),\n                    toolName: toolCall.function.name,\n                    args: toolCall.function.arguments,\n                  });\n                }\n              }\n            }\n          },\n\n          flush(controller) {\n            controller.enqueue({\n              type: 'finish',\n              finishReason,\n              logprobs,\n              usage,\n            });\n          },\n        }),\n      ),\n      rawCall: { rawPrompt, rawSettings },\n      rawResponse: { headers: responseHeaders },\n      warnings: [],\n    };\n  }\n}\n\n// limited version of the schema, focussed on what is needed for the implementation\n// this approach limits breakages when the API changes and increases efficiency\nconst openAIChatResponseSchema = z.object({\n  choices: z.array(\n    z.object({\n      message: z.object({\n        role: z.literal('assistant'),\n        content: z.string().nullable().optional(),\n        tool_calls: z\n          .array(\n            z.object({\n              id: z.string().optional().nullable(),\n              type: z.literal('function'),\n              function: z.object({\n                name: z.string(),\n                arguments: z.string(),\n              }),\n            }),\n          )\n          .optional(),\n      }),\n      index: z.number(),\n      logprobs: z\n        .object({\n          content: z\n            .array(\n              z.object({\n                token: z.string(),\n                logprob: z.number(),\n                top_logprobs: z.array(\n                  z.object({\n                    token: z.string(),\n                    logprob: z.number(),\n                  }),\n                ),\n              }),\n            )\n            .nullable(),\n        })\n        .nullable()\n        .optional(),\n      finish_reason: z.string().optional().nullable(),\n    }),\n  ),\n  usage: z.object({\n    prompt_tokens: z.number(),\n    completion_tokens: z.number(),\n  }),\n});\n\n// limited version of the schema, focussed on what is needed for the implementation\n// this approach limits breakages when the API changes and increases efficiency\nconst openaiChatChunkSchema = z.union([\n  z.object({\n    choices: z.array(\n      z.object({\n        delta: z\n          .object({\n            role: z.enum(['assistant']).optional(),\n            content: z.string().nullish(),\n            tool_calls: z\n              .array(\n                z.object({\n                  index: z.number(),\n                  id: z.string().nullish(),\n                  type: z.literal('function').optional(),\n                  function: z.object({\n                    name: z.string().nullish(),\n                    arguments: z.string().nullish(),\n                  }),\n                }),\n              )\n              .nullish(),\n          })\n          .nullish(),\n        logprobs: z\n          .object({\n            content: z\n              .array(\n                z.object({\n                  token: z.string(),\n                  logprob: z.number(),\n                  top_logprobs: z.array(\n                    z.object({\n                      token: z.string(),\n                      logprob: z.number(),\n                    }),\n                  ),\n                }),\n              )\n              .nullable(),\n          })\n          .nullish(),\n        finish_reason: z.string().nullable().optional(),\n        index: z.number(),\n      }),\n    ),\n    usage: z\n      .object({\n        prompt_tokens: z.number(),\n        completion_tokens: z.number(),\n      })\n      .nullish(),\n  }),\n  openAIErrorDataSchema,\n]);\n\nfunction prepareToolsAndToolChoice(\n  mode: Parameters<LanguageModelV1['doGenerate']>[0]['mode'] & {\n    type: 'regular';\n  },\n) {\n  // when the tools array is empty, change it to undefined to prevent errors:\n  const tools = mode.tools?.length ? mode.tools : undefined;\n\n  if (tools == null) {\n    return { tools: undefined, tool_choice: undefined };\n  }\n\n  const mappedTools = tools.map(tool => ({\n    type: 'function',\n    function: {\n      name: tool.name,\n      description: tool.description,\n      parameters: tool.parameters,\n    },\n  }));\n\n  const toolChoice = mode.toolChoice;\n\n  if (toolChoice == null) {\n    return { tools: mappedTools, tool_choice: undefined };\n  }\n\n  const type = toolChoice.type;\n\n  switch (type) {\n    case 'auto':\n    case 'none':\n    case 'required':\n      return { tools: mappedTools, tool_choice: type };\n    case 'tool':\n      return {\n        tools: mappedTools,\n        tool_choice: {\n          type: 'function',\n          function: {\n            name: toolChoice.toolName,\n          },\n        },\n      };\n    default: {\n      const _exhaustiveCheck: never = type;\n      throw new Error(`Unsupported tool choice type: ${_exhaustiveCheck}`);\n    }\n  }\n}\n","import { LanguageModelV1Prompt } from '@ai-sdk/provider';\nimport { convertUint8ArrayToBase64 } from '@ai-sdk/provider-utils';\nimport { OpenAIChatPrompt } from './openai-chat-prompt';\n\nexport function convertToOpenAIChatMessages(\n  prompt: LanguageModelV1Prompt,\n): OpenAIChatPrompt {\n  const messages: OpenAIChatPrompt = [];\n\n  for (const { role, content } of prompt) {\n    switch (role) {\n      case 'system': {\n        messages.push({ role: 'system', content });\n        break;\n      }\n\n      case 'user': {\n        if (content.length === 1 && content[0].type === 'text') {\n          messages.push({ role: 'user', content: content[0].text });\n          break;\n        }\n\n        messages.push({\n          role: 'user',\n          content: content.map(part => {\n            switch (part.type) {\n              case 'text': {\n                return { type: 'text', text: part.text };\n              }\n              case 'image': {\n                return {\n                  type: 'image_url',\n                  image_url: {\n                    url:\n                      part.image instanceof URL\n                        ? part.image.toString()\n                        : `data:${\n                            part.mimeType ?? 'image/jpeg'\n                          };base64,${convertUint8ArrayToBase64(part.image)}`,\n                  },\n                };\n              }\n            }\n          }),\n        });\n\n        break;\n      }\n\n      case 'assistant': {\n        let text = '';\n        const toolCalls: Array<{\n          id: string;\n          type: 'function';\n          function: { name: string; arguments: string };\n        }> = [];\n\n        for (const part of content) {\n          switch (part.type) {\n            case 'text': {\n              text += part.text;\n              break;\n            }\n            case 'tool-call': {\n              toolCalls.push({\n                id: part.toolCallId,\n                type: 'function',\n                function: {\n                  name: part.toolName,\n                  arguments: JSON.stringify(part.args),\n                },\n              });\n              break;\n            }\n            default: {\n              const _exhaustiveCheck: never = part;\n              throw new Error(`Unsupported part: ${_exhaustiveCheck}`);\n            }\n          }\n        }\n\n        messages.push({\n          role: 'assistant',\n          content: text,\n          tool_calls: toolCalls.length > 0 ? toolCalls : undefined,\n        });\n\n        break;\n      }\n\n      case 'tool': {\n        for (const toolResponse of content) {\n          messages.push({\n            role: 'tool',\n            tool_call_id: toolResponse.toolCallId,\n            content: JSON.stringify(toolResponse.result),\n          });\n        }\n        break;\n      }\n\n      default: {\n        const _exhaustiveCheck: never = role;\n        throw new Error(`Unsupported role: ${_exhaustiveCheck}`);\n      }\n    }\n  }\n\n  return messages;\n}\n","import { LanguageModelV1LogProbs } from '@ai-sdk/provider';\n\ntype OpenAIChatLogProbs = {\n  content:\n    | {\n        token: string;\n        logprob: number;\n        top_logprobs:\n          | {\n              token: string;\n              logprob: number;\n            }[]\n          | null;\n      }[]\n    | null;\n};\n\nexport function mapOpenAIChatLogProbsOutput(\n  logprobs: OpenAIChatLogProbs | null | undefined,\n): LanguageModelV1LogProbs | undefined {\n  return (\n    logprobs?.content?.map(({ token, logprob, top_logprobs }) => ({\n      token,\n      logprob,\n      topLogprobs: top_logprobs\n        ? top_logprobs.map(({ token, logprob }) => ({\n            token,\n            logprob,\n          }))\n        : [],\n    })) ?? undefined\n  );\n}\n","import { LanguageModelV1FinishReason } from '@ai-sdk/provider';\n\nexport function mapOpenAIFinishReason(\n  finishReason: string | null | undefined,\n): LanguageModelV1FinishReason {\n  switch (finishReason) {\n    case 'stop':\n      return 'stop';\n    case 'length':\n      return 'length';\n    case 'content_filter':\n      return 'content-filter';\n    case 'function_call':\n    case 'tool_calls':\n      return 'tool-calls';\n    default:\n      return 'unknown';\n  }\n}\n","import { z } from 'zod';\nimport { createJsonErrorResponseHandler } from '@ai-sdk/provider-utils';\n\nexport const openAIErrorDataSchema = z.object({\n  error: z.object({\n    message: z.string(),\n    type: z.string(),\n    param: z.any().nullable(),\n    code: z.string().nullable(),\n  }),\n});\n\nexport type OpenAIErrorData = z.infer<typeof openAIErrorDataSchema>;\n\nexport const openaiFailedResponseHandler = createJsonErrorResponseHandler({\n  errorSchema: openAIErrorDataSchema,\n  errorToMessage: data => data.error.message,\n});\n","import {\n  LanguageModelV1,\n  LanguageModelV1FinishReason,\n  LanguageModelV1LogProbs,\n  LanguageModelV1StreamPart,\n  UnsupportedFunctionalityError,\n} from '@ai-sdk/provider';\nimport {\n  ParseResult,\n  combineHeaders,\n  createEventSourceResponseHandler,\n  createJsonResponseHandler,\n  postJsonToApi,\n} from '@ai-sdk/provider-utils';\nimport { z } from 'zod';\nimport { convertToOpenAICompletionPrompt } from './convert-to-openai-completion-prompt';\nimport { mapOpenAICompletionLogProbs } from './map-openai-completion-logprobs';\nimport { mapOpenAIFinishReason } from './map-openai-finish-reason';\nimport {\n  OpenAICompletionModelId,\n  OpenAICompletionSettings,\n} from './openai-completion-settings';\nimport {\n  openAIErrorDataSchema,\n  openaiFailedResponseHandler,\n} from './openai-error';\n\ntype OpenAICompletionConfig = {\n  provider: string;\n  compatibility: 'strict' | 'compatible';\n  headers: () => Record<string, string | undefined>;\n  url: (options: { modelId: string; path: string }) => string;\n  fetch?: typeof fetch;\n};\n\nexport class OpenAICompletionLanguageModel implements LanguageModelV1 {\n  readonly specificationVersion = 'v1';\n  readonly defaultObjectGenerationMode = undefined;\n\n  readonly modelId: OpenAICompletionModelId;\n  readonly settings: OpenAICompletionSettings;\n\n  private readonly config: OpenAICompletionConfig;\n\n  constructor(\n    modelId: OpenAICompletionModelId,\n    settings: OpenAICompletionSettings,\n    config: OpenAICompletionConfig,\n  ) {\n    this.modelId = modelId;\n    this.settings = settings;\n    this.config = config;\n  }\n\n  get provider(): string {\n    return this.config.provider;\n  }\n\n  private getArgs({\n    mode,\n    inputFormat,\n    prompt,\n    maxTokens,\n    temperature,\n    topP,\n    frequencyPenalty,\n    presencePenalty,\n    seed,\n  }: Parameters<LanguageModelV1['doGenerate']>[0]) {\n    const type = mode.type;\n\n    const { prompt: completionPrompt, stopSequences } =\n      convertToOpenAICompletionPrompt({ prompt, inputFormat });\n\n    const baseArgs = {\n      // model id:\n      model: this.modelId,\n\n      // model specific settings:\n      echo: this.settings.echo,\n      logit_bias: this.settings.logitBias,\n      logprobs:\n        typeof this.settings.logprobs === 'number'\n          ? this.settings.logprobs\n          : typeof this.settings.logprobs === 'boolean'\n          ? this.settings.logprobs\n            ? 0\n            : undefined\n          : undefined,\n      suffix: this.settings.suffix,\n      user: this.settings.user,\n\n      // standardized settings:\n      max_tokens: maxTokens,\n      temperature,\n      top_p: topP,\n      frequency_penalty: frequencyPenalty,\n      presence_penalty: presencePenalty,\n      seed,\n\n      // prompt:\n      prompt: completionPrompt,\n\n      // stop sequences:\n      stop: stopSequences,\n    };\n\n    switch (type) {\n      case 'regular': {\n        if (mode.tools?.length) {\n          throw new UnsupportedFunctionalityError({\n            functionality: 'tools',\n          });\n        }\n\n        if (mode.toolChoice) {\n          throw new UnsupportedFunctionalityError({\n            functionality: 'toolChoice',\n          });\n        }\n\n        return baseArgs;\n      }\n\n      case 'object-json': {\n        throw new UnsupportedFunctionalityError({\n          functionality: 'object-json mode',\n        });\n      }\n\n      case 'object-tool': {\n        throw new UnsupportedFunctionalityError({\n          functionality: 'object-tool mode',\n        });\n      }\n\n      case 'object-grammar': {\n        throw new UnsupportedFunctionalityError({\n          functionality: 'object-grammar mode',\n        });\n      }\n\n      default: {\n        const _exhaustiveCheck: never = type;\n        throw new Error(`Unsupported type: ${_exhaustiveCheck}`);\n      }\n    }\n  }\n\n  async doGenerate(\n    options: Parameters<LanguageModelV1['doGenerate']>[0],\n  ): Promise<Awaited<ReturnType<LanguageModelV1['doGenerate']>>> {\n    const args = this.getArgs(options);\n\n    const { responseHeaders, value: response } = await postJsonToApi({\n      url: this.config.url({\n        path: '/completions',\n        modelId: this.modelId,\n      }),\n      headers: combineHeaders(this.config.headers(), options.headers),\n      body: args,\n      failedResponseHandler: openaiFailedResponseHandler,\n      successfulResponseHandler: createJsonResponseHandler(\n        openAICompletionResponseSchema,\n      ),\n      abortSignal: options.abortSignal,\n      fetch: this.config.fetch,\n    });\n\n    const { prompt: rawPrompt, ...rawSettings } = args;\n    const choice = response.choices[0];\n\n    return {\n      text: choice.text,\n      usage: {\n        promptTokens: response.usage.prompt_tokens,\n        completionTokens: response.usage.completion_tokens,\n      },\n      finishReason: mapOpenAIFinishReason(choice.finish_reason),\n      logprobs: mapOpenAICompletionLogProbs(choice.logprobs),\n      rawCall: { rawPrompt, rawSettings },\n      rawResponse: { headers: responseHeaders },\n      warnings: [],\n    };\n  }\n\n  async doStream(\n    options: Parameters<LanguageModelV1['doStream']>[0],\n  ): Promise<Awaited<ReturnType<LanguageModelV1['doStream']>>> {\n    const args = this.getArgs(options);\n\n    const { responseHeaders, value: response } = await postJsonToApi({\n      url: this.config.url({\n        path: '/completions',\n        modelId: this.modelId,\n      }),\n      headers: combineHeaders(this.config.headers(), options.headers),\n      body: {\n        ...this.getArgs(options),\n        stream: true,\n\n        // only include stream_options when in strict compatibility mode:\n        stream_options:\n          this.config.compatibility === 'strict'\n            ? { include_usage: true }\n            : undefined,\n      },\n      failedResponseHandler: openaiFailedResponseHandler,\n      successfulResponseHandler: createEventSourceResponseHandler(\n        openaiCompletionChunkSchema,\n      ),\n      abortSignal: options.abortSignal,\n      fetch: this.config.fetch,\n    });\n\n    const { prompt: rawPrompt, ...rawSettings } = args;\n\n    let finishReason: LanguageModelV1FinishReason = 'other';\n    let usage: { promptTokens: number; completionTokens: number } = {\n      promptTokens: Number.NaN,\n      completionTokens: Number.NaN,\n    };\n    let logprobs: LanguageModelV1LogProbs;\n\n    return {\n      stream: response.pipeThrough(\n        new TransformStream<\n          ParseResult<z.infer<typeof openaiCompletionChunkSchema>>,\n          LanguageModelV1StreamPart\n        >({\n          transform(chunk, controller) {\n            // handle failed chunk parsing / validation:\n            if (!chunk.success) {\n              finishReason = 'error';\n              controller.enqueue({ type: 'error', error: chunk.error });\n              return;\n            }\n\n            const value = chunk.value;\n\n            // handle error chunks:\n            if ('error' in value) {\n              finishReason = 'error';\n              controller.enqueue({ type: 'error', error: value.error });\n              return;\n            }\n\n            if (value.usage != null) {\n              usage = {\n                promptTokens: value.usage.prompt_tokens,\n                completionTokens: value.usage.completion_tokens,\n              };\n            }\n\n            const choice = value.choices[0];\n\n            if (choice?.finish_reason != null) {\n              finishReason = mapOpenAIFinishReason(choice.finish_reason);\n            }\n\n            if (choice?.text != null) {\n              controller.enqueue({\n                type: 'text-delta',\n                textDelta: choice.text,\n              });\n            }\n\n            const mappedLogprobs = mapOpenAICompletionLogProbs(\n              choice?.logprobs,\n            );\n            if (mappedLogprobs?.length) {\n              if (logprobs === undefined) logprobs = [];\n              logprobs.push(...mappedLogprobs);\n            }\n          },\n\n          flush(controller) {\n            controller.enqueue({\n              type: 'finish',\n              finishReason,\n              logprobs,\n              usage,\n            });\n          },\n        }),\n      ),\n      rawCall: { rawPrompt, rawSettings },\n      rawResponse: { headers: responseHeaders },\n      warnings: [],\n    };\n  }\n}\n\n// limited version of the schema, focussed on what is needed for the implementation\n// this approach limits breakages when the API changes and increases efficiency\nconst openAICompletionResponseSchema = z.object({\n  choices: z.array(\n    z.object({\n      text: z.string(),\n      finish_reason: z.string(),\n      logprobs: z\n        .object({\n          tokens: z.array(z.string()),\n          token_logprobs: z.array(z.number()),\n          top_logprobs: z.array(z.record(z.string(), z.number())).nullable(),\n        })\n        .nullable()\n        .optional(),\n    }),\n  ),\n  usage: z.object({\n    prompt_tokens: z.number(),\n    completion_tokens: z.number(),\n  }),\n});\n\n// limited version of the schema, focussed on what is needed for the implementation\n// this approach limits breakages when the API changes and increases efficiency\nconst openaiCompletionChunkSchema = z.union([\n  z.object({\n    choices: z.array(\n      z.object({\n        text: z.string(),\n        finish_reason: z.string().nullish(),\n        index: z.number(),\n        logprobs: z\n          .object({\n            tokens: z.array(z.string()),\n            token_logprobs: z.array(z.number()),\n            top_logprobs: z.array(z.record(z.string(), z.number())).nullable(),\n          })\n          .nullable()\n          .optional(),\n      }),\n    ),\n    usage: z\n      .object({\n        prompt_tokens: z.number(),\n        completion_tokens: z.number(),\n      })\n      .optional()\n      .nullable(),\n  }),\n  openAIErrorDataSchema,\n]);\n","import {\n  InvalidPromptError,\n  LanguageModelV1Prompt,\n  UnsupportedFunctionalityError,\n} from '@ai-sdk/provider';\n\nexport function convertToOpenAICompletionPrompt({\n  prompt,\n  inputFormat,\n  user = 'user',\n  assistant = 'assistant',\n}: {\n  prompt: LanguageModelV1Prompt;\n  inputFormat: 'prompt' | 'messages';\n  user?: string;\n  assistant?: string;\n}): {\n  prompt: string;\n  stopSequences?: string[];\n} {\n  // When the user supplied a prompt input, we don't transform it:\n  if (\n    inputFormat === 'prompt' &&\n    prompt.length === 1 &&\n    prompt[0].role === 'user' &&\n    prompt[0].content.length === 1 &&\n    prompt[0].content[0].type === 'text'\n  ) {\n    return { prompt: prompt[0].content[0].text };\n  }\n\n  // otherwise transform to a chat message format:\n  let text = '';\n\n  // if first message is a system message, add it to the text:\n  if (prompt[0].role === 'system') {\n    text += `${prompt[0].content}\\n\\n`;\n    prompt = prompt.slice(1);\n  }\n\n  for (const { role, content } of prompt) {\n    switch (role) {\n      case 'system': {\n        throw new InvalidPromptError({\n          message: 'Unexpected system message in prompt: ${content}',\n          prompt,\n        });\n      }\n\n      case 'user': {\n        const userMessage = content\n          .map(part => {\n            switch (part.type) {\n              case 'text': {\n                return part.text;\n              }\n              case 'image': {\n                throw new UnsupportedFunctionalityError({\n                  functionality: 'images',\n                });\n              }\n            }\n          })\n          .join('');\n\n        text += `${user}:\\n${userMessage}\\n\\n`;\n        break;\n      }\n\n      case 'assistant': {\n        const assistantMessage = content\n          .map(part => {\n            switch (part.type) {\n              case 'text': {\n                return part.text;\n              }\n              case 'tool-call': {\n                throw new UnsupportedFunctionalityError({\n                  functionality: 'tool-call messages',\n                });\n              }\n            }\n          })\n          .join('');\n\n        text += `${assistant}:\\n${assistantMessage}\\n\\n`;\n        break;\n      }\n\n      case 'tool': {\n        throw new UnsupportedFunctionalityError({\n          functionality: 'tool messages',\n        });\n      }\n\n      default: {\n        const _exhaustiveCheck: never = role;\n        throw new Error(`Unsupported role: ${_exhaustiveCheck}`);\n      }\n    }\n  }\n\n  // Assistant message prefix:\n  text += `${assistant}:\\n`;\n\n  return {\n    prompt: text,\n    stopSequences: [`\\n${user}:`],\n  };\n}\n","import { LanguageModelV1LogProbs } from '@ai-sdk/provider';\n\ntype OpenAICompletionLogProps = {\n  tokens: string[];\n  token_logprobs: number[];\n  top_logprobs: Record<string, number>[] | null;\n};\n\nexport function mapOpenAICompletionLogProbs(\n  logprobs: OpenAICompletionLogProps | null | undefined,\n): LanguageModelV1LogProbs | undefined {\n  return logprobs?.tokens.map((token, index) => ({\n    token,\n    logprob: logprobs.token_logprobs[index],\n    topLogprobs: logprobs.top_logprobs\n      ? Object.entries(logprobs.top_logprobs[index]).map(\n          ([token, logprob]) => ({\n            token,\n            logprob,\n          }),\n        )\n      : [],\n  }));\n}\n","import { loadApiKey, withoutTrailingSlash } from '@ai-sdk/provider-utils';\nimport { OpenAIChatLanguageModel } from './openai-chat-language-model';\nimport { OpenAIChatModelId, OpenAIChatSettings } from './openai-chat-settings';\nimport { OpenAICompletionLanguageModel } from './openai-completion-language-model';\nimport {\n  OpenAICompletionModelId,\n  OpenAICompletionSettings,\n} from './openai-completion-settings';\nimport { OpenAIEmbeddingModel } from './openai-embedding-model';\nimport {\n  OpenAIEmbeddingModelId,\n  OpenAIEmbeddingSettings,\n} from './openai-embedding-settings';\n\nexport interface OpenAIProvider {\n  (\n    modelId: 'gpt-3.5-turbo-instruct',\n    settings?: OpenAICompletionSettings,\n  ): OpenAICompletionLanguageModel;\n  (\n    modelId: OpenAIChatModelId,\n    settings?: OpenAIChatSettings,\n  ): OpenAIChatLanguageModel;\n\n  languageModel(\n    modelId: 'gpt-3.5-turbo-instruct',\n    settings?: OpenAICompletionSettings,\n  ): OpenAICompletionLanguageModel;\n  languageModel(\n    modelId: OpenAIChatModelId,\n    settings?: OpenAIChatSettings,\n  ): OpenAIChatLanguageModel;\n\n  /**\nCreates an OpenAI chat model for text generation.\n   */\n  chat(\n    modelId: OpenAIChatModelId,\n    settings?: OpenAIChatSettings,\n  ): OpenAIChatLanguageModel;\n\n  /**\nCreates an OpenAI completion model for text generation.\n   */\n  completion(\n    modelId: OpenAICompletionModelId,\n    settings?: OpenAICompletionSettings,\n  ): OpenAICompletionLanguageModel;\n\n  /**\nCreates a model for text embeddings.\n   */\n  embedding(\n    modelId: OpenAIEmbeddingModelId,\n    settings?: OpenAIEmbeddingSettings,\n  ): OpenAIEmbeddingModel;\n\n  /**\nCreates a model for text embeddings.\n   */\n  textEmbedding(\n    modelId: OpenAIEmbeddingModelId,\n    settings?: OpenAIEmbeddingSettings,\n  ): OpenAIEmbeddingModel;\n}\n\nexport interface OpenAIProviderSettings {\n  /**\nBase URL for the OpenAI API calls.\n     */\n  baseURL?: string;\n\n  /**\n@deprecated Use `baseURL` instead.\n     */\n  baseUrl?: string;\n\n  /**\nAPI key for authenticating requests.\n     */\n  apiKey?: string;\n\n  /**\nOpenAI Organization.\n     */\n  organization?: string;\n\n  /**\nOpenAI project.\n     */\n  project?: string;\n\n  /**\nCustom headers to include in the requests.\n     */\n  headers?: Record<string, string>;\n\n  /**\nOpenAI compatibility mode. Should be set to `strict` when using the OpenAI API,\nand `compatible` when using 3rd party providers. In `compatible` mode, newer\ninformation such as streamOptions are not being sent. Defaults to 'compatible'.\n   */\n  compatibility?: 'strict' | 'compatible';\n\n  /**\nCustom fetch implementation. You can use it as a middleware to intercept requests,\nor to provide a custom fetch implementation for e.g. testing.\n    */\n  fetch?: typeof fetch;\n}\n\n/**\nCreate an OpenAI provider instance.\n */\nexport function createOpenAI(\n  options: OpenAIProviderSettings = {},\n): OpenAIProvider {\n  const baseURL =\n    withoutTrailingSlash(options.baseURL ?? options.baseUrl) ??\n    'https://api.openai.com/v1';\n\n  // we default to compatible, because strict breaks providers like Groq:\n  const compatibility = options.compatibility ?? 'compatible';\n\n  const getHeaders = () => ({\n    Authorization: `Bearer ${loadApiKey({\n      apiKey: options.apiKey,\n      environmentVariableName: 'OPENAI_API_KEY',\n      description: 'OpenAI',\n    })}`,\n    'OpenAI-Organization': options.organization,\n    'OpenAI-Project': options.project,\n    ...options.headers,\n  });\n\n  const createChatModel = (\n    modelId: OpenAIChatModelId,\n    settings: OpenAIChatSettings = {},\n  ) =>\n    new OpenAIChatLanguageModel(modelId, settings, {\n      provider: 'openai.chat',\n      url: ({ path }) => `${baseURL}${path}`,\n      headers: getHeaders,\n      compatibility,\n      fetch: options.fetch,\n    });\n\n  const createCompletionModel = (\n    modelId: OpenAICompletionModelId,\n    settings: OpenAICompletionSettings = {},\n  ) =>\n    new OpenAICompletionLanguageModel(modelId, settings, {\n      provider: 'openai.completion',\n      url: ({ path }) => `${baseURL}${path}`,\n      headers: getHeaders,\n      compatibility,\n      fetch: options.fetch,\n    });\n\n  const createEmbeddingModel = (\n    modelId: OpenAIEmbeddingModelId,\n    settings: OpenAIEmbeddingSettings = {},\n  ) =>\n    new OpenAIEmbeddingModel(modelId, settings, {\n      provider: 'openai.embedding',\n      url: ({ path }) => `${baseURL}${path}`,\n      headers: getHeaders,\n      fetch: options.fetch,\n    });\n\n  const createLanguageModel = (\n    modelId: OpenAIChatModelId | OpenAICompletionModelId,\n    settings?: OpenAIChatSettings | OpenAICompletionSettings,\n  ) => {\n    if (new.target) {\n      throw new Error(\n        'The OpenAI model function cannot be called with the new keyword.',\n      );\n    }\n\n    if (modelId === 'gpt-3.5-turbo-instruct') {\n      return createCompletionModel(\n        modelId,\n        settings as OpenAICompletionSettings,\n      );\n    }\n\n    return createChatModel(modelId, settings as OpenAIChatSettings);\n  };\n\n  const provider = function (\n    modelId: OpenAIChatModelId | OpenAICompletionModelId,\n    settings?: OpenAIChatSettings | OpenAICompletionSettings,\n  ) {\n    return createLanguageModel(modelId, settings);\n  };\n\n  provider.languageModel = createLanguageModel;\n  provider.chat = createChatModel;\n  provider.completion = createCompletionModel;\n  provider.embedding = createEmbeddingModel;\n  provider.textEmbedding = createEmbeddingModel;\n\n  return provider as OpenAIProvider;\n}\n\n/**\nDefault OpenAI provider instance. It uses 'strict' compatibility mode.\n */\nexport const openai = createOpenAI({\n  compatibility: 'strict', // strict for OpenAI API\n});\n","import {\n  EmbeddingModelV1,\n  TooManyEmbeddingValuesForCallError,\n} from '@ai-sdk/provider';\nimport {\n  combineHeaders,\n  createJsonResponseHandler,\n  postJsonToApi,\n} from '@ai-sdk/provider-utils';\nimport { z } from 'zod';\nimport {\n  OpenAIEmbeddingModelId,\n  OpenAIEmbeddingSettings,\n} from './openai-embedding-settings';\nimport { openaiFailedResponseHandler } from './openai-error';\n\ntype OpenAIEmbeddingConfig = {\n  provider: string;\n  url: (options: { modelId: string; path: string }) => string;\n  headers: () => Record<string, string | undefined>;\n  fetch?: typeof fetch;\n};\n\nexport class OpenAIEmbeddingModel implements EmbeddingModelV1<string> {\n  readonly specificationVersion = 'v1';\n  readonly modelId: OpenAIEmbeddingModelId;\n\n  private readonly config: OpenAIEmbeddingConfig;\n  private readonly settings: OpenAIEmbeddingSettings;\n\n  get provider(): string {\n    return this.config.provider;\n  }\n\n  get maxEmbeddingsPerCall(): number {\n    return this.settings.maxEmbeddingsPerCall ?? 2048;\n  }\n\n  get supportsParallelCalls(): boolean {\n    return this.settings.supportsParallelCalls ?? true;\n  }\n\n  constructor(\n    modelId: OpenAIEmbeddingModelId,\n    settings: OpenAIEmbeddingSettings,\n    config: OpenAIEmbeddingConfig,\n  ) {\n    this.modelId = modelId;\n    this.settings = settings;\n    this.config = config;\n  }\n\n  async doEmbed({\n    values,\n    headers,\n    abortSignal,\n  }: Parameters<EmbeddingModelV1<string>['doEmbed']>[0]): Promise<\n    Awaited<ReturnType<EmbeddingModelV1<string>['doEmbed']>>\n  > {\n    if (values.length > this.maxEmbeddingsPerCall) {\n      throw new TooManyEmbeddingValuesForCallError({\n        provider: this.provider,\n        modelId: this.modelId,\n        maxEmbeddingsPerCall: this.maxEmbeddingsPerCall,\n        values,\n      });\n    }\n\n    const { responseHeaders, value: response } = await postJsonToApi({\n      url: this.config.url({\n        path: '/embeddings',\n        modelId: this.modelId,\n      }),\n      headers: combineHeaders(this.config.headers(), headers),\n      body: {\n        model: this.modelId,\n        input: values,\n        encoding_format: 'float',\n        dimensions: this.settings.dimensions,\n        user: this.settings.user,\n      },\n      failedResponseHandler: openaiFailedResponseHandler,\n      successfulResponseHandler: createJsonResponseHandler(\n        openaiTextEmbeddingResponseSchema,\n      ),\n      abortSignal,\n      fetch: this.config.fetch,\n    });\n\n    return {\n      embeddings: response.data.map(item => item.embedding),\n      rawResponse: { headers: responseHeaders },\n    };\n  }\n}\n\n// minimal version of the schema, focussed on what is needed for the implementation\n// this approach limits breakages when the API changes and increases efficiency\nconst openaiTextEmbeddingResponseSchema = z.object({\n  data: z.array(\n    z.object({\n      embedding: z.array(z.number()),\n    }),\n  ),\n});\n"],"names":["token","logprob","_a","toolCall","z","UnsupportedFunctionalityError","postJsonToApi","combineHeaders","createJsonResponseHandler","createEventSourceResponseHandler","withoutTrailingSlash","loadApiKey"],"mappings":"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"}},
    {"offset": {"line": 8401, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8406, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@t3-oss/env-core/dist/index.js"],"sourcesContent":["import { object } from 'zod';\n\nfunction createEnv(opts) {\n    const runtimeEnv = opts.runtimeEnvStrict ?? opts.runtimeEnv ?? process.env;\n    const emptyStringAsUndefined = opts.emptyStringAsUndefined ?? false;\n    if (emptyStringAsUndefined) {\n        for (const [key, value] of Object.entries(runtimeEnv)){\n            if (value === \"\") {\n                delete runtimeEnv[key];\n            }\n        }\n    }\n    const skip = !!opts.skipValidation;\n    // biome-ignore lint/suspicious/noExplicitAny: <explanation>\n    if (skip) return runtimeEnv;\n    const _client = typeof opts.client === \"object\" ? opts.client : {};\n    const _server = typeof opts.server === \"object\" ? opts.server : {};\n    const _shared = typeof opts.shared === \"object\" ? opts.shared : {};\n    const client = object(_client);\n    const server = object(_server);\n    const shared = object(_shared);\n    const isServer = opts.isServer ?? (typeof window === \"undefined\" || \"Deno\" in window);\n    const allClient = client.merge(shared);\n    const allServer = server.merge(shared).merge(client);\n    const parsed = isServer ? allServer.safeParse(runtimeEnv) // on server we can validate all env vars\n     : allClient.safeParse(runtimeEnv); // on client we can only validate the ones that are exposed\n    const onValidationError = opts.onValidationError ?? ((error)=>{\n        console.error(\"❌ Invalid environment variables:\", error.flatten().fieldErrors);\n        throw new Error(\"Invalid environment variables\");\n    });\n    const onInvalidAccess = opts.onInvalidAccess ?? ((_variable)=>{\n        throw new Error(\"❌ Attempted to access a server-side environment variable on the client\");\n    });\n    if (parsed.success === false) {\n        return onValidationError(parsed.error);\n    }\n    const isServerAccess = (prop)=>{\n        if (!opts.clientPrefix) return true;\n        return !prop.startsWith(opts.clientPrefix) && !(prop in shared.shape);\n    };\n    const isValidServerAccess = (prop)=>{\n        return isServer || !isServerAccess(prop);\n    };\n    const ignoreProp = (prop)=>{\n        return prop === \"__esModule\" || prop === \"$$typeof\";\n    };\n    const extendedObj = (opts.extends ?? []).reduce((acc, curr)=>{\n        return Object.assign(acc, curr);\n    }, {});\n    const fullObj = Object.assign(parsed.data, extendedObj);\n    const env = new Proxy(fullObj, {\n        get (target, prop) {\n            if (typeof prop !== \"string\") return undefined;\n            if (ignoreProp(prop)) return undefined;\n            if (!isValidServerAccess(prop)) return onInvalidAccess(prop);\n            return Reflect.get(target, prop);\n        }\n    });\n    // biome-ignore lint/suspicious/noExplicitAny: <explanation>\n    return env;\n}\n\nexport { createEnv };\n"],"names":[],"mappings":";;;;;;AAEA,SAAS,UAAU,IAAI;IACnB,MAAM,aAAa,KAAK,gBAAgB,IAAI,KAAK,UAAU,IAAI,QAAQ,GAAG;IAC1E,MAAM,yBAAyB,KAAK,sBAAsB,IAAI;IAC9D,IAAI,wBAAwB;QACxB,KAAK,MAAM,CAAC,KAAK,MAAM,IAAI,OAAO,OAAO,CAAC,YAAY;YAClD,IAAI,UAAU,IAAI;gBACd,OAAO,UAAU,CAAC,IAAI;YAC1B;QACJ;IACJ;IACA,MAAM,OAAO,CAAC,CAAC,KAAK,cAAc;IAClC,4DAA4D;IAC5D,IAAI,MAAM,OAAO;IACjB,MAAM,UAAU,OAAO,KAAK,MAAM,KAAK,WAAW,KAAK,MAAM,GAAG,CAAC;IACjE,MAAM,UAAU,OAAO,KAAK,MAAM,KAAK,WAAW,KAAK,MAAM,GAAG,CAAC;IACjE,MAAM,UAAU,OAAO,KAAK,MAAM,KAAK,WAAW,KAAK,MAAM,GAAG,CAAC;IACjE,MAAM,SAAS,CAAA,GAAA,sIAAA,CAAA,SAAM,AAAD,EAAE;IACtB,MAAM,SAAS,CAAA,GAAA,sIAAA,CAAA,SAAM,AAAD,EAAE;IACtB,MAAM,SAAS,CAAA,GAAA,sIAAA,CAAA,SAAM,AAAD,EAAE;IACtB,MAAM,WAAW,KAAK,QAAQ,IAAI,CAAC,OAAO,WAAW,eAAe,UAAU,MAAM;IACpF,MAAM,YAAY,OAAO,KAAK,CAAC;IAC/B,MAAM,YAAY,OAAO,KAAK,CAAC,QAAQ,KAAK,CAAC;IAC7C,MAAM,SAAS,WAAW,UAAU,SAAS,CAAC,YAAY,yCAAyC;OAChG,UAAU,SAAS,CAAC,aAAa,2DAA2D;IAC/F,MAAM,oBAAoB,KAAK,iBAAiB,IAAI,CAAC,CAAC;QAClD,QAAQ,KAAK,CAAC,oCAAoC,MAAM,OAAO,GAAG,WAAW;QAC7E,MAAM,IAAI,MAAM;IACpB,CAAC;IACD,MAAM,kBAAkB,KAAK,eAAe,IAAI,CAAC,CAAC;QAC9C,MAAM,IAAI,MAAM;IACpB,CAAC;IACD,IAAI,OAAO,OAAO,KAAK,OAAO;QAC1B,OAAO,kBAAkB,OAAO,KAAK;IACzC;IACA,MAAM,iBAAiB,CAAC;QACpB,IAAI,CAAC,KAAK,YAAY,EAAE,OAAO;QAC/B,OAAO,CAAC,KAAK,UAAU,CAAC,KAAK,YAAY,KAAK,CAAC,CAAC,QAAQ,OAAO,KAAK;IACxE;IACA,MAAM,sBAAsB,CAAC;QACzB,OAAO,YAAY,CAAC,eAAe;IACvC;IACA,MAAM,aAAa,CAAC;QAChB,OAAO,SAAS,gBAAgB,SAAS;IAC7C;IACA,MAAM,cAAc,CAAC,KAAK,OAAO,IAAI,EAAE,EAAE,MAAM,CAAC,CAAC,KAAK;QAClD,OAAO,OAAO,MAAM,CAAC,KAAK;IAC9B,GAAG,CAAC;IACJ,MAAM,UAAU,OAAO,MAAM,CAAC,OAAO,IAAI,EAAE;IAC3C,MAAM,MAAM,IAAI,MAAM,SAAS;QAC3B,KAAK,MAAM,EAAE,IAAI;YACb,IAAI,OAAO,SAAS,UAAU,OAAO;YACrC,IAAI,WAAW,OAAO,OAAO;YAC7B,IAAI,CAAC,oBAAoB,OAAO,OAAO,gBAAgB;YACvD,OAAO,QAAQ,GAAG,CAAC,QAAQ;QAC/B;IACJ;IACA,4DAA4D;IAC5D,OAAO;AACX"}},
    {"offset": {"line": 8472, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8477, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@t3-oss/env-nextjs/dist/index.js"],"sourcesContent":["import { createEnv as createEnv$1 } from '@t3-oss/env-core';\n\nconst CLIENT_PREFIX = \"NEXT_PUBLIC_\";\nfunction createEnv(opts) {\n    const client = typeof opts.client === \"object\" ? opts.client : {};\n    const server = typeof opts.server === \"object\" ? opts.server : {};\n    const shared = opts.shared;\n    const runtimeEnv = opts.runtimeEnv ? opts.runtimeEnv : {\n        ...process.env,\n        ...opts.experimental__runtimeEnv\n    };\n    return createEnv$1({\n        ...opts,\n        shared,\n        client,\n        server,\n        clientPrefix: CLIENT_PREFIX,\n        runtimeEnv\n    });\n}\n\nexport { createEnv };\n"],"names":[],"mappings":";;;;;;AAEA,MAAM,gBAAgB;AACtB,SAAS,UAAU,IAAI;IACnB,MAAM,SAAS,OAAO,KAAK,MAAM,KAAK,WAAW,KAAK,MAAM,GAAG,CAAC;IAChE,MAAM,SAAS,OAAO,KAAK,MAAM,KAAK,WAAW,KAAK,MAAM,GAAG,CAAC;IAChE,MAAM,SAAS,KAAK,MAAM;IAC1B,MAAM,aAAa,KAAK,UAAU,GAAG,KAAK,UAAU,GAAG;QACnD,GAAG,QAAQ,GAAG;QACd,GAAG,KAAK,wBAAwB;IACpC;IACA,OAAO,CAAA,GAAA,6JAAA,CAAA,YAAW,AAAD,EAAE;QACf,GAAG,IAAI;QACP;QACA;QACA;QACA,cAAc;QACd;IACJ;AACJ"}},
    {"offset": {"line": 8502, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8510, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/dotenv/lib/main.js"],"sourcesContent":["const fs = require('fs')\nconst path = require('path')\nconst os = require('os')\nconst crypto = require('crypto')\nconst packageJson = require('../package.json')\n\nconst version = packageJson.version\n\nconst LINE = /(?:^|^)\\s*(?:export\\s+)?([\\w.-]+)(?:\\s*=\\s*?|:\\s+?)(\\s*'(?:\\\\'|[^'])*'|\\s*\"(?:\\\\\"|[^\"])*\"|\\s*`(?:\\\\`|[^`])*`|[^#\\r\\n]+)?\\s*(?:#.*)?(?:$|$)/mg\n\n// Parse src into an Object\nfunction parse (src) {\n  const obj = {}\n\n  // Convert buffer to string\n  let lines = src.toString()\n\n  // Convert line breaks to same format\n  lines = lines.replace(/\\r\\n?/mg, '\\n')\n\n  let match\n  while ((match = LINE.exec(lines)) != null) {\n    const key = match[1]\n\n    // Default undefined or null to empty string\n    let value = (match[2] || '')\n\n    // Remove whitespace\n    value = value.trim()\n\n    // Check if double quoted\n    const maybeQuote = value[0]\n\n    // Remove surrounding quotes\n    value = value.replace(/^(['\"`])([\\s\\S]*)\\1$/mg, '$2')\n\n    // Expand newlines if double quoted\n    if (maybeQuote === '\"') {\n      value = value.replace(/\\\\n/g, '\\n')\n      value = value.replace(/\\\\r/g, '\\r')\n    }\n\n    // Add to object\n    obj[key] = value\n  }\n\n  return obj\n}\n\nfunction _parseVault (options) {\n  const vaultPath = _vaultPath(options)\n\n  // Parse .env.vault\n  const result = DotenvModule.configDotenv({ path: vaultPath })\n  if (!result.parsed) {\n    const err = new Error(`MISSING_DATA: Cannot parse ${vaultPath} for an unknown reason`)\n    err.code = 'MISSING_DATA'\n    throw err\n  }\n\n  // handle scenario for comma separated keys - for use with key rotation\n  // example: DOTENV_KEY=\"dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=prod,dotenv://:key_7890@dotenvx.com/vault/.env.vault?environment=prod\"\n  const keys = _dotenvKey(options).split(',')\n  const length = keys.length\n\n  let decrypted\n  for (let i = 0; i < length; i++) {\n    try {\n      // Get full key\n      const key = keys[i].trim()\n\n      // Get instructions for decrypt\n      const attrs = _instructions(result, key)\n\n      // Decrypt\n      decrypted = DotenvModule.decrypt(attrs.ciphertext, attrs.key)\n\n      break\n    } catch (error) {\n      // last key\n      if (i + 1 >= length) {\n        throw error\n      }\n      // try next key\n    }\n  }\n\n  // Parse decrypted .env string\n  return DotenvModule.parse(decrypted)\n}\n\nfunction _log (message) {\n  console.log(`[dotenv@${version}][INFO] ${message}`)\n}\n\nfunction _warn (message) {\n  console.log(`[dotenv@${version}][WARN] ${message}`)\n}\n\nfunction _debug (message) {\n  console.log(`[dotenv@${version}][DEBUG] ${message}`)\n}\n\nfunction _dotenvKey (options) {\n  // prioritize developer directly setting options.DOTENV_KEY\n  if (options && options.DOTENV_KEY && options.DOTENV_KEY.length > 0) {\n    return options.DOTENV_KEY\n  }\n\n  // secondary infra already contains a DOTENV_KEY environment variable\n  if (process.env.DOTENV_KEY && process.env.DOTENV_KEY.length > 0) {\n    return process.env.DOTENV_KEY\n  }\n\n  // fallback to empty string\n  return ''\n}\n\nfunction _instructions (result, dotenvKey) {\n  // Parse DOTENV_KEY. Format is a URI\n  let uri\n  try {\n    uri = new URL(dotenvKey)\n  } catch (error) {\n    if (error.code === 'ERR_INVALID_URL') {\n      const err = new Error('INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development')\n      err.code = 'INVALID_DOTENV_KEY'\n      throw err\n    }\n\n    throw error\n  }\n\n  // Get decrypt key\n  const key = uri.password\n  if (!key) {\n    const err = new Error('INVALID_DOTENV_KEY: Missing key part')\n    err.code = 'INVALID_DOTENV_KEY'\n    throw err\n  }\n\n  // Get environment\n  const environment = uri.searchParams.get('environment')\n  if (!environment) {\n    const err = new Error('INVALID_DOTENV_KEY: Missing environment part')\n    err.code = 'INVALID_DOTENV_KEY'\n    throw err\n  }\n\n  // Get ciphertext payload\n  const environmentKey = `DOTENV_VAULT_${environment.toUpperCase()}`\n  const ciphertext = result.parsed[environmentKey] // DOTENV_VAULT_PRODUCTION\n  if (!ciphertext) {\n    const err = new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${environmentKey} in your .env.vault file.`)\n    err.code = 'NOT_FOUND_DOTENV_ENVIRONMENT'\n    throw err\n  }\n\n  return { ciphertext, key }\n}\n\nfunction _vaultPath (options) {\n  let possibleVaultPath = null\n\n  if (options && options.path && options.path.length > 0) {\n    if (Array.isArray(options.path)) {\n      for (const filepath of options.path) {\n        if (fs.existsSync(filepath)) {\n          possibleVaultPath = filepath.endsWith('.vault') ? filepath : `${filepath}.vault`\n        }\n      }\n    } else {\n      possibleVaultPath = options.path.endsWith('.vault') ? options.path : `${options.path}.vault`\n    }\n  } else {\n    possibleVaultPath = path.resolve(process.cwd(), '.env.vault')\n  }\n\n  if (fs.existsSync(possibleVaultPath)) {\n    return possibleVaultPath\n  }\n\n  return null\n}\n\nfunction _resolveHome (envPath) {\n  return envPath[0] === '~' ? path.join(os.homedir(), envPath.slice(1)) : envPath\n}\n\nfunction _configVault (options) {\n  _log('Loading env from encrypted .env.vault')\n\n  const parsed = DotenvModule._parseVault(options)\n\n  let processEnv = process.env\n  if (options && options.processEnv != null) {\n    processEnv = options.processEnv\n  }\n\n  DotenvModule.populate(processEnv, parsed, options)\n\n  return { parsed }\n}\n\nfunction configDotenv (options) {\n  const dotenvPath = path.resolve(process.cwd(), '.env')\n  let encoding = 'utf8'\n  const debug = Boolean(options && options.debug)\n\n  if (options && options.encoding) {\n    encoding = options.encoding\n  } else {\n    if (debug) {\n      _debug('No encoding is specified. UTF-8 is used by default')\n    }\n  }\n\n  let optionPaths = [dotenvPath] // default, look for .env\n  if (options && options.path) {\n    if (!Array.isArray(options.path)) {\n      optionPaths = [_resolveHome(options.path)]\n    } else {\n      optionPaths = [] // reset default\n      for (const filepath of options.path) {\n        optionPaths.push(_resolveHome(filepath))\n      }\n    }\n  }\n\n  // Build the parsed data in a temporary object (because we need to return it).  Once we have the final\n  // parsed data, we will combine it with process.env (or options.processEnv if provided).\n  let lastError\n  const parsedAll = {}\n  for (const path of optionPaths) {\n    try {\n      // Specifying an encoding returns a string instead of a buffer\n      const parsed = DotenvModule.parse(fs.readFileSync(path, { encoding }))\n\n      DotenvModule.populate(parsedAll, parsed, options)\n    } catch (e) {\n      if (debug) {\n        _debug(`Failed to load ${path} ${e.message}`)\n      }\n      lastError = e\n    }\n  }\n\n  let processEnv = process.env\n  if (options && options.processEnv != null) {\n    processEnv = options.processEnv\n  }\n\n  DotenvModule.populate(processEnv, parsedAll, options)\n\n  if (lastError) {\n    return { parsed: parsedAll, error: lastError }\n  } else {\n    return { parsed: parsedAll }\n  }\n}\n\n// Populates process.env from .env file\nfunction config (options) {\n  // fallback to original dotenv if DOTENV_KEY is not set\n  if (_dotenvKey(options).length === 0) {\n    return DotenvModule.configDotenv(options)\n  }\n\n  const vaultPath = _vaultPath(options)\n\n  // dotenvKey exists but .env.vault file does not exist\n  if (!vaultPath) {\n    _warn(`You set DOTENV_KEY but you are missing a .env.vault file at ${vaultPath}. Did you forget to build it?`)\n\n    return DotenvModule.configDotenv(options)\n  }\n\n  return DotenvModule._configVault(options)\n}\n\nfunction decrypt (encrypted, keyStr) {\n  const key = Buffer.from(keyStr.slice(-64), 'hex')\n  let ciphertext = Buffer.from(encrypted, 'base64')\n\n  const nonce = ciphertext.subarray(0, 12)\n  const authTag = ciphertext.subarray(-16)\n  ciphertext = ciphertext.subarray(12, -16)\n\n  try {\n    const aesgcm = crypto.createDecipheriv('aes-256-gcm', key, nonce)\n    aesgcm.setAuthTag(authTag)\n    return `${aesgcm.update(ciphertext)}${aesgcm.final()}`\n  } catch (error) {\n    const isRange = error instanceof RangeError\n    const invalidKeyLength = error.message === 'Invalid key length'\n    const decryptionFailed = error.message === 'Unsupported state or unable to authenticate data'\n\n    if (isRange || invalidKeyLength) {\n      const err = new Error('INVALID_DOTENV_KEY: It must be 64 characters long (or more)')\n      err.code = 'INVALID_DOTENV_KEY'\n      throw err\n    } else if (decryptionFailed) {\n      const err = new Error('DECRYPTION_FAILED: Please check your DOTENV_KEY')\n      err.code = 'DECRYPTION_FAILED'\n      throw err\n    } else {\n      throw error\n    }\n  }\n}\n\n// Populate process.env with parsed values\nfunction populate (processEnv, parsed, options = {}) {\n  const debug = Boolean(options && options.debug)\n  const override = Boolean(options && options.override)\n\n  if (typeof parsed !== 'object') {\n    const err = new Error('OBJECT_REQUIRED: Please check the processEnv argument being passed to populate')\n    err.code = 'OBJECT_REQUIRED'\n    throw err\n  }\n\n  // Set process.env\n  for (const key of Object.keys(parsed)) {\n    if (Object.prototype.hasOwnProperty.call(processEnv, key)) {\n      if (override === true) {\n        processEnv[key] = parsed[key]\n      }\n\n      if (debug) {\n        if (override === true) {\n          _debug(`\"${key}\" is already defined and WAS overwritten`)\n        } else {\n          _debug(`\"${key}\" is already defined and was NOT overwritten`)\n        }\n      }\n    } else {\n      processEnv[key] = parsed[key]\n    }\n  }\n}\n\nconst DotenvModule = {\n  configDotenv,\n  _configVault,\n  _parseVault,\n  config,\n  decrypt,\n  parse,\n  populate\n}\n\nmodule.exports.configDotenv = DotenvModule.configDotenv\nmodule.exports._configVault = DotenvModule._configVault\nmodule.exports._parseVault = DotenvModule._parseVault\nmodule.exports.config = DotenvModule.config\nmodule.exports.decrypt = DotenvModule.decrypt\nmodule.exports.parse = DotenvModule.parse\nmodule.exports.populate = DotenvModule.populate\n\nmodule.exports = DotenvModule\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AAEN,MAAM,UAAU,YAAY,OAAO;AAEnC,MAAM,OAAO;AAEb,2BAA2B;AAC3B,SAAS,MAAO,GAAG;IACjB,MAAM,MAAM,CAAC;IAEb,2BAA2B;IAC3B,IAAI,QAAQ,IAAI,QAAQ;IAExB,qCAAqC;IACrC,QAAQ,MAAM,OAAO,CAAC,WAAW;IAEjC,IAAI;IACJ,MAAO,CAAC,QAAQ,KAAK,IAAI,CAAC,MAAM,KAAK,KAAM;QACzC,MAAM,MAAM,KAAK,CAAC,EAAE;QAEpB,4CAA4C;QAC5C,IAAI,QAAS,KAAK,CAAC,EAAE,IAAI;QAEzB,oBAAoB;QACpB,QAAQ,MAAM,IAAI;QAElB,yBAAyB;QACzB,MAAM,aAAa,KAAK,CAAC,EAAE;QAE3B,4BAA4B;QAC5B,QAAQ,MAAM,OAAO,CAAC,0BAA0B;QAEhD,mCAAmC;QACnC,IAAI,eAAe,KAAK;YACtB,QAAQ,MAAM,OAAO,CAAC,QAAQ;YAC9B,QAAQ,MAAM,OAAO,CAAC,QAAQ;QAChC;QAEA,gBAAgB;QAChB,GAAG,CAAC,IAAI,GAAG;IACb;IAEA,OAAO;AACT;AAEA,SAAS,YAAa,OAAO;IAC3B,MAAM,YAAY,WAAW;IAE7B,mBAAmB;IACnB,MAAM,SAAS,aAAa,YAAY,CAAC;QAAE,MAAM;IAAU;IAC3D,IAAI,CAAC,OAAO,MAAM,EAAE;QAClB,MAAM,MAAM,IAAI,MAAM,CAAC,2BAA2B,EAAE,UAAU,sBAAsB,CAAC;QACrF,IAAI,IAAI,GAAG;QACX,MAAM;IACR;IAEA,uEAAuE;IACvE,0JAA0J;IAC1J,MAAM,OAAO,WAAW,SAAS,KAAK,CAAC;IACvC,MAAM,SAAS,KAAK,MAAM;IAE1B,IAAI;IACJ,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,IAAK;QAC/B,IAAI;YACF,eAAe;YACf,MAAM,MAAM,IAAI,CAAC,EAAE,CAAC,IAAI;YAExB,+BAA+B;YAC/B,MAAM,QAAQ,cAAc,QAAQ;YAEpC,UAAU;YACV,YAAY,aAAa,OAAO,CAAC,MAAM,UAAU,EAAE,MAAM,GAAG;YAE5D;QACF,EAAE,OAAO,OAAO;YACd,WAAW;YACX,IAAI,IAAI,KAAK,QAAQ;gBACnB,MAAM;YACR;QACA,eAAe;QACjB;IACF;IAEA,8BAA8B;IAC9B,OAAO,aAAa,KAAK,CAAC;AAC5B;AAEA,SAAS,KAAM,OAAO;IACpB,QAAQ,GAAG,CAAC,CAAC,QAAQ,EAAE,QAAQ,QAAQ,EAAE,QAAQ,CAAC;AACpD;AAEA,SAAS,MAAO,OAAO;IACrB,QAAQ,GAAG,CAAC,CAAC,QAAQ,EAAE,QAAQ,QAAQ,EAAE,QAAQ,CAAC;AACpD;AAEA,SAAS,OAAQ,OAAO;IACtB,QAAQ,GAAG,CAAC,CAAC,QAAQ,EAAE,QAAQ,SAAS,EAAE,QAAQ,CAAC;AACrD;AAEA,SAAS,WAAY,OAAO;IAC1B,2DAA2D;IAC3D,IAAI,WAAW,QAAQ,UAAU,IAAI,QAAQ,UAAU,CAAC,MAAM,GAAG,GAAG;QAClE,OAAO,QAAQ,UAAU;IAC3B;IAEA,qEAAqE;IACrE,IAAI,QAAQ,GAAG,CAAC,UAAU,IAAI,QAAQ,GAAG,CAAC,UAAU,CAAC,MAAM,GAAG,GAAG;QAC/D,OAAO,QAAQ,GAAG,CAAC,UAAU;IAC/B;IAEA,2BAA2B;IAC3B,OAAO;AACT;AAEA,SAAS,cAAe,MAAM,EAAE,SAAS;IACvC,oCAAoC;IACpC,IAAI;IACJ,IAAI;QACF,MAAM,IAAI,IAAI;IAChB,EAAE,OAAO,OAAO;QACd,IAAI,MAAM,IAAI,KAAK,mBAAmB;YACpC,MAAM,MAAM,IAAI,MAAM;YACtB,IAAI,IAAI,GAAG;YACX,MAAM;QACR;QAEA,MAAM;IACR;IAEA,kBAAkB;IAClB,MAAM,MAAM,IAAI,QAAQ;IACxB,IAAI,CAAC,KAAK;QACR,MAAM,MAAM,IAAI,MAAM;QACtB,IAAI,IAAI,GAAG;QACX,MAAM;IACR;IAEA,kBAAkB;IAClB,MAAM,cAAc,IAAI,YAAY,CAAC,GAAG,CAAC;IACzC,IAAI,CAAC,aAAa;QAChB,MAAM,MAAM,IAAI,MAAM;QACtB,IAAI,IAAI,GAAG;QACX,MAAM;IACR;IAEA,yBAAyB;IACzB,MAAM,iBAAiB,CAAC,aAAa,EAAE,YAAY,WAAW,GAAG,CAAC;IAClE,MAAM,aAAa,OAAO,MAAM,CAAC,eAAe,CAAC,0BAA0B;;IAC3E,IAAI,CAAC,YAAY;QACf,MAAM,MAAM,IAAI,MAAM,CAAC,wDAAwD,EAAE,eAAe,yBAAyB,CAAC;QAC1H,IAAI,IAAI,GAAG;QACX,MAAM;IACR;IAEA,OAAO;QAAE;QAAY;IAAI;AAC3B;AAEA,SAAS,WAAY,OAAO;IAC1B,IAAI,oBAAoB;IAExB,IAAI,WAAW,QAAQ,IAAI,IAAI,QAAQ,IAAI,CAAC,MAAM,GAAG,GAAG;QACtD,IAAI,MAAM,OAAO,CAAC,QAAQ,IAAI,GAAG;YAC/B,KAAK,MAAM,YAAY,QAAQ,IAAI,CAAE;gBACnC,IAAI,GAAG,UAAU,CAAC,WAAW;oBAC3B,oBAAoB,SAAS,QAAQ,CAAC,YAAY,WAAW,CAAC,EAAE,SAAS,MAAM,CAAC;gBAClF;YACF;QACF,OAAO;YACL,oBAAoB,QAAQ,IAAI,CAAC,QAAQ,CAAC,YAAY,QAAQ,IAAI,GAAG,CAAC,EAAE,QAAQ,IAAI,CAAC,MAAM,CAAC;QAC9F;IACF,OAAO;QACL,oBAAoB,KAAK,OAAO,CAAC,QAAQ,GAAG,IAAI;IAClD;IAEA,IAAI,GAAG,UAAU,CAAC,oBAAoB;QACpC,OAAO;IACT;IAEA,OAAO;AACT;AAEA,SAAS,aAAc,OAAO;IAC5B,OAAO,OAAO,CAAC,EAAE,KAAK,MAAM,KAAK,IAAI,CAAC,GAAG,OAAO,IAAI,QAAQ,KAAK,CAAC,MAAM;AAC1E;AAEA,SAAS,aAAc,OAAO;IAC5B,KAAK;IAEL,MAAM,SAAS,aAAa,WAAW,CAAC;IAExC,IAAI,aAAa,QAAQ,GAAG;IAC5B,IAAI,WAAW,QAAQ,UAAU,IAAI,MAAM;QACzC,aAAa,QAAQ,UAAU;IACjC;IAEA,aAAa,QAAQ,CAAC,YAAY,QAAQ;IAE1C,OAAO;QAAE;IAAO;AAClB;AAEA,SAAS,aAAc,OAAO;IAC5B,MAAM,aAAa,KAAK,OAAO,CAAC,QAAQ,GAAG,IAAI;IAC/C,IAAI,WAAW;IACf,MAAM,QAAQ,QAAQ,WAAW,QAAQ,KAAK;IAE9C,IAAI,WAAW,QAAQ,QAAQ,EAAE;QAC/B,WAAW,QAAQ,QAAQ;IAC7B,OAAO;QACL,IAAI,OAAO;YACT,OAAO;QACT;IACF;IAEA,IAAI,cAAc;QAAC;KAAW,CAAC,yBAAyB;;IACxD,IAAI,WAAW,QAAQ,IAAI,EAAE;QAC3B,IAAI,CAAC,MAAM,OAAO,CAAC,QAAQ,IAAI,GAAG;YAChC,cAAc;gBAAC,aAAa,QAAQ,IAAI;aAAE;QAC5C,OAAO;YACL,cAAc,EAAE,CAAC,gBAAgB;;YACjC,KAAK,MAAM,YAAY,QAAQ,IAAI,CAAE;gBACnC,YAAY,IAAI,CAAC,aAAa;YAChC;QACF;IACF;IAEA,sGAAsG;IACtG,wFAAwF;IACxF,IAAI;IACJ,MAAM,YAAY,CAAC;IACnB,KAAK,MAAM,QAAQ,YAAa;QAC9B,IAAI;YACF,8DAA8D;YAC9D,MAAM,SAAS,aAAa,KAAK,CAAC,GAAG,YAAY,CAAC,MAAM;gBAAE;YAAS;YAEnE,aAAa,QAAQ,CAAC,WAAW,QAAQ;QAC3C,EAAE,OAAO,GAAG;YACV,IAAI,OAAO;gBACT,OAAO,CAAC,eAAe,EAAE,KAAK,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;YAC9C;YACA,YAAY;QACd;IACF;IAEA,IAAI,aAAa,QAAQ,GAAG;IAC5B,IAAI,WAAW,QAAQ,UAAU,IAAI,MAAM;QACzC,aAAa,QAAQ,UAAU;IACjC;IAEA,aAAa,QAAQ,CAAC,YAAY,WAAW;IAE7C,IAAI,WAAW;QACb,OAAO;YAAE,QAAQ;YAAW,OAAO;QAAU;IAC/C,OAAO;QACL,OAAO;YAAE,QAAQ;QAAU;IAC7B;AACF;AAEA,uCAAuC;AACvC,SAAS,OAAQ,OAAO;IACtB,uDAAuD;IACvD,IAAI,WAAW,SAAS,MAAM,KAAK,GAAG;QACpC,OAAO,aAAa,YAAY,CAAC;IACnC;IAEA,MAAM,YAAY,WAAW;IAE7B,sDAAsD;IACtD,IAAI,CAAC,WAAW;QACd,MAAM,CAAC,4DAA4D,EAAE,UAAU,6BAA6B,CAAC;QAE7G,OAAO,aAAa,YAAY,CAAC;IACnC;IAEA,OAAO,aAAa,YAAY,CAAC;AACnC;AAEA,SAAS,QAAS,SAAS,EAAE,MAAM;IACjC,MAAM,MAAM,OAAO,IAAI,CAAC,OAAO,KAAK,CAAC,CAAC,KAAK;IAC3C,IAAI,aAAa,OAAO,IAAI,CAAC,WAAW;IAExC,MAAM,QAAQ,WAAW,QAAQ,CAAC,GAAG;IACrC,MAAM,UAAU,WAAW,QAAQ,CAAC,CAAC;IACrC,aAAa,WAAW,QAAQ,CAAC,IAAI,CAAC;IAEtC,IAAI;QACF,MAAM,SAAS,OAAO,gBAAgB,CAAC,eAAe,KAAK;QAC3D,OAAO,UAAU,CAAC;QAClB,OAAO,CAAC,EAAE,OAAO,MAAM,CAAC,YAAY,EAAE,OAAO,KAAK,GAAG,CAAC;IACxD,EAAE,OAAO,OAAO;QACd,MAAM,UAAU,iBAAiB;QACjC,MAAM,mBAAmB,MAAM,OAAO,KAAK;QAC3C,MAAM,mBAAmB,MAAM,OAAO,KAAK;QAE3C,IAAI,WAAW,kBAAkB;YAC/B,MAAM,MAAM,IAAI,MAAM;YACtB,IAAI,IAAI,GAAG;YACX,MAAM;QACR,OAAO,IAAI,kBAAkB;YAC3B,MAAM,MAAM,IAAI,MAAM;YACtB,IAAI,IAAI,GAAG;YACX,MAAM;QACR,OAAO;YACL,MAAM;QACR;IACF;AACF;AAEA,0CAA0C;AAC1C,SAAS,SAAU,UAAU,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;IACjD,MAAM,QAAQ,QAAQ,WAAW,QAAQ,KAAK;IAC9C,MAAM,WAAW,QAAQ,WAAW,QAAQ,QAAQ;IAEpD,IAAI,OAAO,WAAW,UAAU;QAC9B,MAAM,MAAM,IAAI,MAAM;QACtB,IAAI,IAAI,GAAG;QACX,MAAM;IACR;IAEA,kBAAkB;IAClB,KAAK,MAAM,OAAO,OAAO,IAAI,CAAC,QAAS;QACrC,IAAI,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,MAAM;YACzD,IAAI,aAAa,MAAM;gBACrB,UAAU,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI;YAC/B;YAEA,IAAI,OAAO;gBACT,IAAI,aAAa,MAAM;oBACrB,OAAO,CAAC,CAAC,EAAE,IAAI,wCAAwC,CAAC;gBAC1D,OAAO;oBACL,OAAO,CAAC,CAAC,EAAE,IAAI,4CAA4C,CAAC;gBAC9D;YACF;QACF,OAAO;YACL,UAAU,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI;QAC/B;IACF;AACF;AAEA,MAAM,eAAe;IACnB;IACA;IACA;IACA;IACA;IACA;IACA;AACF;AAEA,OAAO,OAAO,CAAC,YAAY,GAAG,aAAa,YAAY;AACvD,OAAO,OAAO,CAAC,YAAY,GAAG,aAAa,YAAY;AACvD,OAAO,OAAO,CAAC,WAAW,GAAG,aAAa,WAAW;AACrD,OAAO,OAAO,CAAC,MAAM,GAAG,aAAa,MAAM;AAC3C,OAAO,OAAO,CAAC,OAAO,GAAG,aAAa,OAAO;AAC7C,OAAO,OAAO,CAAC,KAAK,GAAG,aAAa,KAAK;AACzC,OAAO,OAAO,CAAC,QAAQ,GAAG,aAAa,QAAQ;AAE/C,OAAO,OAAO,GAAG"}},
    {"offset": {"line": 8825, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8829, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/dotenv/lib/env-options.js"],"sourcesContent":["// ../config.js accepts options via environment variables\nconst options = {}\n\nif (process.env.DOTENV_CONFIG_ENCODING != null) {\n  options.encoding = process.env.DOTENV_CONFIG_ENCODING\n}\n\nif (process.env.DOTENV_CONFIG_PATH != null) {\n  options.path = process.env.DOTENV_CONFIG_PATH\n}\n\nif (process.env.DOTENV_CONFIG_DEBUG != null) {\n  options.debug = process.env.DOTENV_CONFIG_DEBUG\n}\n\nif (process.env.DOTENV_CONFIG_OVERRIDE != null) {\n  options.override = process.env.DOTENV_CONFIG_OVERRIDE\n}\n\nif (process.env.DOTENV_CONFIG_DOTENV_KEY != null) {\n  options.DOTENV_KEY = process.env.DOTENV_CONFIG_DOTENV_KEY\n}\n\nmodule.exports = options\n"],"names":[],"mappings":"AAAA,yDAAyD;AACzD,MAAM,UAAU,CAAC;AAEjB,IAAI,QAAQ,GAAG,CAAC,sBAAsB,IAAI,MAAM;IAC9C,QAAQ,QAAQ,GAAG,QAAQ,GAAG,CAAC,sBAAsB;AACvD;AAEA,IAAI,QAAQ,GAAG,CAAC,kBAAkB,IAAI,MAAM;IAC1C,QAAQ,IAAI,GAAG,QAAQ,GAAG,CAAC,kBAAkB;AAC/C;AAEA,IAAI,QAAQ,GAAG,CAAC,mBAAmB,IAAI,MAAM;IAC3C,QAAQ,KAAK,GAAG,QAAQ,GAAG,CAAC,mBAAmB;AACjD;AAEA,IAAI,QAAQ,GAAG,CAAC,sBAAsB,IAAI,MAAM;IAC9C,QAAQ,QAAQ,GAAG,QAAQ,GAAG,CAAC,sBAAsB;AACvD;AAEA,IAAI,QAAQ,GAAG,CAAC,wBAAwB,IAAI,MAAM;IAChD,QAAQ,UAAU,GAAG,QAAQ,GAAG,CAAC,wBAAwB;AAC3D;AAEA,OAAO,OAAO,GAAG"}},
    {"offset": {"line": 8847, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8851, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/dotenv/lib/cli-options.js"],"sourcesContent":["const re = /^dotenv_config_(encoding|path|debug|override|DOTENV_KEY)=(.+)$/\n\nmodule.exports = function optionMatcher (args) {\n  return args.reduce(function (acc, cur) {\n    const matches = cur.match(re)\n    if (matches) {\n      acc[matches[1]] = matches[2]\n    }\n    return acc\n  }, {})\n}\n"],"names":[],"mappings":"AAAA,MAAM,KAAK;AAEX,OAAO,OAAO,GAAG,SAAS,cAAe,IAAI;IAC3C,OAAO,KAAK,MAAM,CAAC,SAAU,GAAG,EAAE,GAAG;QACnC,MAAM,UAAU,IAAI,KAAK,CAAC;QAC1B,IAAI,SAAS;YACX,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,EAAE;QAC9B;QACA,OAAO;IACT,GAAG,CAAC;AACN"}},
    {"offset": {"line": 8861, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8865, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/dotenv/config.js"],"sourcesContent":["(function () {\n  require('./lib/main').config(\n    Object.assign(\n      {},\n      require('./lib/env-options'),\n      require('./lib/cli-options')(process.argv)\n    )\n  )\n})()\n"],"names":[],"mappings":"AAAA,CAAC;IACC,4FAAsB,MAAM,CAC1B,OAAO,MAAM,CACX,CAAC,uGAED,mGAA6B,QAAQ,IAAI;AAG/C,CAAC"}},
    {"offset": {"line": 8868, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}