{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/(preview)/components/ThreeScene.jsx"],"sourcesContent":["\"use client\"; // This is required to enable client-side rendering in the App Router\n\nimport React, { useRef, useEffect } from \"react\";\nimport * as THREE from \"three\";\n\nconst ThreeScene = () => {\n  const mountRef = useRef(null);\n\n  useEffect(() => {\n    // Set up scene, camera, and renderer\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    mountRef.current.appendChild(renderer.domElement);\n  \n    // Add a cube\n    const geometry = new THREE.BoxGeometry();\n    const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n    const cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n  \n    camera.position.z = 5;\n  \n    // Animation loop\n    const animate = function () {\n      requestAnimationFrame(animate);\n      cube.rotation.x += 0.01;\n      cube.rotation.y += 0.01;\n      renderer.render(scene, camera);\n    };\n    animate();\n  \n    // Add resize event listener\n    const handleResize = () => {\n      const width = window.innerWidth;\n      const height = window.innerHeight;\n      renderer.setSize(width, height);\n      camera.aspect = width / height;\n      camera.updateProjectionMatrix();\n    };\n    window.addEventListener(\"resize\", handleResize);\n  \n    // Cleanup on unmount\n    return () => {\n      mountRef.current.removeChild(renderer.domElement);\n      window.removeEventListener(\"resize\", handleResize); // Clean up the resize listener\n    };\n  }, []);\n  \n\n  return <div ref={mountRef} />;\n};\n\nexport default ThreeScene;\n"],"names":[],"mappings":";;;;;;;AAAA,cAAc,qEAAqE;;;;AAKnF,MAAM,aAAa;IACjB,MAAM,WAAW,CAAA,GAAA,+MAAA,CAAA,SAAM,AAAD,EAAE;IAExB,CAAA,GAAA,+MAAA,CAAA,YAAS,AAAD,EAAE;QACR,qCAAqC;QACrC,MAAM,QAAQ,IAAI,kJAAM,KAAK;QAC7B,MAAM,SAAS,IAAI,kJAAM,iBAAiB,CAAC,IAAI,OAAO,UAAU,GAAG,OAAO,WAAW,EAAE,KAAK;QAC5F,MAAM,WAAW,IAAI,kJAAM,aAAa;QACxC,SAAS,OAAO,CAAC,OAAO,UAAU,EAAE,OAAO,WAAW;QACtD,SAAS,OAAO,CAAC,WAAW,CAAC,SAAS,UAAU;QAEhD,aAAa;QACb,MAAM,WAAW,IAAI,kJAAM,WAAW;QACtC,MAAM,WAAW,IAAI,kJAAM,iBAAiB,CAAC;YAAE,OAAO;QAAS;QAC/D,MAAM,OAAO,IAAI,kJAAM,IAAI,CAAC,UAAU;QACtC,MAAM,GAAG,CAAC;QAEV,OAAO,QAAQ,CAAC,CAAC,GAAG;QAEpB,iBAAiB;QACjB,MAAM,UAAU;YACd,sBAAsB;YACtB,KAAK,QAAQ,CAAC,CAAC,IAAI;YACnB,KAAK,QAAQ,CAAC,CAAC,IAAI;YACnB,SAAS,MAAM,CAAC,OAAO;QACzB;QACA;QAEA,4BAA4B;QAC5B,MAAM,eAAe;YACnB,MAAM,QAAQ,OAAO,UAAU;YAC/B,MAAM,SAAS,OAAO,WAAW;YACjC,SAAS,OAAO,CAAC,OAAO;YACxB,OAAO,MAAM,GAAG,QAAQ;YACxB,OAAO,sBAAsB;QAC/B;QACA,OAAO,gBAAgB,CAAC,UAAU;QAElC,qBAAqB;QACrB,OAAO;YACL,SAAS,OAAO,CAAC,WAAW,CAAC,SAAS,UAAU;YAChD,OAAO,mBAAmB,CAAC,UAAU,eAAe,+BAA+B;QACrF;IACF,GAAG,EAAE;IAGL,qBAAO,wPAAC;QAAI,KAAK;;;;;;AACnB;uCAEe"}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}