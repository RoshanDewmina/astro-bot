{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/lib/utils.ts"],"sourcesContent":["import { customAlphabet } from \"nanoid\";\nimport { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\nexport const nanoid = customAlphabet(\"abcdefghijklmnopqrstuvwxyz0123456789\");\n"],"names":[],"mappings":";;;;;;;;;;;AAIO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB;AAEO,MAAM,SAAS,CAAA,GAAA,+IAAA,CAAA,iBAAc,AAAD,EAAE"}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md bg-background px-3 py-2 text-sm file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground outline-none disabled:cursor-not-allowed disabled:opacity-50\",\n          className,\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  },\n);\nInput.displayName = \"Input\";\n\nexport { Input };\n"],"names":[],"mappings":";;;;;;;;;;AAOA,MAAM,sBAAQ,gNAAM,UAAU,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,wPAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,8NACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAMA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,0RACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,gNAAM,UAAU,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,wPAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/fileUpload.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { toast } from 'sonner';\n\nconst FileUpload: React.FC = () => {\n  const [file, setFile] = useState<File | null>(null);\n\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files) {\n      setFile(e.target.files[0]);\n    }\n  };\n\n  const handleUpload = async () => {\n    if (!file) {\n      toast.error('Please select a file to upload');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const response = await fetch('/api/upload', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error('Upload failed');\n      }\n\n      const result = await response.json();\n      toast.success(result.message);\n      setFile(null);\n    } catch (error) {\n      toast.error('Error uploading file');\n      console.error(error);\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col items-center space-y-4\">\n      <Input type=\"file\" onChange={handleFileChange} accept=\".txt,.md,.json\" />\n      <Button onClick={handleUpload} disabled={!file}>\n        Upload File\n      </Button>\n    </div>\n  );\n};\n\nexport default FileUpload;"],"names":[],"mappings":";;;;;;;;;;;;;;AAKA,MAAM,aAAuB;IAC3B,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,+MAAA,CAAA,WAAQ,AAAD,EAAe;IAE9C,MAAM,mBAAmB,CAAC;QACxB,IAAI,EAAE,MAAM,CAAC,KAAK,EAAE;YAClB,QAAQ,EAAE,MAAM,CAAC,KAAK,CAAC,EAAE;QAC3B;IACF;IAEA,MAAM,eAAe;QACnB,IAAI,CAAC,MAAM;YACT,wIAAA,CAAA,QAAK,CAAC,KAAK,CAAC;YACZ;QACF;QAEA,MAAM,WAAW,IAAI;QACrB,SAAS,MAAM,CAAC,QAAQ;QAExB,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,eAAe;gBAC1C,QAAQ;gBACR,MAAM;YACR;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MAAM;YAClB;YAEA,MAAM,SAAS,MAAM,SAAS,IAAI;YAClC,wIAAA,CAAA,QAAK,CAAC,OAAO,CAAC,OAAO,OAAO;YAC5B,QAAQ;QACV,EAAE,OAAO,OAAO;YACd,wIAAA,CAAA,QAAK,CAAC,KAAK,CAAC;YACZ,QAAQ,KAAK,CAAC;QAChB;IACF;IAEA,qBACE,wPAAC;QAAI,WAAU;;0BACb,wPAAC,0HAAA,CAAA,QAAK;gBAAC,MAAK;gBAAO,UAAU;gBAAkB,QAAO;;;;;;0BACtD,wPAAC,2HAAA,CAAA,SAAM;gBAAC,SAAS;gBAAc,UAAU,CAAC;0BAAM;;;;;;;;;;;;AAKtD;uCAEe"}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 192, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/project-overview.tsx"],"sourcesContent":["import React from \"react\";\nimport { motion } from \"framer-motion\";\nimport Link from \"next/link\";\nimport { InformationIcon, VercelIcon } from \"./icons\";\nimport FileUpload from \"./fileUpload\";\n\nconst ProjectOverview = () => {\n  return (\n    <motion.div\n      className=\"w-full max-w-[600px] my-4\"\n      initial={{ opacity: 1, y: 0 }}\n      exit={{ opacity: 0, y: -20 }}\n      transition={{ duration: 5 }}\n    >\n      <div className=\"border rounded-lg p-6 flex flex-col gap-4 text-neutral-500 text-sm dark:text-neutral-400 dark:border-neutral-700 dark:bg-neutral-900\">\n        {/* <p className=\"flex flex-row justify-center gap-4 items-center text-neutral-900 dark:text-neutral-50\"> */}\n          {/* <VercelIcon size={16} />\n          <span>+</span>\n          <InformationIcon />\n        </p>\n        <p>\n          The{\" \"}\n          <Link\n            href=\"https://sdk.vercel.ai/docs/reference/ai-sdk-ui/use-chat\"\n            className=\"text-blue-500\"\n          >\n            useChat\n          </Link>{\" \"}\n          hook along with the{\" \"}\n          <Link\n            href=\"https://sdk.vercel.ai/docs/reference/ai-sdk-core/stream-text\"\n            className=\"text-blue-500\"\n          >\n            streamText\n          </Link>{\" \"}\n          function allows you to build applications with retrieval augmented\n          generation (RAG) capabilities. Data is stored as vector embeddings\n          using DrizzleORM and PostgreSQL.\n        </p>\n        <p>\n          Learn how to build this project by following this{\" \"}\n          <Link\n            className=\"text-blue-500\"\n            href=\"https://sdk.vercel.ai/docs/guides/rag-chatbot\"\n            target=\"_blank\"\n          >\n            guide\n          </Link>\n          . */}\n          <FileUpload />\n        {/* </p> */}\n      </div>\n    </motion.div>\n  );\n};\n\nexport default ProjectOverview;\n"],"names":[],"mappings":";;;;;;;;;;AAMA,MAAM,kBAAkB;IACtB,qBACE,wPAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;QACT,WAAU;QACV,SAAS;YAAE,SAAS;YAAG,GAAG;QAAE;QAC5B,MAAM;YAAE,SAAS;YAAG,GAAG,CAAC;QAAG;QAC3B,YAAY;YAAE,UAAU;QAAE;kBAE1B,cAAA,wPAAC;YAAI,WAAU;sBAmCX,cAAA,wPAAC,yHAAA,CAAA,UAAU;;;;;;;;;;;;;;;AAKrB;uCAEe"}},
    {"offset": {"line": 235, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/icons.tsx"],"sourcesContent":["export const VercelIcon = ({ size = 17 }) => {\n  return (\n    <svg\n      height={size}\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 16 16\"\n      width={size}\n      style={{ color: \"currentcolor\" }}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M8 1L16 15H0L8 1Z\"\n        fill=\"currentColor\"\n      ></path>\n    </svg>\n  );\n};\n\nexport const InformationIcon = ({ size = 17 }) => {\n  return (\n    <svg\n      height={size}\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 16 16\"\n      width={size}\n      style={{ color: \"currentcolor\" }}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M8 14.5C11.5899 14.5 14.5 11.5899 14.5 8C14.5 4.41015 11.5899 1.5 8 1.5C4.41015 1.5 1.5 4.41015 1.5 8C1.5 11.5899 4.41015 14.5 8 14.5ZM8 16C12.4183 16 16 12.4183 16 8C16 3.58172 12.4183 0 8 0C3.58172 0 0 3.58172 0 8C0 12.4183 3.58172 16 8 16ZM6.25 7H7H7.74999C8.30227 7 8.74999 7.44772 8.74999 8V11.5V12.25H7.24999V11.5V8.5H7H6.25V7ZM8 6C8.55229 6 9 5.55228 9 5C9 4.44772 8.55229 4 8 4C7.44772 4 7 4.44772 7 5C7 5.55228 7.44772 6 8 6Z\"\n        fill=\"currentColor\"\n      ></path>\n    </svg>\n  );\n};\n\nexport const LoadingIcon = () => {\n  return (\n    <svg\n      height=\"16\"\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 16 16\"\n      width=\"16\"\n      style={{ color: \"currentcolor\" }}\n    >\n      <g clipPath=\"url(#clip0_2393_1490)\">\n        <path d=\"M8 0V4\" stroke=\"currentColor\" strokeWidth=\"1.5\"></path>\n        <path\n          opacity=\"0.5\"\n          d=\"M8 16V12\"\n          stroke=\"currentColor\"\n          strokeWidth=\"1.5\"\n        ></path>\n        <path\n          opacity=\"0.9\"\n          d=\"M3.29773 1.52783L5.64887 4.7639\"\n          stroke=\"currentColor\"\n          strokeWidth=\"1.5\"\n        ></path>\n        <path\n          opacity=\"0.1\"\n          d=\"M12.7023 1.52783L10.3511 4.7639\"\n          stroke=\"currentColor\"\n          strokeWidth=\"1.5\"\n        ></path>\n        <path\n          opacity=\"0.4\"\n          d=\"M12.7023 14.472L10.3511 11.236\"\n          stroke=\"currentColor\"\n          strokeWidth=\"1.5\"\n        ></path>\n        <path\n          opacity=\"0.6\"\n          d=\"M3.29773 14.472L5.64887 11.236\"\n          stroke=\"currentColor\"\n          strokeWidth=\"1.5\"\n        ></path>\n        <path\n          opacity=\"0.2\"\n          d=\"M15.6085 5.52783L11.8043 6.7639\"\n          stroke=\"currentColor\"\n          strokeWidth=\"1.5\"\n        ></path>\n        <path\n          opacity=\"0.7\"\n          d=\"M0.391602 10.472L4.19583 9.23598\"\n          stroke=\"currentColor\"\n          strokeWidth=\"1.5\"\n        ></path>\n        <path\n          opacity=\"0.3\"\n          d=\"M15.6085 10.4722L11.8043 9.2361\"\n          stroke=\"currentColor\"\n          strokeWidth=\"1.5\"\n        ></path>\n        <path\n          opacity=\"0.8\"\n          d=\"M0.391602 5.52783L4.19583 6.7639\"\n          stroke=\"currentColor\"\n          strokeWidth=\"1.5\"\n        ></path>\n      </g>\n      <defs>\n        <clipPath id=\"clip0_2393_1490\">\n          <rect width=\"16\" height=\"16\" fill=\"white\"></rect>\n        </clipPath>\n      </defs>\n    </svg>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;AAAO,MAAM,aAAa,CAAC,EAAE,OAAO,EAAE,EAAE;IACtC,qBACE,wPAAC;QACC,QAAQ;QACR,gBAAe;QACf,SAAQ;QACR,OAAO;QACP,OAAO;YAAE,OAAO;QAAe;kBAE/B,cAAA,wPAAC;YACC,UAAS;YACT,UAAS;YACT,GAAE;YACF,MAAK;;;;;;;;;;;AAIb;AAEO,MAAM,kBAAkB,CAAC,EAAE,OAAO,EAAE,EAAE;IAC3C,qBACE,wPAAC;QACC,QAAQ;QACR,gBAAe;QACf,SAAQ;QACR,OAAO;QACP,OAAO;YAAE,OAAO;QAAe;kBAE/B,cAAA,wPAAC;YACC,UAAS;YACT,UAAS;YACT,GAAE;YACF,MAAK;;;;;;;;;;;AAIb;AAEO,MAAM,cAAc;IACzB,qBACE,wPAAC;QACC,QAAO;QACP,gBAAe;QACf,SAAQ;QACR,OAAM;QACN,OAAO;YAAE,OAAO;QAAe;;0BAE/B,wPAAC;gBAAE,UAAS;;kCACV,wPAAC;wBAAK,GAAE;wBAAS,QAAO;wBAAe,aAAY;;;;;;kCACnD,wPAAC;wBACC,SAAQ;wBACR,GAAE;wBACF,QAAO;wBACP,aAAY;;;;;;kCAEd,wPAAC;wBACC,SAAQ;wBACR,GAAE;wBACF,QAAO;wBACP,aAAY;;;;;;kCAEd,wPAAC;wBACC,SAAQ;wBACR,GAAE;wBACF,QAAO;wBACP,aAAY;;;;;;kCAEd,wPAAC;wBACC,SAAQ;wBACR,GAAE;wBACF,QAAO;wBACP,aAAY;;;;;;kCAEd,wPAAC;wBACC,SAAQ;wBACR,GAAE;wBACF,QAAO;wBACP,aAAY;;;;;;kCAEd,wPAAC;wBACC,SAAQ;wBACR,GAAE;wBACF,QAAO;wBACP,aAAY;;;;;;kCAEd,wPAAC;wBACC,SAAQ;wBACR,GAAE;wBACF,QAAO;wBACP,aAAY;;;;;;kCAEd,wPAAC;wBACC,SAAQ;wBACR,GAAE;wBACF,QAAO;wBACP,aAAY;;;;;;kCAEd,wPAAC;wBACC,SAAQ;wBACR,GAAE;wBACF,QAAO;wBACP,aAAY;;;;;;;;;;;;0BAGhB,wPAAC;0BACC,cAAA,wPAAC;oBAAS,IAAG;8BACX,cAAA,wPAAC;wBAAK,OAAM;wBAAK,QAAO;wBAAK,MAAK;;;;;;;;;;;;;;;;;;;;;;AAK5C"}},
    {"offset": {"line": 445, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 450, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/(preview)/components/PreviewCard.tsx"],"sourcesContent":["import {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  Divider,\n  Link,\n  Image,\n} from \"@nextui-org/react\";\n\nexport default function PreviewCard({ planet }:any) {\n  return (\n    <Card className=\"max-w-[400px] fixed bottom-4 right-4\">\n      <CardHeader className=\"flex gap-3\">\n        <Image\n          alt={`${planet.object_name} image`}\n          height={40}\n          radius=\"sm\"\n          src={`/textures/${planet.object_name.toLowerCase().replace(\"planet_\", \"\")}.jpg`} // Assuming you have planet textures with appropriate names\n          // src = \"../favicon.ico\"\n          width={40}\n        />\n        <div className=\"flex flex-col\">\n          <p className=\"text-md\">{planet.object_name}</p>\n          <p className=\"text-small text-default-500\">Orbital Info</p>\n        </div>\n      </CardHeader>\n      <Divider />\n      <CardBody>\n        <p>Details about {planet.object_name}:</p>\n        <p>Eccentricity: {planet.e}</p>\n        <p>Perihelion: {planet.q_au_1} AU</p>\n        <p>Inclination: {planet.i_deg}°</p>\n        <p>Orbital Period: {planet.p_yr} years</p>\n      </CardBody>\n      <Divider />\n      <CardFooter>\n        <Link\n          isExternal\n          showAnchorIcon\n          href={`https://en.wikipedia.org/wiki/${planet.object_name.replace(\"planet_\", \"\")}`}\n        >\n          Learn more about {planet.object_name.replace(\"planet_\", \"\")}\n        </Link>\n      </CardFooter>\n    </Card>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAUe,SAAS,YAAY,EAAE,MAAM,EAAM;IAChD,qBACE,wPAAC,6MAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,wPAAC,0NAAA,CAAA,aAAU;gBAAC,WAAU;;kCACpB,wPAAC,gNAAA,CAAA,QAAK;wBACJ,KAAK,CAAC,EAAE,OAAO,WAAW,CAAC,MAAM,CAAC;wBAClC,QAAQ;wBACR,QAAO;wBACP,KAAK,CAAC,UAAU,EAAE,OAAO,WAAW,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,IAAI,IAAI,CAAC;wBAC/E,yBAAyB;wBACzB,OAAO;;;;;;kCAET,wPAAC;wBAAI,WAAU;;0CACb,wPAAC;gCAAE,WAAU;0CAAW,OAAO,WAAW;;;;;;0CAC1C,wPAAC;gCAAE,WAAU;0CAA8B;;;;;;;;;;;;;;;;;;0BAG/C,wPAAC,sNAAA,CAAA,UAAO;;;;;0BACR,wPAAC,sNAAA,CAAA,WAAQ;;kCACP,wPAAC;;4BAAE;4BAAe,OAAO,WAAW;4BAAC;;;;;;;kCACrC,wPAAC;;4BAAE;4BAAe,OAAO,CAAC;;;;;;;kCAC1B,wPAAC;;4BAAE;4BAAa,OAAO,MAAM;4BAAC;;;;;;;kCAC9B,wPAAC;;4BAAE;4BAAc,OAAO,KAAK;4BAAC;;;;;;;kCAC9B,wPAAC;;4BAAE;4BAAiB,OAAO,IAAI;4BAAC;;;;;;;;;;;;;0BAElC,wPAAC,sNAAA,CAAA,UAAO;;;;;0BACR,wPAAC,0NAAA,CAAA,aAAU;0BACT,cAAA,wPAAC,6MAAA,CAAA,OAAI;oBACH,UAAU;oBACV,cAAc;oBACd,MAAM,CAAC,8BAA8B,EAAE,OAAO,WAAW,CAAC,OAAO,CAAC,WAAW,IAAI,CAAC;;wBACnF;wBACmB,OAAO,WAAW,CAAC,OAAO,CAAC,WAAW;;;;;;;;;;;;;;;;;;AAKlE"}},
    {"offset": {"line": 612, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 617, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/(preview)/components/Orrery.jsx"],"sourcesContent":["// \"use client\";\n\n// import React, { useEffect, useRef, useState } from \"react\";\n// import * as THREE from \"three\";\n// import { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\n// import PreviewCard from \"./PreviewCard\";\n\n// const orbitScaleFactor = 175; // Adjusted for better spacing in scene\n\n// const loadTexture = (path) => {\n//   return new THREE.TextureLoader().load(path);\n// };\n\n// const Orrery = () => {\n//   const mountRef = useRef(null);\n//   const [orbitalData, setOrbitalData] = useState([]);\n//   const [selectedPlanet, setSelectedPlanet] = useState(null);\n//   const [isCardVisible, setCardVisible] = useState(false);\n\n//   const planetSizes = {\n//     planet_Mercury: 0.38,\n//     planet_Venus: 0.95,\n//     planet_Earth: 1,\n//     planet_Mars: 0.53,\n//     planet_Jupiter: 11.21,\n//     planet_Saturn: 9.45,\n//     planet_Uranus: 4.01,\n//     planet_Neptune: 3.88,\n//     moon: 0.27, // Moon size relative to EarthM\n//   };\n\n//   const cometTextures = [\n//     \"/textures/comet1.jpg\",\n//     \"/textures/comet2.jpg\",\n//     \"/textures/comet3.jpg\",\n//     \"/textures/comet4.jpg\",\n//   ];\n//   const slider = 5; // Number of planets to show\n\n//   useEffect(() => {\n//     fetch(\"/orbitalData.json\")\n//       .then((response) => response.json())\n//       .then((data) => setOrbitalData(data.slice(0, slider + 8)))\n//       //.then((data) => setOrbitalData(data))\n//       .catch((error) => console.error(\"Error fetching data:\", error));\n//   }, []);\n\n//   useEffect(() => {\n//     if (orbitalData.length === 0) return;\n\n//     const scene = new THREE.Scene();\n//     const camera = new THREE.PerspectiveCamera(\n//       75,\n//       window.innerWidth / window.innerHeight,\n//       0.1,\n//       10000\n//     );\n//     const renderer = new THREE.WebGLRenderer({ antialias: true });\n//     renderer.setSize(window.innerWidth, window.innerHeight);\n//     mountRef.current.appendChild(renderer.domElement);\n\n//     camera.position.set(0, -400, 100);\n\n//     const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n//     directionalLight.position.set(0, 0, 10).normalize();\n//     scene.add(directionalLight);\n\n//     const hemisphereLight = new THREE.HemisphereLight(0xffffff, 0x444444, 1); // Sky color, ground color\n//     scene.add(hemisphereLight);\n\n//     // Background: Starfield\n//     const createStarfieldBackground = () => {\n//       const starGeometry = new THREE.SphereGeometry(7500, 64, 64);\n//       const starMaterial = new THREE.MeshBasicMaterial({\n//         map: new THREE.TextureLoader().load(\"/textures/8k_stars.jpg\"),\n//         side: THREE.BackSide, // Render inside of the sphere\n//       });\n//       const starfield = new THREE.Mesh(starGeometry, starMaterial);\n//       return starfield;\n//     };\n\n//     const starfield = createStarfieldBackground();\n//     scene.add(starfield);\n\n//     // Create the sun\n//     const sunTexture = loadTexture(\"/textures/sun.jpg\"); // Load the sun texture\n//     const sunGeometry = new THREE.SphereGeometry(50, 64, 64); // Create a sphere geometry for the sun\n\n//     // Create the sun material with emissive properties\n//     const sunMaterial = new THREE.MeshStandardMaterial({\n//       map: sunTexture,\n//       emissive: 0xffff00,\n//       emissiveIntensity: 0.5,\n//       metalness: 0.1, // Slightly metallic\n//       roughness: 0.5, // Adjust for a smoother surface\n//       transparent: true,\n//       depthWrite: false,\n//     });\n\n//     // Create the sun mesh\n//     const sun = new THREE.Mesh(sunGeometry, sunMaterial);\n//     sun.position.set(0, 0, 0); // Set position to the origin\n//     scene.add(sun); // Add the sun to the scene\n//     const ambientLight = new THREE.AmbientLight(0xffffff, 0.5); // Softer global light\n//     scene.add(ambientLight);\n\n//     // Create a PointLight for the sun\n//     const sunLight = new THREE.PointLight(0xffff00, 2, 1000); // Color, intensity, and distance\n//     sunLight.position.set(0, 0, 0); // Position at the center\n//     scene.add(sunLight); // Add the light to the scene\n\n//     // Create controls\n//     const controls = new OrbitControls(camera, renderer.domElement);\n//     controls.enableDamping = true;\n//     controls.dampingFactor = 0.25;\n//     controls.enableZoom = true;\n//     controls.minDistance = 25; // Minimum zoom distance (how close you can zoom in) 75\n//     controls.maxDistance = 2500; // Maximum zoom distance (how far you can zoom out)\n\n//     const planets = [];\n\n//     orbitalData.forEach((obj, index) => {\n//       const {\n//         e,\n//         q_au_1,\n//         i_deg,\n//         longitudeOfAscendingNode,\n//         object_name,\n//         p_yr,\n//         rotation_period,\n//       } = obj;\n\n//       // Calculate orbit points\n//       const a = (parseFloat(q_au_1) / (1 - e)) * orbitScaleFactor;\n//       const b = a * Math.sqrt(1 - e * e);\n//       const points = [];\n//       for (let i = 0; i <= 1000; i++) {\n//         const theta = (i / 1000) * Math.PI * 2;\n//         const x = a * Math.cos(theta);\n//         const y = b * Math.sin(theta);\n//         points.push(new THREE.Vector3(x, y, 0));\n//       }\n\n//       // Orbit Line\n//       const orbitGeometry = new THREE.BufferGeometry().setFromPoints(points);\n//       const orbitMaterial = new THREE.LineBasicMaterial({ color: 0x888888 });\n//       const orbitLine = new THREE.Line(orbitGeometry, orbitMaterial);\n\n//       // Orbit Group\n//       const orbitGroup = new THREE.Group();\n//       orbitGroup.add(orbitLine);\n//       orbitGroup.rotation.z = THREE.MathUtils.degToRad(\n//         longitudeOfAscendingNode || 0\n//       );\n//       orbitGroup.rotation.x = THREE.MathUtils.degToRad(i_deg || 0);\n//       scene.add(orbitGroup);\n\n//       let texture;\n//       if (object_name.includes(\"Earth\"))\n//         texture = loadTexture(\"/textures/earth.jpg\");\n//       else if (object_name.includes(\"Mars\"))\n//         texture = loadTexture(\"/textures/mars.jpg\");\n//       else if (object_name.includes(\"Jupiter\"))\n//         texture = loadTexture(\"/textures/jupiter.jpg\");\n//       else if (object_name.includes(\"Mercury\"))\n//         texture = loadTexture(\"/textures/mercury.jpg\");\n//       else if (object_name.includes(\"Venus\"))\n//         texture = loadTexture(\"/textures/venus.jpg\");\n//       else if (object_name.includes(\"Uranus\"))\n//         texture = loadTexture(\"/textures/uranus.jpg\");\n//       else if (object_name.includes(\"Neptune\"))\n//         texture = loadTexture(\"/textures/neptune.jpg\");\n//       else if (object_name.includes(\"Saturn\"))\n//         texture = loadTexture(\"/textures/saturn.jpg\");\n//       else {\n//         const randomIndex = Math.floor(Math.random() * cometTextures.length);\n//         texture = loadTexture(cometTextures[randomIndex]);\n//       }\n\n//       const sizeFactor = planetSizes[object_name] || 1;\n//       const planetGeometry = new THREE.SphereGeometry(5 * sizeFactor, 32, 32);\n//       const planetMaterial = new THREE.MeshStandardMaterial({\n//         map: texture,\n//         metalness: 0.5,\n//         roughness: 0.3,\n//       });\n\n//       const planet = new THREE.Mesh(planetGeometry, planetMaterial);\n\n//       scene.add(planet);\n\n//       // Add Moon for Earth\n//       let moon;\n//       if (object_name.includes(\"Earth\")) {\n//         const moonTexture = loadTexture(\"/textures/moon.jpg\");\n//         const moonGeometry = new THREE.SphereGeometry(\n//           5 * planetSizes[\"moon\"],\n//           32,\n//           32\n//         );\n//         const moonMaterial = new THREE.MeshStandardMaterial({\n//           map: moonTexture,\n//           metalness: 0.1,\n//           roughness: 0.7, // Adjust for a more realistic surface\n//         });\n//         moon = new THREE.Mesh(moonGeometry, moonMaterial);\n//         planet.add(moon);\n//       }\n\n//       let saturnRings;\n//       if (object_name.includes(\"planet_Saturn\")) {\n//         const ringRadius = 100; // Radius of the torus\n//         const tubeRadius = 35; // Thickness of the torus\n\n//         // Create the torus geometry\n//         const ringGeometry = new THREE.TorusGeometry(\n//           ringRadius,\n//           tubeRadius,\n//           2,\n//           50000\n//         );\n\n//         const ringMaterial = new THREE.MeshStandardMaterial({\n//           map: loadTexture(\"/textures/saturn-rings.png\"),\n//           side: THREE.DoubleSide,\n//           transparent: true, // Allow for transparency if needed\n//         });\n\n//         saturnRings = new THREE.Mesh(ringGeometry, ringMaterial);\n//         saturnRings.rotation.x = Math.PI / 1.7; // Rotate the ring to lie in the XZ plane\n//         planet.add(saturnRings); // Attach the torus to Saturn\n//       }\n\n//       const rotationSpeed = (2 * Math.PI) / (rotation_period * 60);\n\n//       planets.push({\n//         planet,\n//         moon,\n//         saturnRings,\n//         orbitGroup,\n//         points,\n//         speed: ((2 * Math.PI) / Math.abs(parseFloat(p_yr))) * 0.05,\n//         // speed: 0,\n//         currentIndex: 0,\n//         object_name,\n//         rotationSpeed,\n//       });\n//     });\n\n//     const animate = () => {\n//       requestAnimationFrame(animate);\n\n//       planets.forEach((data) => {\n//         const {\n//           planet,\n//           points,\n//           orbitGroup,\n//           speed,\n//           moon,\n//           saturnRings,\n//           object_name,\n//           rotationSpeed,\n//         } = data;\n//         data.currentIndex = (data.currentIndex + speed) % points.length;\n//         const point1 = points[Math.floor(data.currentIndex)];\n//         const point2 = points[Math.ceil(data.currentIndex) % points.length];\n//         const t = data.currentIndex % 1;\n\n//         // Smooth position interpolation\n//         const interpolatedPosition = new THREE.Vector3().lerpVectors(\n//           point1,\n//           point2,\n//           t\n//         );\n//         planet.position.copy(interpolatedPosition);\n//         planet.position.applyMatrix4(orbitGroup.matrixWorld); // Apply orbital transformations\n\n//         planet.rotation.x = 190;\n\n//         if (object_name.includes(\"planet_Saturn\")) {\n//           planet.rotation.y = 0;\n//         }\n//         planet.rotation.y += 0.01; // Rotate the planet\n\n//         // Moon orbit around Earth\n//         if (moon) {\n//           const moonOrbitRadius = 30; // Approximate distance between Earth and Moon\n//           const moonSpeed = 0.25; // Speed of Moon orbiting Earth\n//           moon.position.set(\n//             Math.cos(data.currentIndex * moonSpeed) * moonOrbitRadius,\n//             Math.sin(data.currentIndex * moonSpeed) * moonOrbitRadius,\n//             0\n//           );\n//         }\n//       });\n\n//       controls.update();\n//       renderer.render(scene, camera);\n//     };\n\n//     animate();\n\n//     return () => {\n//       mountRef.current.removeChild(renderer.domElement);\n//     };\n//   }, [orbitalData]);\n\n//   return <div ref={mountRef} />;\n// };\n\n// export default Orrery;\n\n\n\"use client\";\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport PreviewCard from \"./PreviewCard\"; // Import the PreviewCard component\n\nconst orbitScaleFactor = 175; // Adjusted for better spacing in scene\n\nconst loadTexture = (path) => {\n  return new THREE.TextureLoader().load(path);\n};\n\nconst Orrery = () => {\n  const mountRef = useRef(null);\n  const [orbitalData, setOrbitalData] = useState([]);\n  const [selectedPlanet, setSelectedPlanet] = useState(null); // Manage the selected planet\n  const [isCardVisible, setCardVisible] = useState(false); // Control card visibility\n\n  const planetSizes = {\n    planet_Mercury: 0.38,\n    planet_Venus: 0.95,\n    planet_Earth: 1,\n    planet_Mars: 0.53,\n    planet_Jupiter: 11.21,\n    planet_Saturn: 9.45,\n    planet_Uranus: 4.01,\n    planet_Neptune: 3.88,\n    moon: 0.27,\n  };\n\n  const cometTextures = [\n    \"/textures/comet1.jpg\",\n    \"/textures/comet2.jpg\",\n    \"/textures/comet3.jpg\",\n    \"/textures/comet4.jpg\",\n  ];\n\n  useEffect(() => {\n    fetch(\"/orbitalData.json\")\n      .then((response) => response.json())\n      .then((data) => setOrbitalData(data.slice(0, 13)))\n      .catch((error) => console.error(\"Error fetching data:\", error));\n  }, []);\n\n  useEffect(() => {\n    if (orbitalData.length === 0) return;\n\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(\n      75,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      10000\n    );\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    mountRef.current.appendChild(renderer.domElement);\n\n    camera.position.set(0, -400, 100);\n\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n    directionalLight.position.set(0, 0, 10).normalize();\n    scene.add(directionalLight);\n\n    const hemisphereLight = new THREE.HemisphereLight(0xffffff, 0x444444, 1);\n    scene.add(hemisphereLight);\n\n    // Starfield background\n    const createStarfieldBackground = () => {\n      const starGeometry = new THREE.SphereGeometry(7500, 64, 64);\n      const starMaterial = new THREE.MeshBasicMaterial({\n        map: new THREE.TextureLoader().load(\"/textures/8k_stars.jpg\"),\n        side: THREE.BackSide,\n      });\n      const starfield = new THREE.Mesh(starGeometry, starMaterial);\n      return starfield;\n    };\n\n    const starfield = createStarfieldBackground();\n    scene.add(starfield);\n\n    // Create the Sun\n    const sunTexture = loadTexture(\"/textures/sun.jpg\");\n    const sunGeometry = new THREE.SphereGeometry(50, 64, 64);\n    const sunMaterial = new THREE.MeshStandardMaterial({\n      map: sunTexture,\n      emissive: 0xffff00,\n      emissiveIntensity: 0.5,\n      metalness: 0.1,\n      roughness: 0.5,\n      transparent: true,\n      depthWrite: false,\n    });\n    const sun = new THREE.Mesh(sunGeometry, sunMaterial);\n    scene.add(sun);\n\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\n    scene.add(ambientLight);\n\n    const sunLight = new THREE.PointLight(0xffff00, 2, 1000);\n    scene.add(sunLight);\n\n    // Create controls\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.25;\n    controls.enableZoom = true;\n    controls.minDistance = 25;\n    controls.maxDistance = 2500;\n\n    const planets = [];\n\n    orbitalData.forEach((obj) => {\n      const {\n        e,\n        q_au_1,\n        i_deg,\n        node_deg, // Adjusting from \"longitudeOfAscendingNode\" to \"node_deg\"\n        object_name,\n        p_yr,\n        rotation_period,\n      } = obj;\n\n      const a = (parseFloat(q_au_1) / (1 - e)) * orbitScaleFactor;\n      const b = a * Math.sqrt(1 - e * e);\n      const points = [];\n      for (let i = 0; i <= 1000; i++) {\n        const theta = (i / 1000) * Math.PI * 2;\n        const x = a * Math.cos(theta);\n        const y = b * Math.sin(theta);\n        points.push(new THREE.Vector3(x, y, 0));\n      }\n\n      const orbitGeometry = new THREE.BufferGeometry().setFromPoints(points);\n      const orbitMaterial = new THREE.LineBasicMaterial({ color: 0x888888 });\n      const orbitLine = new THREE.Line(orbitGeometry, orbitMaterial);\n\n      const orbitGroup = new THREE.Group();\n      orbitGroup.add(orbitLine);\n      orbitGroup.rotation.z = THREE.MathUtils.degToRad(node_deg || 0);\n      orbitGroup.rotation.x = THREE.MathUtils.degToRad(i_deg || 0);\n      scene.add(orbitGroup);\n\n      let texture;\n      switch (object_name) {\n        case \"planet_Mercury\":\n          texture = loadTexture(\"/textures/mercury.jpg\");\n          break;\n        case \"planet_Venus\":\n          texture = loadTexture(\"/textures/venus.jpg\");\n          break;\n        case \"planet_Earth\":\n          texture = loadTexture(\"/textures/earth.jpg\");\n          break;\n        case \"planet_Mars\":\n          texture = loadTexture(\"/textures/mars.jpg\");\n          break;\n        case \"planet_Jupiter\":\n          texture = loadTexture(\"/textures/jupiter.jpg\");\n          break;\n        case \"planet_Saturn\":\n          texture = loadTexture(\"/textures/saturn.jpg\");\n          break;\n        case \"planet_Uranus\":\n          texture = loadTexture(\"/textures/uranus.jpg\");\n          break;\n        case \"planet_Neptune\":\n          texture = loadTexture(\"/textures/neptune.jpg\");\n          break;\n        default:\n          const randomIndex = Math.floor(Math.random() * cometTextures.length);\n          texture = loadTexture(cometTextures[randomIndex]);\n          break;\n      }\n\n      const sizeFactor = planetSizes[object_name] || 1;\n      const planetGeometry = new THREE.SphereGeometry(5 * sizeFactor, 32, 32);\n      const planetMaterial = new THREE.MeshStandardMaterial({\n        map: texture,\n        metalness: 0.5,\n        roughness: 0.3,\n      });\n\n      const planet = new THREE.Mesh(planetGeometry, planetMaterial);\n      scene.add(planet);\n\n      // Add planet click event\n      planet.userData = obj;\n      planet.onClick = () => {\n        setSelectedPlanet(obj);\n        setCardVisible(true);\n      };\n\n      planets.push({\n        planet,\n        orbitGroup,\n        points,\n        speed: ((2 * Math.PI) / Math.abs(parseFloat(p_yr))) * 0.05,\n        currentIndex: 0,\n      });\n    });\n\n    // Detect mouse clicks on planets\n    const raycaster = new THREE.Raycaster();\n    const mouse = new THREE.Vector2();\n\n    const onMouseClick = (event) => {\n      mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n      mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n\n      raycaster.setFromCamera(mouse, camera);\n      const intersects = raycaster.intersectObjects(planets.map((p) => p.planet));\n\n      if (intersects.length > 0) {\n        const clickedPlanet = intersects[0].object;\n        clickedPlanet.onClick();\n      } else {\n        setCardVisible(false);\n        setSelectedPlanet(null);\n      }\n    };\n\n    window.addEventListener(\"click\", onMouseClick);\n\n    const animate = () => {\n      requestAnimationFrame(animate);\n      planets.forEach((data) => {\n        const { planet, points, orbitGroup, speed } = data;\n        data.currentIndex = (data.currentIndex + speed) % points.length;\n        const point1 = points[Math.floor(data.currentIndex)];\n        const point2 = points[Math.ceil(data.currentIndex) % points.length];\n        const t = data.currentIndex % 1;\n        const interpolatedPosition = new THREE.Vector3().lerpVectors(\n          point1,\n          point2,\n          t\n        );\n        planet.position.copy(interpolatedPosition);\n        planet.position.applyMatrix4(orbitGroup.matrixWorld);\n        planet.rotation.y += 0.01;\n      });\n      controls.update();\n      renderer.render(scene, camera);\n    };\n\n    animate();\n\n    return () => {\n      window.removeEventListener(\"click\", onMouseClick);\n      mountRef.current.removeChild(renderer.domElement);\n    };\n  }, [orbitalData]);\n\n  return (\n    <div>\n      <div ref={mountRef} style={{ width: \"100%\", height: \"100vh\" }}></div>\n      {isCardVisible && selectedPlanet && <PreviewCard planet={selectedPlanet} />}\n    </div>\n  );\n};\n\nexport default Orrery;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1123, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1128, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/(preview)/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { Input } from \"@/components/ui/input\";\nimport { Message } from \"ai\";\nimport { useChat } from \"ai/react\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport ReactMarkdown, { Options } from \"react-markdown\";\nimport React from \"react\";\nimport ProjectOverview from \"@/components/project-overview\";\nimport { LoadingIcon } from \"@/components/icons\";\nimport { cn } from \"@/lib/utils\";\nimport { toast } from \"sonner\";\nimport FileUpload from \"@/components/fileUpload\";\nimport { Button } from \"@/components/ui/button\";\nimport { MessageCircle, X } from \"lucide-react\";\nimport Orrery from \"../(preview)/components/Orrery\"; // Import the Orrery component\n\nexport default function Chat() {\n  const [toolCall, setToolCall] = useState<string>();\n  const { messages, input, handleInputChange, handleSubmit, isLoading } =\n    useChat({\n      maxToolRoundtrips: 4,\n      onToolCall({ toolCall }) {\n        setToolCall(toolCall.toolName);\n      },\n      onError: (error) => {\n        toast.error(\"You've been rate limited, please try again later!\");\n      },\n    });\n\n  const [isExpanded, setIsExpanded] = useState<boolean>(false);\n  const [isChatVisible, setIsChatVisible] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (messages.length > 0) setIsExpanded(true);\n  }, [messages]);\n\n  const currentToolCall = useMemo(() => {\n    const tools = messages?.slice(-1)[0]?.toolInvocations;\n    if (tools && toolCall === tools[0].toolName) {\n      return tools[0].toolName;\n    } else {\n      return undefined;\n    }\n  }, [toolCall, messages]);\n\n  const awaitingResponse = useMemo(() => {\n    if (\n      isLoading &&\n      currentToolCall === undefined &&\n      messages.slice(-1)[0].role === \"user\"\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }, [isLoading, currentToolCall, messages]);\n\n  const userQuery: Message | undefined = messages\n    .filter((m) => m.role === \"user\")\n    .slice(-1)[0];\n  const lastAssistantMessage: Message | undefined = messages\n    .filter((m) => m.role !== \"user\")\n    .slice(-1)[0];\n\n  return (\n    <div className=\"min-h-screen w-full dark:bg-neutral-900 relative\">\n      <AnimatePresence>\n        {isChatVisible && (\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: 20 }}\n            transition={{ type: \"spring\", stiffness: 300, damping: 30 }}\n            className=\"fixed bottom-20 right-4 w-full max-w-[500px] bg-white dark:bg-neutral-800 rounded-lg shadow-lg overflow-hidden\"\n          >\n            <div className=\"p-4 flex justify-between items-center border-b dark:border-neutral-700\">\n              <h2 className=\"text-lg font-semibold dark:text-white\">Chat</h2>\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                onClick={() => setIsChatVisible(false)}\n              >\n                <X className=\"h-6 w-6\" />\n              </Button>\n            </div>\n            <div className=\"p-4\">\n              <ProjectOverview />\n              <motion.div\n                animate={{\n                  minHeight: isExpanded ? 200 : 0,\n                  padding: isExpanded ? 12 : 0,\n                }}\n                transition={{\n                  type: \"spring\",\n                  bounce: 0.5,\n                }}\n                className={cn(\n                  \"rounded-lg w-full \",\n                  isExpanded\n                    ? \"bg-neutral-200 dark:bg-neutral-800\"\n                    : \"bg-transparent\"\n                )}\n              >\n                <div className=\"flex flex-col w-full justify-between gap-2\">\n                  <form onSubmit={handleSubmit} className=\"flex space-x-2\">\n                    <Input\n                      className={`bg-neutral-100 text-base w-full text-neutral-700 dark:bg-neutral-700 dark:placeholder:text-neutral-400 dark:text-neutral-300`}\n                      minLength={3}\n                      required\n                      value={input}\n                      placeholder={\"Ask me anything...\"}\n                      onChange={handleInputChange}\n                    />\n                  </form>\n                  <motion.div\n                    transition={{\n                      type: \"spring\",\n                    }}\n                    className=\"min-h-fit flex flex-col gap-2\"\n                  >\n                    <AnimatePresence>\n                      {awaitingResponse || currentToolCall ? (\n                        <div className=\"px-2 min-h-12\">\n                          <div className=\"dark:text-neutral-400 text-neutral-500 text-sm w-fit mb-1\">\n                            {userQuery?.content}\n                          </div>\n                          <Loading tool={currentToolCall} />\n                        </div>\n                      ) : lastAssistantMessage ? (\n                        <div className=\"px-2 min-h-12\">\n                          <div className=\"dark:text-neutral-400 text-neutral-500 text-sm w-fit mb-1\">\n                            {userQuery?.content}\n                          </div>\n                          <AssistantMessage message={lastAssistantMessage} />\n                        </div>\n                      ) : null}\n                    </AnimatePresence>\n                  </motion.div>\n                </div>\n              </motion.div>\n            </div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n      <Button\n        className=\"fixed bottom-4 right-4 rounded-full shadow-lg\"\n        size=\"icon\"\n        onClick={() => setIsChatVisible(!isChatVisible)}\n      >\n        <MessageCircle className=\"h-6 w-6\" />\n      </Button>\n      {/* Orrery Component renders both planets and PreviewCard when a planet is clicked */}\n      <Orrery />\n    </div>\n  );\n}\n\nconst AssistantMessage = ({ message }: { message: Message | undefined }) => {\n  if (message === undefined) return \"HELLO\";\n\n  return (\n    <AnimatePresence mode=\"wait\">\n      <motion.div\n        key={message.id}\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n        className=\"whitespace-pre-wrap font-mono anti text-sm text-neutral-800 dark:text-neutral-200 overflow-hidden\"\n        id=\"markdown\"\n      >\n        <MemoizedReactMarkdown\n          className={\"max-h-72 overflow-y-scroll no-scrollbar-gutter\"}\n        >\n          {message.content}\n        </MemoizedReactMarkdown>\n      </motion.div>\n    </AnimatePresence>\n  );\n};\n\nconst Loading = ({ tool }: { tool?: string }) => {\n  const toolName =\n    tool === \"getInformation\"\n      ? \"Getting information\"\n      : tool === \"addResource\"\n      ? \"Adding information\"\n      : \"Thinking\";\n\n  return (\n    <AnimatePresence mode=\"wait\">\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n        transition={{ type: \"spring\" }}\n        className=\"overflow-hidden flex justify-start items-center\"\n      >\n        <div className=\"flex flex-row gap-2 items-center\">\n          <div className=\"animate-spin dark:text-neutral-400 text-neutral-500\">\n            <LoadingIcon />\n          </div>\n          <div className=\"text-neutral-500 dark:text-neutral-400 text-sm\">\n            {toolName}...\n          </div>\n        </div>\n      </motion.div>\n    </AnimatePresence>\n  );\n};\n\nconst MemoizedReactMarkdown: React.FC<Options> = React.memo(\n  ReactMarkdown,\n  (prevProps, nextProps) =>\n    prevProps.children === nextProps.children &&\n    prevProps.className === nextProps.className\n);\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1518, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}